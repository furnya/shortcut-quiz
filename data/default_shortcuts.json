[
    {
        "key": "escape escape",
        "command": "workbench.action.exitZenMode",
        "when": "inZenMode",
        "title_ai": "Exit Zen Mode"
    },
    {
        "key": "shift+escape",
        "command": "closeReferenceSearch",
        "when": "inReferenceSearchEditor && !config.editor.stablePeek",
        "title_ai": "Close Reference Search"
    },
    {
        "key": "escape",
        "command": "closeReferenceSearch",
        "when": "inReferenceSearchEditor && !config.editor.stablePeek",
        "title_ai": "Close Reference Search"
    },
    {
        "key": "shift+escape",
        "command": "editor.action.inlineSuggest.hide",
        "when": "inInlineEditsPreviewEditor",
        "title_ai": "Hide Inline Suggestion",
        "title": "Hide Inline Suggestion"
    },
    {
        "key": "escape",
        "command": "editor.action.inlineSuggest.hide",
        "when": "inInlineEditsPreviewEditor",
        "title_ai": "Hide Inline Suggestion",
        "title": "Hide Inline Suggestion"
    },
    {
        "key": "escape",
        "command": "editor.closeTestPeek",
        "when": "testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek",
        "title_ai": "Close Test Peek"
    },
    {
        "key": "shift+escape",
        "command": "cancelSelection",
        "when": "editorHasSelection && textInputFocus",
        "title_ai": "Cancel Selection"
    },
    {
        "key": "escape",
        "command": "cancelSelection",
        "when": "editorHasSelection && textInputFocus",
        "title_ai": "Cancel Selection"
    },
    {
        "key": "ctrl+end",
        "command": "cursorBottom",
        "when": "textInputFocus",
        "title_ai": "Move cursor to bottom"
    },
    {
        "key": "ctrl+shift+end",
        "command": "cursorBottomSelect",
        "when": "textInputFocus",
        "title_ai": "Select to bottom"
    },
    {
        "key": "ctrl+shift+alt+down",
        "command": "cursorColumnSelectDown",
        "when": "textInputFocus",
        "title_ai": "Column Select Down"
    },
    {
        "key": "ctrl+shift+alt+left",
        "command": "cursorColumnSelectLeft",
        "when": "textInputFocus",
        "title_ai": "Column Select Left"
    },
    {
        "key": "ctrl+shift+alt+pagedown",
        "command": "cursorColumnSelectPageDown",
        "when": "textInputFocus",
        "title_ai": "Column Select Page Down"
    },
    {
        "key": "ctrl+shift+alt+pageup",
        "command": "cursorColumnSelectPageUp",
        "when": "textInputFocus",
        "title_ai": "Column Select Page Up"
    },
    {
        "key": "ctrl+shift+alt+right",
        "command": "cursorColumnSelectRight",
        "when": "textInputFocus",
        "title_ai": "Column Select Right"
    },
    {
        "key": "ctrl+shift+alt+up",
        "command": "cursorColumnSelectUp",
        "when": "textInputFocus",
        "title_ai": "Column Select Up"
    },
    {
        "key": "down",
        "command": "cursorDown",
        "when": "textInputFocus",
        "title_ai": "Move cursor down"
    },
    {
        "key": "ctrl+shift+down",
        "command": "cursorDownSelect",
        "when": "textInputFocus",
        "title_ai": "Select down"
    },
    {
        "key": "shift+down",
        "command": "cursorDownSelect",
        "when": "textInputFocus",
        "title_ai": "Select down"
    },
    {
        "key": "end",
        "command": "cursorEnd",
        "when": "textInputFocus",
        "args": {
            "sticky": false
        },
        "title_ai": "Move cursor to end of line"
    },
    {
        "key": "shift+end",
        "command": "cursorEndSelect",
        "when": "textInputFocus",
        "args": {
            "sticky": false
        },
        "title_ai": "Select to end of line"
    },
    {
        "key": "home",
        "command": "cursorHome",
        "when": "textInputFocus",
        "title_ai": "Move cursor to beginning of line"
    },
    {
        "key": "shift+home",
        "command": "cursorHomeSelect",
        "when": "textInputFocus",
        "title_ai": "Select to beginning of line"
    },
    {
        "key": "left",
        "command": "cursorLeft",
        "when": "textInputFocus",
        "title_ai": "Move cursor left"
    },
    {
        "key": "shift+left",
        "command": "cursorLeftSelect",
        "when": "textInputFocus",
        "title_ai": "Select left"
    },
    {
        "key": "pagedown",
        "command": "cursorPageDown",
        "when": "textInputFocus",
        "title_ai": "Move cursor page down"
    },
    {
        "key": "shift+pagedown",
        "command": "cursorPageDownSelect",
        "when": "textInputFocus",
        "title_ai": "Select page down"
    },
    {
        "key": "pageup",
        "command": "cursorPageUp",
        "when": "textInputFocus",
        "title_ai": "Move cursor page up"
    },
    {
        "key": "shift+pageup",
        "command": "cursorPageUpSelect",
        "when": "textInputFocus",
        "title_ai": "Select page up"
    },
    {
        "key": "right",
        "command": "cursorRight",
        "when": "textInputFocus",
        "title_ai": "Move cursor right"
    },
    {
        "key": "shift+right",
        "command": "cursorRightSelect",
        "when": "textInputFocus",
        "title_ai": "Select right"
    },
    {
        "key": "ctrl+home",
        "command": "cursorTop",
        "when": "textInputFocus",
        "title_ai": "Move cursor to top of file"
    },
    {
        "key": "ctrl+shift+home",
        "command": "cursorTopSelect",
        "when": "textInputFocus",
        "title_ai": "Select to top of file"
    },
    {
        "key": "up",
        "command": "cursorUp",
        "when": "textInputFocus",
        "title_ai": "Move cursor up"
    },
    {
        "key": "ctrl+shift+up",
        "command": "cursorUpSelect",
        "when": "textInputFocus",
        "title_ai": "Select up"
    },
    {
        "key": "shift+up",
        "command": "cursorUpSelect",
        "when": "textInputFocus",
        "title_ai": "Select up"
    },
    {
        "key": "shift+backspace",
        "command": "deleteLeft",
        "when": "textInputFocus",
        "title_ai": "Delete Left"
    },
    {
        "key": "backspace",
        "command": "deleteLeft",
        "when": "textInputFocus",
        "title_ai": "Delete Left"
    },
    {
        "key": "delete",
        "command": "deleteRight",
        "when": "textInputFocus",
        "title_ai": "Delete Right"
    },
    {
        "key": "ctrl+a",
        "command": "editor.action.selectAll",
        "title_ai": "Select All",
        "title": "Select All"
    },
    {
        "key": "ctrl+l",
        "command": "expandLineSelection",
        "when": "textInputFocus",
        "title_ai": "Expand Line Selection",
        "title": "Expand Line Selection"
    },
    {
        "key": "ctrl+down",
        "command": "inlineChat.arrowOutDown",
        "when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorLast && !accessibilityModeEnabled && !isEmbeddedDiffEditor",
        "title_ai": "Arrow Out Down [Inline Chat]"
    },
    {
        "key": "ctrl+up",
        "command": "inlineChat.arrowOutUp",
        "when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorFirst && !accessibilityModeEnabled && !isEmbeddedDiffEditor",
        "title_ai": "Arrow Out Up [Inline Chat]"
    },
    {
        "key": "shift+tab",
        "command": "outdent",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus",
        "title_ai": "Outdent Line"
    },
    {
        "key": "ctrl+shift+z",
        "command": "redo",
        "title_ai": "Redo",
        "title": "Redo"
    },
    {
        "key": "ctrl+y",
        "command": "redo",
        "title_ai": "Redo",
        "title": "Redo"
    },
    {
        "key": "ctrl+down",
        "command": "scrollLineDown",
        "when": "textInputFocus",
        "title_ai": "Scroll Line Down"
    },
    {
        "key": "ctrl+up",
        "command": "scrollLineUp",
        "when": "textInputFocus",
        "title_ai": "Scroll Line Up"
    },
    {
        "key": "alt+pagedown",
        "command": "scrollPageDown",
        "when": "textInputFocus",
        "title_ai": "Scroll Page Down"
    },
    {
        "key": "alt+pageup",
        "command": "scrollPageUp",
        "when": "textInputFocus",
        "title_ai": "Scroll Page Up"
    },
    {
        "key": "tab",
        "command": "tab",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus",
        "title_ai": "Insert Tab"
    },
    {
        "key": "ctrl+z",
        "command": "undo",
        "title_ai": "Undo",
        "title": "Undo"
    },
    {
        "key": "shift+down",
        "command": "cursorColumnSelectDown",
        "when": "editorColumnSelection && textInputFocus",
        "title_ai": "Column Select Down"
    },
    {
        "key": "shift+left",
        "command": "cursorColumnSelectLeft",
        "when": "editorColumnSelection && textInputFocus",
        "title_ai": "Column Select Left"
    },
    {
        "key": "shift+pagedown",
        "command": "cursorColumnSelectPageDown",
        "when": "editorColumnSelection && textInputFocus",
        "title_ai": "Column Select Page Down"
    },
    {
        "key": "shift+pageup",
        "command": "cursorColumnSelectPageUp",
        "when": "editorColumnSelection && textInputFocus",
        "title_ai": "Column Select Page Up"
    },
    {
        "key": "shift+right",
        "command": "cursorColumnSelectRight",
        "when": "editorColumnSelection && textInputFocus",
        "title_ai": "Column Select Right"
    },
    {
        "key": "shift+up",
        "command": "cursorColumnSelectUp",
        "when": "editorColumnSelection && textInputFocus",
        "title_ai": "Column Select Up"
    },
    {
        "key": "shift+escape",
        "command": "removeSecondaryCursors",
        "when": "editorHasMultipleSelections && textInputFocus",
        "title_ai": "Remove Secondary Cursors"
    },
    {
        "key": "escape",
        "command": "removeSecondaryCursors",
        "when": "editorHasMultipleSelections && textInputFocus",
        "title_ai": "Remove Secondary Cursors"
    },
    {
        "key": "ctrl+down",
        "command": "notebook.cell.chat.arrowOutDown",
        "when": "inlineChatFocused && inlineChatInnerCursorLast && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused",
        "title_ai": "Arrow Out Down [Notebook Cell Chat]"
    },
    {
        "key": "ctrl+up",
        "command": "notebook.cell.chat.arrowOutUp",
        "when": "inlineChatFocused && inlineChatInnerCursorFirst && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused",
        "title_ai": "Arrow Out Up [Notebook Cell Chat]"
    },
    {
        "key": "ctrl+up",
        "command": "notebook.cell.focusChatWidget",
        "when": "editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'",
        "title_ai": "Focus Notebook Cell Chat Widget"
    },
    {
        "key": "ctrl+down",
        "command": "notebook.cell.focusNextChatWidget",
        "when": "editorTextFocus && inputFocus && isCompositeNotebook && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top' || editorTextFocus && inputFocus && notebookCellEditorFocused && !accessibilityModeEnabled && !isCompositeNotebook && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'",
        "title_ai": "Focus Next Notebook Cell Chat Widget"
    },
    {
        "key": "ctrl+down",
        "command": "inlineChat.focus",
        "when": "editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'above'",
        "title_ai": "Focus Inline Chat",
        "title": "Inline Chat: Focus Input"
    },
    {
        "key": "ctrl+up",
        "command": "inlineChat.focus",
        "when": "editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'below'",
        "title_ai": "Focus Inline Chat",
        "title": "Inline Chat: Focus Input"
    },
    {
        "key": "escape",
        "command": "notebook.cell.chat.acceptChanges",
        "when": "inlineChatFocused && notebookCellChatFocused && notebookChatUserDidEdit && !notebookCellEditorFocused",
        "title_ai": "Accept Notebook Cell Chat Changes"
    },
    {
        "key": "down",
        "command": "notebook.cell.chat.nextFromHistory",
        "when": "inlineChatFocused && notebookCellChatFocused",
        "title_ai": "Next Notebook Cell Chat History"
    },
    {
        "key": "up",
        "command": "notebook.cell.chat.previousFromHistory",
        "when": "inlineChatFocused && notebookCellChatFocused",
        "title_ai": "Previous Notebook Cell Chat History"
    },
    {
        "key": "f12",
        "command": "goToNextReference",
        "when": "inReferenceSearchEditor || referenceSearchVisible",
        "title_ai": "Go to Next Reference"
    },
    {
        "key": "f4",
        "command": "goToNextReference",
        "when": "inReferenceSearchEditor || referenceSearchVisible",
        "title_ai": "Go to Next Reference"
    },
    {
        "key": "shift+f12",
        "command": "goToPreviousReference",
        "when": "inReferenceSearchEditor || referenceSearchVisible",
        "title_ai": "Go to Previous Reference"
    },
    {
        "key": "shift+f4",
        "command": "goToPreviousReference",
        "when": "inReferenceSearchEditor || referenceSearchVisible",
        "title_ai": "Go to Previous Reference"
    },
    {
        "key": "escape",
        "command": "inlineChat.hideHint",
        "when": "inlineChatShowingHint",
        "title_ai": "Hide Inline Chat Hint"
    },
    {
        "key": "ctrl+enter",
        "command": "refactorPreview.apply",
        "when": "refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview'",
        "title_ai": "Apply Refactor Preview"
    },
    {
        "key": "alt+enter",
        "command": "testing.editFocusedTest",
        "when": "focusedView == 'workbench.view.testing'",
        "title_ai": "Edit Focused Test"
    },
    {
        "key": "escape",
        "command": "notebook.cell.quitEdit",
        "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !inlineChatFocused",
        "title_ai": "Quit Notebook Cell Edit",
        "title": "Notebook: Stop Editing Cell"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "notebook.cell.quitEdit",
        "when": "inputFocus && notebookEditorFocused && !inlineChatFocused && notebookCellType == 'markup'",
        "title_ai": "Quit Notebook Cell Edit",
        "title": "Notebook: Stop Editing Cell"
    },
    {
        "key": "ctrl+f",
        "command": "actions.find",
        "when": "editorFocus || editorIsOpen",
        "title_ai": "Find",
        "title": "Find"
    },
    {
        "key": "enter",
        "command": "breakpointWidget.action.acceptInput",
        "when": "breakpointWidgetVisible && inBreakpointWidget",
        "title_ai": "Accept Breakpoint Input"
    },
    {
        "key": "ctrl+up",
        "command": "chat.action.focus",
        "when": "chatCursorAtTop && inChatInput && !quickChatHasFocus",
        "title_ai": "Focus Chat"
    },
    {
        "key": "ctrl+up",
        "command": "chat.action.focus",
        "when": "inChatInput && isLinux && !quickChatHasFocus || inChatInput && isWindows && !quickChatHasFocus",
        "title_ai": "Focus Chat"
    },
    {
        "key": "shift+escape",
        "command": "closeBreakpointWidget",
        "when": "breakpointWidgetVisible && textInputFocus",
        "title_ai": "Close Breakpoint Widget"
    },
    {
        "key": "escape",
        "command": "closeBreakpointWidget",
        "when": "breakpointWidgetVisible && textInputFocus",
        "title_ai": "Close Breakpoint Widget"
    },
    {
        "key": "ctrl+u",
        "command": "cursorUndo",
        "when": "textInputFocus",
        "title_ai": "Cursor Undo",
        "title": "Cursor Undo"
    },
    {
        "key": "ctrl+right",
        "command": "cursorWordEndRight",
        "when": "textInputFocus && !accessibilityModeEnabled",
        "title_ai": "Move cursor to word end right"
    },
    {
        "key": "ctrl+shift+right",
        "command": "cursorWordEndRightSelect",
        "when": "textInputFocus && !accessibilityModeEnabled",
        "title_ai": "Select to word end right"
    },
    {
        "key": "ctrl+left",
        "command": "cursorWordLeft",
        "when": "textInputFocus && !accessibilityModeEnabled",
        "title_ai": "Move cursor word left"
    },
    {
        "key": "ctrl+shift+left",
        "command": "cursorWordLeftSelect",
        "when": "textInputFocus && !accessibilityModeEnabled",
        "title_ai": "Select word left"
    },
    {
        "key": "ctrl+backspace",
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly",
        "title_ai": "Delete Word Left"
    },
    {
        "key": "ctrl+delete",
        "command": "deleteWordRight",
        "when": "textInputFocus && !editorReadonly",
        "title_ai": "Delete Word Right"
    },
    {
        "key": "f7",
        "command": "editor.action.accessibleDiffViewer.next",
        "when": "isInDiffEditor",
        "title_ai": "Next Change [Accessible Diff]",
        "title": "Accessible Diff Viewer: Go to Next Difference"
    },
    {
        "key": "shift+f7",
        "command": "editor.action.accessibleDiffViewer.prev",
        "when": "isInDiffEditor",
        "title_ai": "Previous Change [Accessible Diff]",
        "title": "Accessible Diff Viewer: Go to Previous Difference"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly",
        "title_ai": "Add Line Comment",
        "title": "Add Line Comment"
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus",
        "title_ai": "Add Selection to Next Find Match",
        "title": "Add Selection to Next Find Match"
    },
    {
        "key": "shift+alt+oem_period",
        "command": "editor.action.autoFix",
        "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/",
        "title_ai": "Auto Fix",
        "title": "Auto Fix..."
    },
    {
        "key": "shift+alt+a",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly",
        "title_ai": "Toggle Block Comment",
        "title": "Toggle Block Comment"
    },
    {
        "key": "escape",
        "command": "editor.action.cancelSelectionAnchor",
        "when": "editorTextFocus && selectionAnchorSet",
        "title_ai": "Cancel Selection Anchor",
        "title": "Cancel Selection Anchor"
    },
    {
        "key": "ctrl+f2",
        "command": "editor.action.changeAll",
        "when": "editorTextFocus && !editorReadonly",
        "title_ai": "Change All Occurrences",
        "title": "Change All Occurrences"
    },
    {
        "key": "ctrl+insert",
        "command": "editor.action.clipboardCopyAction",
        "title_ai": "Copy",
        "title": "Copy"
    },
    {
        "key": "ctrl+c",
        "command": "editor.action.clipboardCopyAction",
        "title_ai": "Copy",
        "title": "Copy"
    },
    {
        "key": "shift+delete",
        "command": "editor.action.clipboardCutAction",
        "title_ai": "Cut",
        "title": "Cut"
    },
    {
        "key": "ctrl+x",
        "command": "editor.action.clipboardCutAction",
        "title_ai": "Cut",
        "title": "Cut"
    },
    {
        "key": "shift+insert",
        "command": "editor.action.clipboardPasteAction",
        "title_ai": "Paste",
        "title": "Paste"
    },
    {
        "key": "ctrl+v",
        "command": "editor.action.clipboardPasteAction",
        "title_ai": "Paste",
        "title": "Paste"
    },
    {
        "key": "ctrl+oem_2",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly",
        "title_ai": "Toggle Line Comment",
        "title": "Toggle Line Comment"
    },
    {
        "key": "shift+alt+down",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly",
        "title_ai": "Copy Line Down",
        "title": "Copy Line Down"
    },
    {
        "key": "shift+alt+up",
        "command": "editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly",
        "title_ai": "Copy Line Up",
        "title": "Copy Line Up"
    },
    {
        "key": "ctrl+shift+k",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly",
        "title_ai": "Delete Line",
        "title": "Delete Line"
    },
    {
        "key": "alt+f3",
        "command": "editor.action.dirtydiff.next",
        "when": "editorTextFocus && !textCompareEditorActive",
        "title_ai": "Next Change",
        "title": "Show Next Change"
    },
    {
        "key": "shift+alt+f3",
        "command": "editor.action.dirtydiff.previous",
        "when": "editorTextFocus && !textCompareEditorActive",
        "title_ai": "Previous Change",
        "title": "Show Previous Change"
    },
    {
        "key": "enter",
        "command": "editor.action.extensioneditor.findNext",
        "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'",
        "title_ai": "Find Next [Extension Editor]"
    },
    {
        "key": "shift+enter",
        "command": "editor.action.extensioneditor.findPrevious",
        "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'",
        "title_ai": "Find Previous [Extension Editor]"
    },
    {
        "key": "ctrl+f",
        "command": "editor.action.extensioneditor.showfind",
        "when": "!editorFocus && activeEditor == 'workbench.editor.extension'",
        "title_ai": "Show Find [Extension Editor]"
    },
    {
        "key": "shift+alt+f",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor",
        "title_ai": "Format Document",
        "title": "Format Document"
    },
    {
        "key": "shift+alt+f",
        "command": "editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly",
        "title_ai": "Format Document [No Provider]",
        "title": "Format Document"
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly",
        "title_ai": "Format Selection",
        "title": "Format Selection"
    },
    {
        "key": "ctrl+down",
        "command": "editor.action.goToBottomHover",
        "when": "editorHoverFocused",
        "title_ai": "Go to Bottom of Hover",
        "title": "Go To Bottom Hover"
    },
    {
        "key": "end",
        "command": "editor.action.goToBottomHover",
        "when": "editorHoverFocused",
        "title_ai": "Go to Bottom of Hover",
        "title": "Go To Bottom Hover"
    },
    {
        "key": "enter",
        "command": "editor.action.goToFocusedStickyScrollLine",
        "when": "stickyScrollFocused",
        "title_ai": "Go to Focused Sticky Scroll Line"
    },
    {
        "key": "ctrl+f12",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus",
        "title_ai": "Go to Implementation",
        "title": "Go to Implementations"
    },
    {
        "key": "shift+f12",
        "command": "editor.action.goToReferences",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor",
        "title_ai": "Go to References",
        "title": "Go to References"
    },
    {
        "key": "ctrl+up",
        "command": "editor.action.goToTopHover",
        "when": "editorHoverFocused",
        "title_ai": "Go to Top of Hover",
        "title": "Go To Top Hover"
    },
    {
        "key": "home",
        "command": "editor.action.goToTopHover",
        "when": "editorHoverFocused",
        "title_ai": "Go to Top of Hover",
        "title": "Go To Top Hover"
    },
    {
        "key": "escape",
        "command": "editor.action.hideColorPicker",
        "when": "standaloneColorPickerVisible",
        "title_ai": "Hide Color Picker",
        "title": "Hide the Color Picker"
    },
    {
        "key": "ctrl+shift+oem_period",
        "command": "editor.action.inPlaceReplace.down",
        "when": "editorTextFocus && !editorReadonly",
        "title_ai": "Replace with Next Value",
        "title": "Replace with Next Value"
    },
    {
        "key": "ctrl+shift+oem_comma",
        "command": "editor.action.inPlaceReplace.up",
        "when": "editorTextFocus && !editorReadonly",
        "title_ai": "Replace with Previous Value",
        "title": "Replace with Previous Value"
    },
    {
        "key": "ctrl+oem_6",
        "command": "editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly",
        "title_ai": "Indent Line",
        "title": "Indent Line"
    },
    {
        "key": "alt+oem_6",
        "command": "editor.action.inlineSuggest.showNext",
        "when": "inlineSuggestionVisible && !editorReadonly",
        "title_ai": "Show Next Inline Suggestion",
        "title": "Show Next Inline Suggestion"
    },
    {
        "key": "alt+oem_4",
        "command": "editor.action.inlineSuggest.showPrevious",
        "when": "inlineSuggestionVisible && !editorReadonly",
        "title_ai": "Show Previous Inline Suggestion",
        "title": "Show Previous Inline Suggestion"
    },
    {
        "key": "enter",
        "command": "editor.action.insertColorWithStandaloneColorPicker",
        "when": "standaloneColorPickerFocused",
        "title_ai": "Insert Color [Color Picker]",
        "title": "Insert Color with Standalone Color Picker"
    },
    {
        "key": "ctrl+alt+up",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus",
        "title_ai": "Insert Cursor Above",
        "title": "Add Cursor Above"
    },
    {
        "key": "shift+alt+i",
        "command": "editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus",
        "title_ai": "Insert Cursor at End of Selected Lines",
        "title": "Add Cursors to Line Ends"
    },
    {
        "key": "ctrl+alt+down",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus",
        "title_ai": "Insert Cursor Below",
        "title": "Add Cursor Below"
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly",
        "title_ai": "Insert Line Below",
        "title": "Insert Line Below"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly",
        "title_ai": "Insert Line Above",
        "title": "Insert Line Above"
    },
    {
        "key": "ctrl+shift+oem_5",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus",
        "title_ai": "Go to Bracket",
        "title": "Go to Bracket"
    },
    {
        "key": "ctrl+shift+f2",
        "command": "editor.action.linkedEditing",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly",
        "title_ai": "Start Linked Editing",
        "title": "Start Linked Editing"
    },
    {
        "key": "alt+f8",
        "command": "editor.action.marker.next",
        "when": "editorFocus",
        "title_ai": "Go to Next Problem [Errors, Warnings, Info]",
        "title": "Go to Next Problem (Error, Warning, Info)"
    },
    {
        "key": "f8",
        "command": "editor.action.marker.nextInFiles",
        "when": "editorFocus",
        "title_ai": "Go to Next Problem in Files [Errors, Warnings, Info]",
        "title": "Go to Next Problem in Files (Error, Warning, Info)"
    },
    {
        "key": "shift+alt+f8",
        "command": "editor.action.marker.prev",
        "when": "editorFocus",
        "title_ai": "Go to Previous Problem [Errors, Warnings, Info]",
        "title": "Go to Previous Problem (Error, Warning, Info)"
    },
    {
        "key": "shift+f8",
        "command": "editor.action.marker.prevInFiles",
        "when": "editorFocus",
        "title_ai": "Go to Previous Problem in Files [Errors, Warnings, Info]",
        "title": "Go to Previous Problem in Files (Error, Warning, Info)"
    },
    {
        "key": "alt+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly",
        "title_ai": "Move Line Down",
        "title": "Move Line Down"
    },
    {
        "key": "alt+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly",
        "title_ai": "Move Line Up",
        "title": "Move Line Up"
    },
    {
        "key": "ctrl+k ctrl+d",
        "command": "editor.action.moveSelectionToNextFindMatch",
        "when": "editorFocus",
        "title_ai": "Move Last Selection to Next Find Match",
        "title": "Move Last Selection to Next Find Match"
    },
    {
        "key": "alt+f9",
        "command": "editor.action.nextCommentThreadAction",
        "title_ai": "Go to Next Comment Thread"
    },
    {
        "key": "alt+f10",
        "command": "editor.action.nextCommentedRangeAction",
        "when": "activeEditorHasCommentingRange",
        "title_ai": "Go to Next Commented Range",
        "title": "Comments: Go to Next Commented Range"
    },
    {
        "key": "ctrl+k ctrl+alt+down",
        "command": "editor.action.nextCommentingRange",
        "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'",
        "title_ai": "Go to Next Commenting Range",
        "title": "Comments: Go to Next Commenting Range"
    },
    {
        "key": "f3",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus",
        "title_ai": "Find Next",
        "title": "Find Next"
    },
    {
        "key": "enter",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus && findInputFocussed",
        "title_ai": "Find Next",
        "title": "Find Next"
    },
    {
        "key": "ctrl+f3",
        "command": "editor.action.nextSelectionMatchFindAction",
        "when": "editorFocus",
        "title_ai": "Find Next Selection",
        "title": "Find Next Selection"
    },
    {
        "key": "shift+alt+o",
        "command": "editor.action.organizeImports",
        "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/",
        "title_ai": "Organize Imports",
        "title": "Organize Imports"
    },
    {
        "key": "ctrl+oem_4",
        "command": "editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly",
        "title_ai": "Outdent Line",
        "title": "Outdent Line"
    },
    {
        "key": "alt+down",
        "command": "editor.action.pageDownHover",
        "when": "editorHoverFocused",
        "title_ai": "Page Down Hover",
        "title": "Page Down Hover"
    },
    {
        "key": "pagedown",
        "command": "editor.action.pageDownHover",
        "when": "editorHoverFocused",
        "title_ai": "Page Down Hover",
        "title": "Page Down Hover"
    },
    {
        "key": "alt+up",
        "command": "editor.action.pageUpHover",
        "when": "editorHoverFocused",
        "title_ai": "Page Up Hover",
        "title": "Page Up Hover"
    },
    {
        "key": "pageup",
        "command": "editor.action.pageUpHover",
        "when": "editorHoverFocused",
        "title_ai": "Page Up Hover",
        "title": "Page Up Hover"
    },
    {
        "key": "alt+f12",
        "command": "editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor",
        "title_ai": "Peek Definition",
        "title": "Peek Definition"
    },
    {
        "key": "ctrl+shift+f12",
        "command": "editor.action.peekImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor",
        "title_ai": "Peek Implementation",
        "title": "Peek Implementations"
    },
    {
        "key": "shift+alt+f9",
        "command": "editor.action.previousCommentThreadAction",
        "title_ai": "Go to Previous Comment Thread"
    },
    {
        "key": "shift+alt+f10",
        "command": "editor.action.previousCommentedRangeAction",
        "when": "activeEditorHasCommentingRange",
        "title_ai": "Go to Previous Commented Range",
        "title": "Comments: Go to Previous Commented Range"
    },
    {
        "key": "ctrl+k ctrl+alt+up",
        "command": "editor.action.previousCommentingRange",
        "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'",
        "title_ai": "Go to Previous Commenting Range",
        "title": "Comments: Go to Previous Commenting Range"
    },
    {
        "key": "shift+f3",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorFocus",
        "title_ai": "Find Previous",
        "title": "Find Previous"
    },
    {
        "key": "shift+enter",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorFocus && findInputFocussed",
        "title_ai": "Find Previous",
        "title": "Find Previous"
    },
    {
        "key": "ctrl+shift+f3",
        "command": "editor.action.previousSelectionMatchFindAction",
        "when": "editorFocus",
        "title_ai": "Find Previous Selection",
        "title": "Find Previous Selection"
    },
    {
        "key": "ctrl+oem_period",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly",
        "title_ai": "Quick Fix...",
        "title": "Quick Fix..."
    },
    {
        "key": "ctrl+shift+r",
        "command": "editor.action.refactor",
        "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly",
        "title_ai": "Refactor...",
        "title": "Refactor..."
    },
    {
        "key": "ctrl+alt+backspace",
        "command": "editor.action.removeBrackets",
        "when": "editorTextFocus",
        "title_ai": "Remove Brackets",
        "title": "Remove Brackets"
    },
    {
        "key": "ctrl+k ctrl+u",
        "command": "editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly",
        "title_ai": "Remove Line Comment",
        "title": "Remove Line Comment"
    },
    {
        "key": "f2",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly",
        "title_ai": "Rename Symbol",
        "title": "Rename Symbol"
    },
    {
        "key": "f12",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus",
        "title_ai": "Go to Definition",
        "title": "Go to Definition"
    },
    {
        "key": "ctrl+f12",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && isWeb",
        "title_ai": "Go to Definition",
        "title": "Go to Definition"
    },
    {
        "key": "ctrl+k f12",
        "command": "editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor",
        "title_ai": "Open Definition to the Side",
        "title": "Open Definition to the Side"
    },
    {
        "key": "ctrl+k ctrl+f12",
        "command": "editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor",
        "title_ai": "Open Definition to the Side",
        "title": "Open Definition to the Side"
    },
    {
        "key": "down",
        "command": "editor.action.scrollDownHover",
        "when": "editorHoverFocused",
        "title_ai": "Scroll Down Hover",
        "title": "Scroll Down Hover"
    },
    {
        "key": "left",
        "command": "editor.action.scrollLeftHover",
        "when": "editorHoverFocused",
        "title_ai": "Scroll Left Hover",
        "title": "Scroll Left Hover"
    },
    {
        "key": "right",
        "command": "editor.action.scrollRightHover",
        "when": "editorHoverFocused",
        "title_ai": "Scroll Right Hover",
        "title": "Scroll Right Hover"
    },
    {
        "key": "up",
        "command": "editor.action.scrollUpHover",
        "when": "editorHoverFocused",
        "title_ai": "Scroll Up Hover",
        "title": "Scroll Up Hover"
    },
    {
        "key": "escape",
        "command": "editor.action.selectEditor",
        "when": "stickyScrollFocused",
        "title_ai": "Select Editor [from Sticky Scroll]"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "editor.action.selectFromAnchorToCursor",
        "when": "editorTextFocus && selectionAnchorSet",
        "title_ai": "Select from Anchor to Cursor",
        "title": "Select from Anchor to Cursor"
    },
    {
        "key": "ctrl+shift+l",
        "command": "editor.action.selectHighlights",
        "when": "editorFocus",
        "title_ai": "Select All Occurrences of Find Match",
        "title": "Select All Occurrences of Find Match"
    },
    {
        "key": "down",
        "command": "editor.action.selectNextStickyScrollLine",
        "when": "stickyScrollFocused",
        "title_ai": "Select Next Sticky Scroll Line"
    },
    {
        "key": "up",
        "command": "editor.action.selectPreviousStickyScrollLine",
        "when": "stickyScrollFocused",
        "title_ai": "Select Previous Sticky Scroll Line"
    },
    {
        "key": "ctrl+k ctrl+b",
        "command": "editor.action.setSelectionAnchor",
        "when": "editorTextFocus",
        "title_ai": "Set Selection Anchor",
        "title": "Set Selection Anchor"
    },
    {
        "key": "shift+f10",
        "command": "editor.action.showContextMenu",
        "when": "textInputFocus",
        "title_ai": "Show Editor Context Menu",
        "title": "Show Editor Context Menu"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "editor.action.showHover",
        "when": "editorTextFocus",
        "title_ai": "Show Hover",
        "title": "Show or Focus Hover"
    },
    {
        "key": "shift+alt+right",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus",
        "title_ai": "Expand Selection",
        "title": "Expand Selection"
    },
    {
        "key": "shift+alt+left",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus",
        "title_ai": "Shrink Selection",
        "title": "Shrink Selection"
    },
    {
        "key": "ctrl+h",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen",
        "title_ai": "Replace",
        "title": "Replace"
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.submitComment",
        "when": "commentEditorFocused",
        "title_ai": "Submit Comment"
    },
    {
        "key": "ctrl+m",
        "command": "editor.action.toggleTabFocusMode",
        "title_ai": "Toggle Tab Key Moves Focus",
        "title": "Toggle Tab Key Moves Focus"
    },
    {
        "key": "alt+z",
        "command": "editor.action.toggleWordWrap",
        "title_ai": "Toggle Word Wrap",
        "title": "View: Toggle Word Wrap"
    },
    {
        "key": "ctrl+shift+space",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus",
        "title_ai": "Trigger Parameter Hints",
        "title": "Trigger Parameter Hints"
    },
    {
        "key": "ctrl+i",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible",
        "title_ai": "Trigger Suggest",
        "title": "Trigger Suggest"
    },
    {
        "key": "ctrl+space",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible",
        "title_ai": "Trigger Suggest",
        "title": "Trigger Suggest"
    },
    {
        "key": "ctrl+k ctrl+x",
        "command": "editor.action.trimTrailingWhitespace",
        "when": "editorTextFocus && !editorReadonly",
        "title_ai": "Trim Trailing Whitespace",
        "title": "Trim Trailing Whitespace"
    },
    {
        "key": "enter",
        "command": "editor.action.webvieweditor.findNext",
        "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'",
        "title_ai": "Find Next [Webview]"
    },
    {
        "key": "shift+enter",
        "command": "editor.action.webvieweditor.findPrevious",
        "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'",
        "title_ai": "Find Previous [Webview]"
    },
    {
        "key": "escape",
        "command": "editor.action.webvieweditor.hideFind",
        "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'",
        "title_ai": "Hide Find [Webview]"
    },
    {
        "key": "ctrl+f",
        "command": "editor.action.webvieweditor.showFind",
        "when": "webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor'",
        "title_ai": "Show Find [Webview]"
    },
    {
        "key": "f7",
        "command": "editor.action.wordHighlight.next",
        "when": "editorTextFocus && hasWordHighlights",
        "title_ai": "Go to Next Symbol Highlight",
        "title": "Go to Next Symbol Highlight"
    },
    {
        "key": "shift+f7",
        "command": "editor.action.wordHighlight.prev",
        "when": "editorTextFocus && hasWordHighlights",
        "title_ai": "Go to Previous Symbol Highlight",
        "title": "Go to Previous Symbol Highlight"
    },
    {
        "key": "escape",
        "command": "editor.cancelOperation",
        "when": "cancellableOperation",
        "title_ai": "Cancel Operation"
    },
    {
        "key": "ctrl+oem_period",
        "command": "editor.changeDropType",
        "when": "dropWidgetVisible",
        "title_ai": "Change Drop Type"
    },
    {
        "key": "ctrl+oem_period",
        "command": "editor.changePasteType",
        "when": "pasteWidgetVisible",
        "title_ai": "Change Paste Type"
    },
    {
        "key": "ctrl+k ctrl+oem_comma",
        "command": "editor.createFoldingRangeFromSelection",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Create Folding Range from Selection",
        "title": "Create Folding Range from Selection"
    },
    {
        "key": "escape",
        "command": "editor.debug.action.closeExceptionWidget",
        "when": "exceptionWidgetVisible",
        "title_ai": "Close Exception Widget",
        "title": "Close Exception Widget"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode",
        "title_ai": "Show Debug Hover",
        "title": "Debug: Show Hover"
    },
    {
        "key": "f9",
        "command": "editor.debug.action.toggleBreakpoint",
        "when": "debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus",
        "title_ai": "Toggle Breakpoint",
        "title": "Debug: Toggle Breakpoint"
    },
    {
        "key": "tab",
        "command": "editor.emmet.action.expandAbbreviation",
        "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus",
        "title_ai": "Emmet: Expand Abbreviation",
        "title": "Emmet: Expand Abbreviation"
    },
    {
        "key": "ctrl+shift+oem_4",
        "command": "editor.fold",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Fold",
        "title": "Fold"
    },
    {
        "key": "ctrl+k ctrl+0",
        "command": "editor.foldAll",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Fold All",
        "title": "Fold All"
    },
    {
        "key": "ctrl+k ctrl+oem_2",
        "command": "editor.foldAllBlockComments",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Fold All Block Comments",
        "title": "Fold All Block Comments"
    },
    {
        "key": "ctrl+k ctrl+oem_minus",
        "command": "editor.foldAllExcept",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Fold All Except Selected",
        "title": "Fold All Except Selected"
    },
    {
        "key": "ctrl+k ctrl+8",
        "command": "editor.foldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Fold All Regions",
        "title": "Fold All Regions"
    },
    {
        "key": "ctrl+k ctrl+1",
        "command": "editor.foldLevel1",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Fold Level 1",
        "title": "Fold Level 1"
    },
    {
        "key": "ctrl+k ctrl+2",
        "command": "editor.foldLevel2",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Fold Level 2",
        "title": "Fold Level 2"
    },
    {
        "key": "ctrl+k ctrl+3",
        "command": "editor.foldLevel3",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Fold Level 3",
        "title": "Fold Level 3"
    },
    {
        "key": "ctrl+k ctrl+4",
        "command": "editor.foldLevel4",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Fold Level 4",
        "title": "Fold Level 4"
    },
    {
        "key": "ctrl+k ctrl+5",
        "command": "editor.foldLevel5",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Fold Level 5",
        "title": "Fold Level 5"
    },
    {
        "key": "ctrl+k ctrl+6",
        "command": "editor.foldLevel6",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Fold Level 6",
        "title": "Fold Level 6"
    },
    {
        "key": "ctrl+k ctrl+7",
        "command": "editor.foldLevel7",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Fold Level 7",
        "title": "Fold Level 7"
    },
    {
        "key": "ctrl+k ctrl+oem_4",
        "command": "editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Fold Recursively",
        "title": "Fold Recursively"
    },
    {
        "key": "f12",
        "command": "editor.gotoNextSymbolFromResult",
        "when": "hasSymbols",
        "title_ai": "Go to Next Symbol [Quick Find]"
    },
    {
        "key": "escape",
        "command": "editor.gotoNextSymbolFromResult.cancel",
        "when": "hasSymbols",
        "title_ai": "Cancel Go to Symbol [Quick Find]"
    },
    {
        "key": "escape",
        "command": "editor.hideDropWidget",
        "when": "dropWidgetVisible",
        "title_ai": "Hide Drop Widget"
    },
    {
        "key": "escape",
        "command": "editor.hidePasteWidget",
        "when": "pasteWidgetVisible",
        "title_ai": "Hide Paste Widget"
    },
    {
        "key": "ctrl+k ctrl+oem_period",
        "command": "editor.removeManualFoldingRanges",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Remove Manual Folding Ranges",
        "title": "Remove Manual Folding Ranges"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Toggle Fold",
        "title": "Toggle Fold"
    },
    {
        "key": "ctrl+k ctrl+shift+l",
        "command": "editor.toggleFoldRecursively",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Toggle Fold Recursively",
        "title": "Toggle Fold Recursively"
    },
    {
        "key": "ctrl+shift+oem_6",
        "command": "editor.unfold",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Unfold",
        "title": "Unfold"
    },
    {
        "key": "ctrl+k ctrl+j",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Unfold All",
        "title": "Unfold All"
    },
    {
        "key": "ctrl+k ctrl+oem_plus",
        "command": "editor.unfoldAllExcept",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Unfold All Except Selected",
        "title": "Unfold All Except Selected"
    },
    {
        "key": "ctrl+k ctrl+9",
        "command": "editor.unfoldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Unfold All Regions",
        "title": "Unfold All Regions"
    },
    {
        "key": "ctrl+k ctrl+oem_6",
        "command": "editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled",
        "title_ai": "Unfold Recursively",
        "title": "Unfold Recursively"
    },
    {
        "key": "escape",
        "command": "inlayHints.stopReadingLineWithHint",
        "when": "isReadingLineWithInlayHints",
        "title_ai": "Stop Reading Line with Inlay Hint",
        "title": "Stop Inlay Hints Reading"
    },
    {
        "key": "escape",
        "command": "inlineChat.discardHunkChange",
        "when": "inlineChatHasProvider && inlineChatVisible && inlineChatResponseType == 'messagesAndEdits'",
        "title_ai": "Discard Inline Chat Hunk Change"
    },
    {
        "key": "tab",
        "command": "insertSnippet",
        "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode",
        "title_ai": "Insert Snippet"
    },
    {
        "key": "ctrl+enter",
        "command": "interactive.execute",
        "when": "isCompositeNotebook && activeEditor == 'workbench.editor.interactive'",
        "title_ai": "Execute Interactive Cell"
    },
    {
        "key": "shift+enter",
        "command": "interactive.execute",
        "when": "config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && activeEditor == 'workbench.editor.interactive'",
        "title_ai": "Execute Interactive Cell"
    },
    {
        "key": "enter",
        "command": "interactive.execute",
        "when": "isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && activeEditor == 'workbench.editor.interactive'",
        "title_ai": "Execute Interactive Cell"
    },
    {
        "key": "escape",
        "command": "notebook.cell.chat.discard",
        "when": "inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused && !notebookChatUserDidEdit",
        "title_ai": "Discard Notebook Cell Chat"
    },
    {
        "key": "pagedown",
        "command": "notebook.cell.cursorPageDown",
        "when": "editorTextFocus && inputFocus && notebookEditorFocused",
        "title_ai": "Cursor Page Down [Notebook Cell]",
        "title": "Notebook: Cell Cursor Page Down"
    },
    {
        "key": "shift+pagedown",
        "command": "notebook.cell.cursorPageDownSelect",
        "when": "editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused",
        "title_ai": "Select Page Down [Notebook Cell]",
        "title": "Notebook: Cell Cursor Page Down Select"
    },
    {
        "key": "pageup",
        "command": "notebook.cell.cursorPageUp",
        "when": "editorTextFocus && inputFocus && notebookEditorFocused",
        "title_ai": "Cursor Page Up [Notebook Cell]",
        "title": "Notebook: Cell Cursor Page Up"
    },
    {
        "key": "shift+pageup",
        "command": "notebook.cell.cursorPageUpSelect",
        "when": "editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputFocused",
        "title_ai": "Select Page Up [Notebook Cell]",
        "title": "Notebook: Cell Cursor Page Up Select"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "notebook.cell.execute",
        "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0",
        "title_ai": "Execute Notebook Cell",
        "title": "Notebook: Execute Cell"
    },
    {
        "key": "alt+enter",
        "command": "notebook.cell.executeAndInsertBelow",
        "when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0",
        "title_ai": "Execute Notebook Cell and Insert Below",
        "title": "Notebook: Execute Notebook Cell and Insert Below"
    },
    {
        "key": "shift+enter",
        "command": "notebook.cell.executeAndSelectBelow",
        "when": "notebookCellListFocused && !inlineChatFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !inlineChatFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0",
        "title_ai": "Execute Notebook Cell and Select Below",
        "title": "Notebook: Execute Notebook Cell and Select Below"
    },
    {
        "key": "ctrl+shift+v",
        "command": "notebook.cell.pasteAbove",
        "when": "notebookEditorFocused && !inputFocus",
        "title_ai": "Paste Cell Above",
        "title": "Notebook: Paste Cell Above"
    },
    {
        "key": "down",
        "command": "notebook.focusNextEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'",
        "title_ai": "Focus Next Notebook Cell Editor",
        "title": "Notebook: Focus Next Cell Editor"
    },
    {
        "key": "up",
        "command": "notebook.focusPreviousEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'",
        "title_ai": "Focus Previous Notebook Cell Editor",
        "title": "Notebook: Focus Previous Cell Editor"
    },
    {
        "key": "shift+alt+f",
        "command": "notebook.formatCell",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'",
        "title_ai": "Format Notebook Cell",
        "title": "Format Cell"
    },
    {
        "key": "ctrl+enter",
        "command": "openReferenceToSide",
        "when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused",
        "title_ai": "Open Reference to Side"
    },
    {
        "key": "enter",
        "command": "repl.action.acceptInput",
        "when": "inDebugRepl && textInputFocus",
        "title_ai": "Accept Debug Console Input",
        "title": "Debug Console: Accept Input"
    },
    {
        "key": "ctrl+f",
        "command": "repl.action.filter",
        "when": "inDebugRepl && textInputFocus",
        "title_ai": "Filter Debug Console"
    },
    {
        "key": "ctrl+alt+f",
        "command": "repl.action.find",
        "when": "inDebugRepl || inDebugRepl && focusedView == 'workbench.panel.repl.view'",
        "title_ai": "Find in Debug Console"
    },
    {
        "key": "ctrl+enter",
        "command": "repl.execute",
        "when": "isCompositeNotebook && !notebookCellListFocused && activeEditor == 'workbench.editor.repl'",
        "title_ai": "Execute REPL Cell"
    },
    {
        "key": "shift+enter",
        "command": "repl.execute",
        "when": "config.interactiveWindow.executeWithShiftEnter && isCompositeNotebook && !notebookCellListFocused && activeEditor == 'workbench.editor.repl'",
        "title_ai": "Execute REPL Cell"
    },
    {
        "key": "enter",
        "command": "repl.execute",
        "when": "isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && !notebookCellListFocused && activeEditor == 'workbench.editor.repl'",
        "title_ai": "Execute REPL Cell"
    },
    {
        "key": "alt+end alt+end",
        "command": "repl.focusLastItemExecuted",
        "when": "isCompositeNotebook && mostRecentReplEditor || mostRecentReplEditor && !notebookCellListFocused",
        "title_ai": "Focus Last Executed REPL Item",
        "title": "REPL: Focus Most Recent REPL Execution"
    },
    {
        "key": "ctrl+down",
        "command": "repl.input.focus",
        "when": "isCompositeNotebook && notebookEditorFocused",
        "title_ai": "Focus REPL Input",
        "title": "REPL: Focus Input Editor"
    },
    {
        "key": "ctrl+shift+r",
        "command": "rerunSearchEditorSearch",
        "when": "inSearchEditor",
        "title_ai": "Rerun Search Editor Search",
        "title": "Search Editor: Search Again"
    },
    {
        "key": "escape",
        "command": "search.action.focusQueryEditorWidget",
        "when": "inSearchEditor",
        "title_ai": "Focus Search Editor Query Widget",
        "title": "Search Editor: Focus Search Editor Input"
    },
    {
        "key": "ctrl+shift+backspace",
        "command": "search.searchEditor.action.deleteFileResults",
        "when": "inSearchEditor",
        "title_ai": "Delete File Results [Search Editor]",
        "title": "Search Editor: Delete File Results"
    },
    {
        "key": "escape",
        "command": "settings.action.clearSearchResults",
        "when": "inSettingsEditor && inSettingsSearch",
        "title_ai": "Clear Settings Search Results",
        "title": "Preferences: Clear Settings Search Results"
    },
    {
        "key": "down",
        "command": "settings.action.focusSettingsFile",
        "when": "inSettingsSearch && !suggestWidgetVisible",
        "title_ai": "Focus Settings File"
    },
    {
        "key": "ctrl+f",
        "command": "settings.action.search",
        "when": "inSettingsEditor",
        "title_ai": "Search Settings",
        "title": "Preferences: Focus Settings Search"
    },
    {
        "key": "ctrl+oem_2",
        "command": "toggleExplainMode",
        "when": "suggestWidgetVisible",
        "title_ai": "Toggle Explain Mode [Suggest]"
    },
    {
        "key": "ctrl+k f2",
        "command": "togglePeekWidgetFocus",
        "when": "inReferenceSearchEditor || referenceSearchVisible",
        "title_ai": "Toggle Peek Widget Focus"
    },
    {
        "key": "escape",
        "command": "welcome.goBack",
        "when": "inWelcome && activeEditor == 'gettingStartedPage'",
        "title_ai": "Welcome: Go Back",
        "title": "Welcome: Go Back"
    },
    {
        "key": "ctrl+k ctrl+alt+c",
        "command": "workbench.action.addComment",
        "when": "activeCursorHasCommentingRange",
        "title_ai": "Add Comment on Current Selection",
        "title": "Comments: Add Comment on Current Selection"
    },
    {
        "key": "ctrl+oem_2",
        "command": "workbench.action.chat.attachContext",
        "when": "inChatInput && chatLocation == 'editor' && chatLocation != 'editing-session' || inChatInput && chatLocation == 'notebook' && chatLocation != 'editing-session' || inChatInput && chatLocation == 'panel' && chatLocation != 'editing-session' || inChatInput && chatLocation == 'terminal' && chatLocation != 'editing-session'",
        "title_ai": "Attach Context [Chat]"
    },
    {
        "key": "ctrl+oem_2",
        "command": "workbench.action.chat.editing.attachFiles",
        "when": "inChatInput && chatLocation == 'editing-session'",
        "title_ai": "Attach Files [Chat Editing]"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "workbench.action.chat.runInTerminal",
        "when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat",
        "title_ai": "Run Chat Code in Terminal",
        "title": "Chat: Insert into Terminal"
    },
    {
        "key": "enter",
        "command": "workbench.action.chat.submit",
        "when": "chatInputHasText && chatRequestIsPaused && inChatInput && chatLocation != 'editing-session' || chatInputHasText && inChatInput && !chatSessionRequestInProgress && chatLocation != 'editing-session' || chatInstructionsAttached && chatRequestIsPaused && inChatInput && chatLocation != 'editing-session' || chatInstructionsAttached && inChatInput && !chatSessionRequestInProgress && chatLocation != 'editing-session'",
        "title_ai": "Submit Chat Message"
    },
    {
        "key": "ctrl+enter",
        "command": "workbench.action.chat.submitSecondaryAgent",
        "when": "chatInputHasText && chatRequestIsPaused && inChatInput && !chatInputHasAgent || chatInputHasText && inChatInput && !chatInputHasAgent && !chatSessionRequestInProgress || chatInstructionsAttached && chatRequestIsPaused && inChatInput && !chatInputHasAgent || chatInstructionsAttached && inChatInput && !chatInputHasAgent && !chatSessionRequestInProgress",
        "title_ai": "Submit Chat Message [Secondary Agent]"
    },
    {
        "key": "shift+alt+enter",
        "command": "workbench.action.chat.submitWithoutDispatching",
        "when": "chatInputHasText && chatRequestIsPaused && inChatInput && chatLocation == 'editor' || chatInputHasText && chatRequestIsPaused && inChatInput && chatLocation == 'panel' || chatInputHasText && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editor' || chatInputHasText && inChatInput && !chatSessionRequestInProgress && chatLocation == 'panel' || chatInstructionsAttached && chatRequestIsPaused && inChatInput && chatLocation == 'editor' || chatInstructionsAttached && chatRequestIsPaused && inChatInput && chatLocation == 'panel' || chatInstructionsAttached && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editor' || chatInstructionsAttached && inChatInput && !chatSessionRequestInProgress && chatLocation == 'panel'",
        "title_ai": "Submit Chat Message [No Dispatch]"
    },
    {
        "key": "ctrl+oem_period",
        "command": "workbench.action.chat.toggleAgentMode",
        "when": "chatHasToolsAgent && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editing-session'",
        "title_ai": "Toggle Chat Agent Mode",
        "title": "Chat: Set Chat Mode"
    },
    {
        "key": "alt+f5",
        "command": "workbench.action.editor.nextChange",
        "when": "editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0'",
        "title_ai": "Go to Next Change [Editor]",
        "title": "Go to Next Change"
    },
    {
        "key": "shift+alt+f5",
        "command": "workbench.action.editor.previousChange",
        "when": "editorTextFocus && !textCompareEditorActive && quickDiffDecorationCount != '0'",
        "title_ai": "Go to Previous Change [Editor]",
        "title": "Go to Previous Change"
    },
    {
        "key": "enter",
        "command": "workbench.action.edits.submit",
        "when": "chatInputHasText && chatRequestIsPaused && inChatInput && chatLocation == 'editing-session' || chatInputHasText && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editing-session' || chatInstructionsAttached && chatRequestIsPaused && inChatInput && chatLocation == 'editing-session' || chatInstructionsAttached && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editing-session'",
        "title_ai": "Submit Edit Session"
    },
    {
        "key": "shift+escape",
        "command": "workbench.action.hideComment",
        "when": "commentEditorFocused || commentFocused",
        "title_ai": "Hide Comment"
    },
    {
        "key": "escape",
        "command": "workbench.action.hideComment",
        "when": "commentEditorFocused || commentFocused",
        "title_ai": "Hide Comment"
    },
    {
        "key": "ctrl+right",
        "command": "editor.action.inlineSuggest.acceptNextWord",
        "when": "inlineSuggestionVisible && !editorReadonly",
        "title_ai": "Accept Next Word [Inline Suggest]",
        "title": "Accept Next Word Of Inline Suggestion"
    },
    {
        "key": "escape",
        "command": "inlineChat.close",
        "when": "inlineChatHasProvider && inlineChatVisible",
        "title_ai": "Close Inline Chat"
    },
    {
        "key": "alt+f8",
        "command": "testing.goToNextMessage",
        "when": "editorFocus && testing.isPeekVisible",
        "title_ai": "Go to Next Test Message",
        "title": "Test: Go to Next Test Failure"
    },
    {
        "key": "shift+alt+f8",
        "command": "testing.goToPreviousMessage",
        "when": "editorFocus && testing.isPeekVisible",
        "title_ai": "Go to Previous Test Message",
        "title": "Test: Go to Previous Test Failure"
    },
    {
        "key": "shift+escape",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible && !isComposing",
        "title_ai": "Close Find Widget"
    },
    {
        "key": "escape",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible && !isComposing",
        "title_ai": "Close Find Widget"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible",
        "title_ai": "Replace All"
    },
    {
        "key": "ctrl+shift+1",
        "command": "editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible",
        "title_ai": "Replace"
    },
    {
        "key": "enter",
        "command": "editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible && replaceInputFocussed",
        "title_ai": "Replace"
    },
    {
        "key": "alt+enter",
        "command": "editor.action.selectAllMatches",
        "when": "editorFocus && findWidgetVisible",
        "title_ai": "Select All Matches"
    },
    {
        "key": "alt+c",
        "command": "toggleFindCaseSensitive",
        "when": "editorFocus",
        "title_ai": "Toggle Find Case Sensitive"
    },
    {
        "key": "alt+l",
        "command": "toggleFindInSelection",
        "when": "editorFocus",
        "title_ai": "Toggle Find In Selection"
    },
    {
        "key": "alt+r",
        "command": "toggleFindRegex",
        "when": "editorFocus",
        "title_ai": "Toggle Find Regex"
    },
    {
        "key": "alt+w",
        "command": "toggleFindWholeWord",
        "when": "editorFocus",
        "title_ai": "Toggle Find Whole Word"
    },
    {
        "key": "alt+p",
        "command": "togglePreserveCase",
        "when": "editorFocus",
        "title_ai": "Toggle Preserve Case [Replace]"
    },
    {
        "key": "ctrl+enter",
        "command": "notebook.cell.chat.acceptChanges",
        "when": "inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused",
        "title_ai": "Accept Notebook Cell Chat Changes"
    },
    {
        "key": "tab",
        "command": "jumpToNextSnippetPlaceholder",
        "when": "hasNextTabstop && inSnippetMode && textInputFocus",
        "title_ai": "Go to Next Snippet Placeholder"
    },
    {
        "key": "shift+tab",
        "command": "jumpToPrevSnippetPlaceholder",
        "when": "hasPrevTabstop && inSnippetMode && textInputFocus",
        "title_ai": "Go to Previous Snippet Placeholder"
    },
    {
        "key": "escape",
        "command": "leaveEditorMessage",
        "when": "messageVisible",
        "title_ai": "Dismiss Editor Message"
    },
    {
        "key": "shift+escape",
        "command": "leaveSnippet",
        "when": "inSnippetMode && textInputFocus",
        "title_ai": "Leave Snippet"
    },
    {
        "key": "escape",
        "command": "leaveSnippet",
        "when": "inSnippetMode && textInputFocus",
        "title_ai": "Leave Snippet"
    },
    {
        "key": "shift+escape",
        "command": "closeMarkersNavigation",
        "when": "editorFocus && markersNavigationVisible",
        "title_ai": "Close Problems Navigation"
    },
    {
        "key": "escape",
        "command": "closeMarkersNavigation",
        "when": "editorFocus && markersNavigationVisible",
        "title_ai": "Close Problems Navigation"
    },
    {
        "key": "shift+escape",
        "command": "closeQuickDiff",
        "when": "dirtyDiffVisible",
        "title_ai": "Close Quick Diff"
    },
    {
        "key": "escape",
        "command": "closeQuickDiff",
        "when": "dirtyDiffVisible",
        "title_ai": "Close Quick Diff"
    },
    {
        "key": "escape",
        "command": "notifications.hideToasts",
        "when": "notificationToastsVisible",
        "title_ai": "Hide Notifications"
    },
    {
        "key": "shift+escape",
        "command": "closeParameterHints",
        "when": "editorFocus && parameterHintsVisible",
        "title_ai": "Close Parameter Hints"
    },
    {
        "key": "escape",
        "command": "closeParameterHints",
        "when": "editorFocus && parameterHintsVisible",
        "title_ai": "Close Parameter Hints"
    },
    {
        "key": "alt+down",
        "command": "showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible",
        "title_ai": "Show Next Parameter Hint"
    },
    {
        "key": "down",
        "command": "showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible",
        "title_ai": "Show Next Parameter Hint"
    },
    {
        "key": "alt+up",
        "command": "showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible",
        "title_ai": "Show Previous Parameter Hint"
    },
    {
        "key": "up",
        "command": "showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible",
        "title_ai": "Show Previous Parameter Hint"
    },
    {
        "key": "shift+tab",
        "command": "acceptAlternativeSelectedSuggestion",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus",
        "title_ai": "Accept Alternative Suggestion"
    },
    {
        "key": "shift+enter",
        "command": "acceptAlternativeSelectedSuggestion",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus",
        "title_ai": "Accept Alternative Suggestion"
    },
    {
        "key": "tab",
        "command": "acceptSelectedSuggestion",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus",
        "title_ai": "Accept Suggestion"
    },
    {
        "key": "enter",
        "command": "acceptSelectedSuggestion",
        "when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus",
        "title_ai": "Accept Suggestion"
    },
    {
        "key": "escape",
        "command": "editor.action.inlineSuggest.hide",
        "when": "inlineEditIsVisible || inlineSuggestionVisible",
        "title_ai": "Hide Inline Suggestion",
        "title": "Hide Inline Suggestion"
    },
    {
        "key": "ctrl+i",
        "command": "focusSuggestion",
        "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion",
        "title_ai": "Focus Suggestion List"
    },
    {
        "key": "ctrl+space",
        "command": "focusSuggestion",
        "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion",
        "title_ai": "Focus Suggestion List"
    },
    {
        "key": "shift+escape",
        "command": "hideSuggestWidget",
        "when": "suggestWidgetVisible && textInputFocus",
        "title_ai": "Hide Suggest Widget"
    },
    {
        "key": "escape",
        "command": "hideSuggestWidget",
        "when": "suggestWidgetVisible && textInputFocus",
        "title_ai": "Hide Suggest Widget"
    },
    {
        "key": "tab",
        "command": "insertBestCompletion",
        "when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'",
        "title_ai": "Insert Best Completion"
    },
    {
        "key": "tab",
        "command": "insertNextSuggestion",
        "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'",
        "title_ai": "Insert Next Suggestion"
    },
    {
        "key": "shift+tab",
        "command": "insertPrevSuggestion",
        "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'",
        "title_ai": "Insert Previous Suggestion"
    },
    {
        "key": "ctrl+pagedown",
        "command": "selectNextPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion",
        "title_ai": "Select Next Page Suggestion"
    },
    {
        "key": "pagedown",
        "command": "selectNextPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion",
        "title_ai": "Select Next Page Suggestion"
    },
    {
        "key": "ctrl+down",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion",
        "title_ai": "Select Next Suggestion"
    },
    {
        "key": "down",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion",
        "title_ai": "Select Next Suggestion"
    },
    {
        "key": "ctrl+pageup",
        "command": "selectPrevPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion",
        "title_ai": "Select Previous Page Suggestion"
    },
    {
        "key": "pageup",
        "command": "selectPrevPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion",
        "title_ai": "Select Previous Page Suggestion"
    },
    {
        "key": "ctrl+up",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion",
        "title_ai": "Select Previous Suggestion"
    },
    {
        "key": "up",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion",
        "title_ai": "Select Previous Suggestion"
    },
    {
        "key": "ctrl+i",
        "command": "toggleSuggestionDetails",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus",
        "title_ai": "Toggle Suggestion Details"
    },
    {
        "key": "ctrl+space",
        "command": "toggleSuggestionDetails",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus",
        "title_ai": "Toggle Suggestion Details"
    },
    {
        "key": "ctrl+alt+space",
        "command": "toggleSuggestionFocus",
        "when": "suggestWidgetVisible && textInputFocus",
        "title_ai": "Toggle Suggestion Focus"
    },
    {
        "key": "enter",
        "command": "acceptRenameInput",
        "when": "editorFocus && renameInputVisible && !isComposing",
        "title_ai": "Accept Rename"
    },
    {
        "key": "ctrl+enter",
        "command": "acceptRenameInputWithPreview",
        "when": "config.editor.rename.enablePreview && editorFocus && renameInputVisible && !isComposing",
        "title_ai": "Accept Rename with Preview"
    },
    {
        "key": "shift+escape",
        "command": "cancelLinkedEditingInput",
        "when": "LinkedEditingInputVisible && editorTextFocus",
        "title_ai": "Cancel Linked Editing"
    },
    {
        "key": "escape",
        "command": "cancelLinkedEditingInput",
        "when": "LinkedEditingInputVisible && editorTextFocus",
        "title_ai": "Cancel Linked Editing"
    },
    {
        "key": "shift+escape",
        "command": "cancelRenameInput",
        "when": "editorFocus && renameInputVisible",
        "title_ai": "Cancel Rename"
    },
    {
        "key": "escape",
        "command": "cancelRenameInput",
        "when": "editorFocus && renameInputVisible",
        "title_ai": "Cancel Rename"
    },
    {
        "key": "down",
        "command": "focusNextRenameSuggestion",
        "when": "renameInputVisible",
        "title_ai": "Focus Next Rename Suggestion"
    },
    {
        "key": "up",
        "command": "focusPreviousRenameSuggestion",
        "when": "renameInputVisible",
        "title_ai": "Focus Previous Rename Suggestion"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "workbench.action.showHover",
        "when": "!editorTextFocus",
        "title_ai": "Show Hover"
    },
    {
        "key": "ctrl+shift+l",
        "command": "addCursorsAtSearchResults",
        "when": "fileMatchOrMatchFocus && searchViewletVisible",
        "title_ai": "Add Cursors at Search Results"
    },
    {
        "key": "ctrl+shift+oem_1",
        "command": "breadcrumbs.focus",
        "when": "breadcrumbsPossible && breadcrumbsVisible",
        "title_ai": "Focus Breadcrumbs",
        "title": "Focus Breadcrumbs"
    },
    {
        "key": "ctrl+shift+oem_period",
        "command": "breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible && breadcrumbsVisible",
        "title_ai": "Focus and Select Breadcrumbs",
        "title": "Focus and Select Breadcrumbs"
    },
    {
        "key": "ctrl+right",
        "command": "breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible",
        "title_ai": "Focus Next Breadcrumb"
    },
    {
        "key": "right",
        "command": "breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible",
        "title_ai": "Focus Next Breadcrumb"
    },
    {
        "key": "ctrl+left",
        "command": "breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible",
        "title_ai": "Focus Previous Breadcrumb"
    },
    {
        "key": "left",
        "command": "breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible",
        "title_ai": "Focus Previous Breadcrumb"
    },
    {
        "key": "ctrl+enter",
        "command": "breadcrumbs.revealFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible",
        "title_ai": "Reveal Focused Breadcrumb Item"
    },
    {
        "key": "space",
        "command": "breadcrumbs.revealFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible",
        "title_ai": "Reveal Focused Breadcrumb Item"
    },
    {
        "key": "ctrl+enter",
        "command": "breadcrumbs.revealFocusedFromTreeAside",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Reveal Focused Breadcrumb Item [Aside]"
    },
    {
        "key": "down",
        "command": "breadcrumbs.selectFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible",
        "title_ai": "Select Focused Breadcrumb Item"
    },
    {
        "key": "enter",
        "command": "breadcrumbs.selectFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible",
        "title_ai": "Select Focused Breadcrumb Item"
    },
    {
        "key": "ctrl+shift+oem_period",
        "command": "breadcrumbs.toggleToOn",
        "when": "!config.breadcrumbs.enabled",
        "title_ai": "Turn Breadcrumbs On"
    },
    {
        "key": "ctrl+down",
        "command": "chat.action.focus",
        "when": "inChat && inChatInput && quickChatHasFocus",
        "title_ai": "Focus Chat"
    },
    {
        "key": "ctrl+c",
        "command": "chat.inlineResourceAnchor.copyResource",
        "when": "chatAttachmentResource",
        "title_ai": "Copy Chat Resource"
    },
    {
        "key": "ctrl+enter",
        "command": "chatEditing.acceptAllFiles",
        "when": "hasUndecidedChatEditingResource && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editing-session'",
        "title_ai": "Accept All Files [Chat Editing]"
    },
    {
        "key": "ctrl+backspace",
        "command": "chatEditing.discardAllFiles",
        "when": "hasUndecidedChatEditingResource && inChatInput && !chatInputHasText && !chatSessionRequestInProgress && chatLocation == 'editing-session'",
        "title_ai": "Discard All Files [Chat Editing]"
    },
    {
        "key": "ctrl+enter",
        "command": "chatEditor.action.accept",
        "when": "chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress",
        "title_ai": "Accept Chat Edits",
        "title": "Chat: Keep Chat Edits"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "chatEditor.action.acceptHunk",
        "when": "chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress",
        "title_ai": "Accept Chat Edit Hunk",
        "title": "Chat: Keep this Change"
    },
    {
        "key": "alt+f5",
        "command": "chatEditor.action.navigateNext",
        "when": "chat.hasNotebookEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress",
        "title_ai": "Next Chat Edit Change",
        "title": "Chat: Go to Next Chat Edit"
    },
    {
        "key": "shift+alt+f5",
        "command": "chatEditor.action.navigatePrevious",
        "when": "chat.hasNotebookEditorModifications && editorFocus && !chatEdits.isRequestInProgress || chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress",
        "title_ai": "Previous Chat Edit Change",
        "title": "Chat: Go to Previous Chat Edit"
    },
    {
        "key": "ctrl+backspace",
        "command": "chatEditor.action.reject",
        "when": "chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress",
        "title_ai": "Reject Chat Edits",
        "title": "Chat: Undo Chat Edits"
    },
    {
        "key": "f7",
        "command": "chatEditor.action.showAccessibleDiffView",
        "when": "chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress",
        "title_ai": "Show Accessible Diff [Chat Edits]",
        "title": "Chat: Show Accessible Diff View"
    },
    {
        "key": "shift+alt+f7",
        "command": "chatEditor.action.toggleDiff",
        "when": "chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress",
        "title_ai": "Toggle Diff [Chat Edits]"
    },
    {
        "key": "ctrl+shift+backspace",
        "command": "chatEditor.action.undoHunk",
        "when": "chatEdits.hasEditorModifications && editorFocus && !chatEdits.isRequestInProgress",
        "title_ai": "Undo Chat Edit Hunk",
        "title": "Chat: Undo this Change"
    },
    {
        "key": "escape",
        "command": "closeReplaceInFilesWidget",
        "when": "replaceInputBoxFocus && searchViewletVisible",
        "title_ai": "Close Replace in Files Widget"
    },
    {
        "key": "escape",
        "command": "commentsClearFilterText",
        "when": "commentsFilterFocus",
        "title_ai": "Clear Comments Filter"
    },
    {
        "key": "ctrl+f",
        "command": "commentsFocusFilter",
        "when": "focusedView == 'workbench.panel.comments'",
        "title_ai": "Focus Comments Filter"
    },
    {
        "key": "ctrl+down",
        "command": "commentsFocusViewFromFilter",
        "when": "commentsFilterFocus",
        "title_ai": "Focus Comments View from Filter"
    },
    {
        "key": "shift+alt+c",
        "command": "copyFilePath",
        "when": "!editorFocus",
        "title_ai": "Copy Path of Active File",
        "title": "File: Copy Path of Active File"
    },
    {
        "key": "shift+alt+c",
        "command": "copyFilePath",
        "when": "editorFocus",
        "title_ai": "Copy Path of Active File",
        "title": "File: Copy Path of Active File"
    },
    {
        "key": "ctrl+k ctrl+shift+c",
        "command": "copyRelativeFilePath",
        "when": "!editorFocus",
        "title_ai": "Copy Relative Path of Active File",
        "title": "File: Copy Relative Path of Active File"
    },
    {
        "key": "ctrl+k ctrl+shift+c",
        "command": "copyRelativeFilePath",
        "when": "editorFocus",
        "title_ai": "Copy Relative Path of Active File",
        "title": "File: Copy Relative Path of Active File"
    },
    {
        "key": "ctrl+left",
        "command": "cursorWordAccessibilityLeft",
        "when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'",
        "title_ai": "Cursor Word Left [Accessibility Mode - Output]"
    },
    {
        "key": "ctrl+shift+left",
        "command": "cursorWordAccessibilityLeftSelect",
        "when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'",
        "title_ai": "Cursor Word Left Select [Accessibility Mode - Output]"
    },
    {
        "key": "ctrl+right",
        "command": "cursorWordAccessibilityRight",
        "when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'",
        "title_ai": "Cursor Word Right [Accessibility Mode - Output]"
    },
    {
        "key": "ctrl+shift+right",
        "command": "cursorWordAccessibilityRightSelect",
        "when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'",
        "title_ai": "Cursor Word Right Select [Accessibility Mode - Output]"
    },
    {
        "key": "ctrl+alt+c",
        "command": "debug.copyWatchExpression",
        "when": "watchExpressionsExist && !expressionSelected && focusedView == 'workbench.debug.watchExpressionsView'",
        "title_ai": "Copy Watch Expression Value"
    },
    {
        "key": "alt+enter",
        "command": "debug.openBreakpointToSide",
        "when": "breakpointsFocused",
        "title_ai": "Open Breakpoint to Side"
    },
    {
        "key": "ctrl+enter",
        "command": "debug.openBreakpointToSide",
        "when": "breakpointsFocused",
        "title_ai": "Open Breakpoint to Side"
    },
    {
        "key": "ctrl+f5",
        "command": "debug.openView",
        "when": "!debuggersAvailable",
        "title_ai": "Open Debug View"
    },
    {
        "key": "f5",
        "command": "debug.openView",
        "when": "!debuggersAvailable",
        "title_ai": "Open Debug View"
    },
    {
        "key": "delete",
        "command": "debug.removeBreakpoint",
        "when": "breakpointsFocused && !breakpointInputFocused",
        "title_ai": "Remove Breakpoint"
    },
    {
        "key": "delete",
        "command": "debug.removeWatchExpression",
        "when": "watchExpressionsFocused && !expressionSelected",
        "title_ai": "Remove Watch Expression"
    },
    {
        "key": "alt+oem_minus",
        "command": "decreaseSearchEditorContextLines",
        "when": "inSearchEditor",
        "title_ai": "Decrease Search Editor Context Lines",
        "title": "Search Editor: Decrease Context Lines"
    },
    {
        "key": "alt+f1",
        "command": "editor.action.accessibilityHelp",
        "when": "!accessibilityHelpIsShown",
        "title_ai": "Open Accessibility Help",
        "title": "Open Accessibility Help"
    },
    {
        "key": "alt+a",
        "command": "editor.action.accessibilityHelpConfigureAssignedKeybindings",
        "when": "accessibilityHelpIsShown && accessibleViewHasAssignedKeybindings",
        "title_ai": "Configure Assigned Keybindings [Accessibility Help]"
    },
    {
        "key": "alt+k",
        "command": "editor.action.accessibilityHelpConfigureKeybindings",
        "when": "accessibilityHelpIsShown && accessibleViewHasUnassignedKeybindings",
        "title_ai": "Configure Keybindings [Accessibility Help]"
    },
    {
        "key": "alt+h",
        "command": "editor.action.accessibilityHelpOpenHelpLink",
        "when": "accessibilityHelpIsShown",
        "title_ai": "Open Help Link [Accessibility Help]"
    },
    {
        "key": "alt+f2",
        "command": "editor.action.accessibleView",
        "title_ai": "Open Accessible View",
        "title": "Open Accessible View"
    },
    {
        "key": "ctrl+oem_2",
        "command": "editor.action.accessibleViewAcceptInlineCompletion",
        "when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'inlineCompletions'",
        "title_ai": "Accept Inline Completion [Accessible View]",
        "title": "Accept Inline Completion"
    },
    {
        "key": "alt+f6",
        "command": "editor.action.accessibleViewDisableHint",
        "when": "accessibilityHelpIsShown && accessibleViewVerbosityEnabled || accessibleViewIsShown && accessibleViewVerbosityEnabled",
        "title_ai": "Disable Hint [Accessible View]",
        "title": "Disable Accessible View Hint"
    },
    {
        "key": "alt+oem_6",
        "command": "editor.action.accessibleViewNext",
        "when": "accessibleViewIsShown && accessibleViewSupportsNavigation",
        "title_ai": "Next [Accessible View]",
        "title": "Show Next in Accessible View"
    },
    {
        "key": "ctrl+alt+pagedown",
        "command": "editor.action.accessibleViewNextCodeBlock",
        "when": "accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat'",
        "title_ai": "Next Code Block [Accessible View]"
    },
    {
        "key": "alt+oem_4",
        "command": "editor.action.accessibleViewPrevious",
        "when": "accessibleViewIsShown && accessibleViewSupportsNavigation",
        "title_ai": "Previous [Accessible View]",
        "title": "Show Previous in Accessible View"
    },
    {
        "key": "ctrl+alt+pageup",
        "command": "editor.action.accessibleViewPreviousCodeBlock",
        "when": "accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat'",
        "title_ai": "Previous Code Block [Accessible View]"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "editor.action.defineKeybinding",
        "when": "resource == 'vscode-userdata:/c%3A/Users/furny/AppData/Roaming/Code/User/keybindings.json'",
        "title_ai": "Define Keybinding [JSON]",
        "title": "Define Keybinding"
    },
    {
        "key": "tab",
        "command": "editor.action.inlineSuggest.commit",
        "when": "inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible",
        "title_ai": "Accept Inline Suggestion",
        "title": "Accept Inline Suggestion"
    },
    {
        "key": "insert",
        "command": "editor.action.toggleOvertypeInsertMode",
        "title_ai": "Toggle Insert/Overtype Mode",
        "title": "View: Toggle Overtype/Insert Mode"
    },
    {
        "key": "shift+f9",
        "command": "editor.debug.action.toggleInlineBreakpoint",
        "when": "editorTextFocus",
        "title_ai": "Toggle Inline Breakpoint",
        "title": "Debug: Inline Breakpoint"
    },
    {
        "key": "shift+alt+d",
        "command": "editor.detectLanguage",
        "when": "editorTextFocus && !notebookEditable",
        "title_ai": "Detect Language Mode",
        "title": "Detect Language from Content"
    },
    {
        "key": "shift+enter",
        "command": "editor.refocusCallHierarchy",
        "when": "callHierarchyVisible",
        "title_ai": "Refocus Call Hierarchy"
    },
    {
        "key": "shift+enter",
        "command": "editor.refocusTypeHierarchy",
        "when": "typeHierarchyVisible",
        "title_ai": "Refocus Type Hierarchy"
    },
    {
        "key": "shift+alt+h",
        "command": "editor.showCallHierarchy",
        "when": "editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor",
        "title_ai": "Show Call Hierarchy",
        "title": "Peek Call Hierarchy"
    },
    {
        "key": "shift+alt+h",
        "command": "editor.showIncomingCalls",
        "when": "callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'",
        "title_ai": "Show Incoming Calls"
    },
    {
        "key": "shift+alt+h",
        "command": "editor.showOutgoingCalls",
        "when": "callHierarchyVisible && callHierarchyDirection == 'incomingCalls'",
        "title_ai": "Show Outgoing Calls"
    },
    {
        "key": "shift+alt+h",
        "command": "editor.showSubtypes",
        "when": "typeHierarchyVisible && typeHierarchyDirection == 'supertypes'",
        "title_ai": "Show Subtypes"
    },
    {
        "key": "shift+alt+h",
        "command": "editor.showSupertypes",
        "when": "typeHierarchyVisible && typeHierarchyDirection == 'subtypes'",
        "title_ai": "Show Supertypes"
    },
    {
        "key": "ctrl+enter",
        "command": "explorer.openToSide",
        "when": "explorerViewletFocus && foldersViewVisible && !inputFocus",
        "title_ai": "Open to Side [Explorer]"
    },
    {
        "key": "shift+alt+f",
        "command": "filesExplorer.findInFolder",
        "when": "explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus",
        "title_ai": "Find in Folder [Explorer]"
    },
    {
        "key": "alt+down",
        "command": "history.showNext",
        "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible",
        "title_ai": "Show Next in History"
    },
    {
        "key": "down",
        "command": "history.showNext",
        "when": "historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible",
        "title_ai": "Show Next in History"
    },
    {
        "key": "alt+up",
        "command": "history.showPrevious",
        "when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible",
        "title_ai": "Show Previous in History"
    },
    {
        "key": "up",
        "command": "history.showPrevious",
        "when": "historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible",
        "title_ai": "Show Previous in History"
    },
    {
        "key": "down",
        "command": "iconSelectBox.focusDown",
        "when": "iconSelectBoxFocus",
        "title_ai": "Focus Down [Icon Select Box]"
    },
    {
        "key": "right",
        "command": "iconSelectBox.focusNext",
        "when": "iconSelectBoxFocus && iconSelectBoxInputEmpty || iconSelectBoxFocus && !iconSelectBoxInputFocus",
        "title_ai": "Focus Next [Icon Select Box]"
    },
    {
        "key": "left",
        "command": "iconSelectBox.focusPrevious",
        "when": "iconSelectBoxFocus && iconSelectBoxInputEmpty || iconSelectBoxFocus && !iconSelectBoxInputFocus",
        "title_ai": "Focus Previous [Icon Select Box]"
    },
    {
        "key": "up",
        "command": "iconSelectBox.focusUp",
        "when": "iconSelectBoxFocus",
        "title_ai": "Focus Up [Icon Select Box]"
    },
    {
        "key": "enter",
        "command": "iconSelectBox.selectFocused",
        "when": "iconSelectBoxFocus",
        "title_ai": "Select Focused [Icon Select Box]"
    },
    {
        "key": "alt+oem_plus",
        "command": "increaseSearchEditorContextLines",
        "when": "inSearchEditor",
        "title_ai": "Increase Search Editor Context Lines",
        "title": "Search Editor: Increase Context Lines"
    },
    {
        "key": "ctrl+i",
        "command": "inlineChat.holdForSpeech",
        "when": "hasSpeechProvider && inlineChatVisible && textInputFocus",
        "title_ai": "Hold for Speech [Inline Chat]"
    },
    {
        "key": "f7",
        "command": "inlineChat.moveToNextHunk",
        "when": "inlineChatHasProvider && inlineChatVisible",
        "title_ai": "Move to Next Hunk [Inline Chat]",
        "title": "Inline Chat: Move to Next Change"
    },
    {
        "key": "shift+f7",
        "command": "inlineChat.moveToPreviousHunk",
        "when": "inlineChatHasProvider && inlineChatVisible",
        "title_ai": "Move to Previous Hunk [Inline Chat]",
        "title": "Inline Chat: Move to Previous Change"
    },
    {
        "key": "ctrl+r",
        "command": "inlineChat.regenerate",
        "when": "inlineChatHasProvider && inlineChatVisible",
        "title_ai": "Regenerate Inline Chat Response"
    },
    {
        "key": "ctrl+i",
        "command": "inlineChat.start",
        "when": "editorFocus && inlineChatHasEditsAgent && inlineChatPossible && !editorReadonly && !editorSimpleInput || editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput",
        "title_ai": "Start Inline Chat",
        "title": "Inline Chat: Editor Inline Chat"
    },
    {
        "key": "ctrl+k i",
        "command": "inlineChat.startWithCurrentLine",
        "when": "inlineChatHasProvider && !editorReadonly && !inlineChatVisible",
        "title_ai": "Start Inline Chat on Current Line",
        "title": "Inline Chat: Start in Editor with Current Line"
    },
    {
        "key": "ctrl+z",
        "command": "inlineChat.unstash",
        "when": "inlineChatHasStashedSession && !editorReadonly",
        "title_ai": "Unstash Inline Chat Session"
    },
    {
        "key": "ctrl+down",
        "command": "inlineChat.viewInChat",
        "when": "inChatInput && inlineChatHasProvider && inlineChatVisible",
        "title_ai": "View Inline Chat in Chat Panel"
    },
    {
        "key": "ctrl+i",
        "command": "inlineChat2.reveal",
        "when": "inlineChatHasEditsAgent && !chatEdits.isGlobalEditingSession && chatEdits.requestCount >= 1",
        "title_ai": "Reveal Inline Chat",
        "title": "Inline Chat: Toggle Inline Chat"
    },
    {
        "key": "escape",
        "command": "inlineChat2.stop",
        "when": "inlineChatHasEditsAgent && inlineChatVisible",
        "title_ai": "Stop Inline Chat",
        "title": "Inline Chat: Undo & Close"
    },
    {
        "key": "ctrl+i",
        "command": "inlineChat2.stop",
        "when": "inlineChatHasEditsAgent && inlineChatVisible && chatEdits.requestCount == '0'",
        "title_ai": "Stop Inline Chat",
        "title": "Inline Chat: Undo & Close"
    },
    {
        "key": "ctrl+up",
        "command": "interactive.history.focus",
        "when": "isCompositeNotebook && isLinux && !notebookEditorFocused || isCompositeNotebook && isWindows && !notebookEditorFocused",
        "title_ai": "Focus Interactive Window History",
        "title": "Interactive Window: Focus History"
    },
    {
        "key": "down",
        "command": "interactive.history.next",
        "when": "isCompositeNotebook && !notebookEditorFocused && !suggestWidgetVisible && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'",
        "title_ai": "Next Interactive Window History"
    },
    {
        "key": "up",
        "command": "interactive.history.previous",
        "when": "isCompositeNotebook && !notebookEditorFocused && !suggestWidgetVisible && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'",
        "title_ai": "Previous Interactive Window History"
    },
    {
        "key": "ctrl+end",
        "command": "interactive.scrollToBottom",
        "when": "activeEditor == 'workbench.editor.interactive'",
        "title_ai": "Scroll to Bottom [Interactive Window]"
    },
    {
        "key": "ctrl+home",
        "command": "interactive.scrollToTop",
        "when": "activeEditor == 'workbench.editor.interactive'",
        "title_ai": "Scroll to Top [Interactive Window]"
    },
    {
        "key": "enter",
        "command": "keybindings.editor.acceptWhenExpression",
        "when": "inKeybindings && whenFocus && !suggestWidgetVisible",
        "title_ai": "Accept When Expression [Keybindings Editor]"
    },
    {
        "key": "ctrl+k ctrl+a",
        "command": "keybindings.editor.addKeybinding",
        "when": "inKeybindings && keybindingFocus",
        "title_ai": "Add Keybinding [Keybindings Editor]"
    },
    {
        "key": "escape",
        "command": "keybindings.editor.clearSearchResults",
        "when": "inKeybindings && inKeybindingsSearch",
        "title_ai": "Clear Search Results [Keybindings Editor]"
    },
    {
        "key": "ctrl+c",
        "command": "keybindings.editor.copyKeybindingEntry",
        "when": "inKeybindings && keybindingFocus && !whenFocus",
        "title_ai": "Copy Keybinding [Keybindings Editor]"
    },
    {
        "key": "enter",
        "command": "keybindings.editor.defineKeybinding",
        "when": "inKeybindings && keybindingFocus && !whenFocus",
        "title_ai": "Define Keybinding [Keybindings Editor]"
    },
    {
        "key": "ctrl+k ctrl+e",
        "command": "keybindings.editor.defineWhenExpression",
        "when": "inKeybindings && keybindingFocus",
        "title_ai": "Define When Expression [Keybindings Editor]"
    },
    {
        "key": "ctrl+down",
        "command": "keybindings.editor.focusKeybindings",
        "when": "inKeybindings && inKeybindingsSearch",
        "title_ai": "Focus Keybindings List [Keybindings Editor]"
    },
    {
        "key": "alt+k",
        "command": "keybindings.editor.recordSearchKeys",
        "when": "inKeybindings && inKeybindingsSearch",
        "title_ai": "Record Keys [Keybindings Editor Search]"
    },
    {
        "key": "escape",
        "command": "keybindings.editor.rejectWhenExpression",
        "when": "inKeybindings && whenFocus && !suggestWidgetVisible",
        "title_ai": "Reject When Expression [Keybindings Editor]"
    },
    {
        "key": "delete",
        "command": "keybindings.editor.removeKeybinding",
        "when": "inKeybindings && keybindingFocus && !inputFocus",
        "title_ai": "Remove Keybinding [Keybindings Editor]"
    },
    {
        "key": "ctrl+f",
        "command": "keybindings.editor.searchKeybindings",
        "when": "inKeybindings",
        "title_ai": "Search Keybindings"
    },
    {
        "key": "alt+p",
        "command": "keybindings.editor.toggleSortByPrecedence",
        "when": "inKeybindings",
        "title_ai": "Toggle Sort by Precedence [Keybindings Editor]"
    },
    {
        "key": "escape",
        "command": "list.clear",
        "when": "listFocus && listHasSelectionOrFocus && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Clear List Selection/Focus"
    },
    {
        "key": "escape",
        "command": "list.closeFind",
        "when": "listFocus && treeFindOpen",
        "title_ai": "Close List Find"
    },
    {
        "key": "left",
        "command": "list.collapse",
        "when": "listFocus && treeElementCanCollapse && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasParent && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Collapse List Item"
    },
    {
        "key": "ctrl+left",
        "command": "list.collapseAll",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Collapse All List Items"
    },
    {
        "key": "right",
        "command": "list.expand",
        "when": "listFocus && treeElementCanExpand && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasChild && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Expand List Item"
    },
    {
        "key": "shift+down",
        "command": "list.expandSelectionDown",
        "when": "listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Expand List Selection Down"
    },
    {
        "key": "shift+up",
        "command": "list.expandSelectionUp",
        "when": "listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Expand List Selection Up"
    },
    {
        "key": "f3",
        "command": "list.find",
        "when": "listFocus && listSupportsFind",
        "title_ai": "Find in List"
    },
    {
        "key": "ctrl+alt+f",
        "command": "list.find",
        "when": "listFocus && listSupportsFind",
        "title_ai": "Find in List"
    },
    {
        "key": "alt+down",
        "command": "list.focusAnyDown",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Focus Any Item Down"
    },
    {
        "key": "alt+home",
        "command": "list.focusAnyFirst",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Focus First Item"
    },
    {
        "key": "alt+end",
        "command": "list.focusAnyLast",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Focus Last Item"
    },
    {
        "key": "alt+up",
        "command": "list.focusAnyUp",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Focus Any Item Up"
    },
    {
        "key": "down",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Focus Down"
    },
    {
        "key": "home",
        "command": "list.focusFirst",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Focus First"
    },
    {
        "key": "end",
        "command": "list.focusLast",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Focus Last"
    },
    {
        "key": "pagedown",
        "command": "list.focusPageDown",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Focus Page Down"
    },
    {
        "key": "pageup",
        "command": "list.focusPageUp",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Focus Page Up"
    },
    {
        "key": "up",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Focus Up"
    },
    {
        "key": "ctrl+down",
        "command": "list.scrollDown",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'bottom'",
        "title_ai": "Scroll List Down"
    },
    {
        "key": "ctrl+up",
        "command": "list.scrollUp",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'top'",
        "title_ai": "Scroll List Up"
    },
    {
        "key": "enter",
        "command": "list.select",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Select List Item"
    },
    {
        "key": "ctrl+a",
        "command": "list.selectAll",
        "when": "listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Select All List Items"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "list.showHover",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Show List Item Hover"
    },
    {
        "key": "space",
        "command": "list.toggleExpand",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Toggle Expand List Item"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "list.toggleSelection",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Toggle List Item Selection"
    },
    {
        "key": "backspace",
        "command": "noteMultiCursor.deleteLeft",
        "when": "config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2'",
        "title_ai": "Delete Left [Multi-Cursor Notebook]",
        "title": "Notebook: Delete Left"
    },
    {
        "key": "delete",
        "command": "noteMultiCursor.deleteRight",
        "when": "config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '1' || config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook' && notebookMultiSelectCursorState == '2'",
        "title_ai": "Delete Right [Multi-Cursor Notebook]",
        "title": "Notebook: Delete Right"
    },
    {
        "key": "escape",
        "command": "noteMultiCursor.exit",
        "when": "config.notebook.multiCursor.enabled && isNotebookMultiSelect && activeEditor == 'workbench.editor.notebook'",
        "title_ai": "Exit Multi-Cursor Notebook Mode",
        "title": "Notebook: Exit Multi Cursor Mode"
    },
    {
        "key": "ctrl+d",
        "command": "notebook.addFindMatchToSelection",
        "when": "config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'",
        "title_ai": "Add Find Match to Selection [Notebook]",
        "title": "Notebook: Add Selection to Next Find Match"
    },
    {
        "key": "ctrl+k m",
        "command": "notebook.cell.changeLanguage",
        "when": "notebookCellEditable && notebookEditable && notebookEditorFocused",
        "title_ai": "Change Cell Language [Notebook]",
        "title": "Notebook: Change Cell Language"
    },
    {
        "key": "y",
        "command": "notebook.cell.changeToCode",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'",
        "title_ai": "Change Cell to Code [Notebook]",
        "title": "Notebook: Change Cell to Code"
    },
    {
        "key": "m",
        "command": "notebook.cell.changeToMarkdown",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code'",
        "title_ai": "Change Cell to Markdown [Notebook]",
        "title": "Notebook: Change Cell to Markdown"
    },
    {
        "key": "enter",
        "command": "notebook.cell.chat.accept",
        "when": "inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused",
        "title_ai": "Accept Notebook Cell Chat Suggestion"
    },
    {
        "key": "ctrl+enter",
        "command": "notebook.cell.chat.acceptChanges",
        "when": "notebookEditorFocused && !inputFocus && !notebookCellEditorFocused && notebookChatOuterFocusPosition == 'below'",
        "title_ai": "Accept Notebook Cell Chat Changes"
    },
    {
        "key": "ctrl+down",
        "command": "notebook.cell.chat.focus",
        "when": "notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'above'",
        "title_ai": "Focus Notebook Cell Chat"
    },
    {
        "key": "ctrl+up",
        "command": "notebook.cell.chat.focus",
        "when": "notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'below'",
        "title_ai": "Focus Notebook Cell Chat"
    },
    {
        "key": "ctrl+down",
        "command": "notebook.cell.chat.focusNextCell",
        "when": "inlineChatFocused && notebookCellChatFocused",
        "title_ai": "Focus Next Notebook Cell Chat"
    },
    {
        "key": "ctrl+up",
        "command": "notebook.cell.chat.focusPreviousCell",
        "when": "inlineChatFocused && notebookCellChatFocused",
        "title_ai": "Focus Previous Notebook Cell Chat"
    },
    {
        "key": "ctrl+k i",
        "command": "notebook.cell.chat.start",
        "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus",
        "title_ai": "Start Notebook Cell Chat"
    },
    {
        "key": "ctrl+i",
        "command": "notebook.cell.chat.start",
        "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus",
        "title_ai": "Start Notebook Cell Chat"
    },
    {
        "key": "alt+delete",
        "command": "notebook.cell.clearOutputs",
        "when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus",
        "title_ai": "Clear Cell Outputs [Notebook]",
        "title": "Notebook: Clear Cell Outputs"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "notebook.cell.collapseCellInput",
        "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed",
        "title_ai": "Collapse Cell Input [Notebook]",
        "title": "Notebook: Collapse Cell Input"
    },
    {
        "key": "ctrl+k t",
        "command": "notebook.cell.collapseCellOutput",
        "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed",
        "title_ai": "Collapse Cell Output [Notebook]",
        "title": "Notebook: Collapse Cell Output"
    },
    {
        "key": "shift+alt+down",
        "command": "notebook.cell.copyDown",
        "when": "notebookEditorFocused && !inputFocus",
        "title_ai": "Copy Cell Down [Notebook]",
        "title": "Notebook: Copy Cell Down"
    },
    {
        "key": "shift+alt+up",
        "command": "notebook.cell.copyUp",
        "when": "notebookEditorFocused && !inputFocus",
        "title_ai": "Copy Cell Up [Notebook]",
        "title": "Notebook: Copy Cell Up"
    },
    {
        "key": "delete",
        "command": "notebook.cell.delete",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "title_ai": "Delete Cell [Notebook]",
        "title": "Notebook: Delete Cell"
    },
    {
        "key": "shift+alt+d",
        "command": "notebook.cell.detectLanguage",
        "when": "notebookCellEditable && notebookEditable",
        "title_ai": "Detect Cell Language [Notebook]",
        "title": "Notebook: Accept Detected Language for Cell"
    },
    {
        "key": "enter",
        "command": "notebook.cell.edit",
        "when": "notebookCellListFocused && !editorHoverFocused && !inputFocus && !notebookOutputInputFocused",
        "title_ai": "Edit Cell [Notebook]",
        "title": "Notebook: Edit Cell"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "notebook.cell.expandCellInput",
        "when": "notebookCellInputIsCollapsed && notebookCellListFocused",
        "title_ai": "Expand Cell Input [Notebook]",
        "title": "Notebook: Expand Cell Input"
    },
    {
        "key": "ctrl+k t",
        "command": "notebook.cell.expandCellOutput",
        "when": "notebookCellListFocused && notebookCellOutputIsCollapsed",
        "title_ai": "Expand Cell Output [Notebook]",
        "title": "Notebook: Expand Cell Output"
    },
    {
        "key": "ctrl+down",
        "command": "notebook.cell.focusInOutput",
        "when": "isWindows && notebookCellHasOutputs && notebookEditorFocused && !isCompositeNotebook",
        "title_ai": "Focus in Cell Output [Notebook]",
        "title": "Notebook: Focus In Active Cell Output"
    },
    {
        "key": "ctrl+shift+down",
        "command": "notebook.cell.focusInOutput",
        "when": "notebookCellHasOutputs && notebookEditorFocused",
        "title_ai": "Focus in Cell Output [Notebook]",
        "title": "Notebook: Focus In Active Cell Output"
    },
    {
        "key": "ctrl+shift+up",
        "command": "notebook.cell.focusOutOutput",
        "when": "notebookEditorFocused && notebookOutputFocused",
        "title_ai": "Focus Out of Cell Output [Notebook]",
        "title": "Notebook: Focus Out Active Cell Output"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "notebook.cell.insertCodeCellAbove",
        "when": "notebookCellListFocused && !inputFocus",
        "title_ai": "Insert Code Cell Above [Notebook]",
        "title": "Notebook: Insert Code Cell Above"
    },
    {
        "key": "ctrl+enter",
        "command": "notebook.cell.insertCodeCellBelow",
        "when": "notebookCellListFocused && !inputFocus && notebookChatOuterFocusPosition == ''",
        "title_ai": "Insert Code Cell Below [Notebook]",
        "title": "Notebook: Insert Code Cell Below"
    },
    {
        "key": "shift+alt+win+j",
        "command": "notebook.cell.joinAbove",
        "when": "notebookEditorFocused",
        "title_ai": "Join Cell Above [Notebook]",
        "title": "Notebook: Join With Previous Cell"
    },
    {
        "key": "alt+win+j",
        "command": "notebook.cell.joinBelow",
        "when": "notebookEditorFocused",
        "title_ai": "Join Cell Below [Notebook]",
        "title": "Notebook: Join With Next Cell"
    },
    {
        "key": "alt+down",
        "command": "notebook.cell.moveDown",
        "when": "notebookEditorFocused && !inputFocus",
        "title_ai": "Move Cell Down [Notebook]",
        "title": "Notebook: Move Cell Down"
    },
    {
        "key": "alt+up",
        "command": "notebook.cell.moveUp",
        "when": "notebookEditorFocused && !inputFocus",
        "title_ai": "Move Cell Up [Notebook]",
        "title": "Notebook: Move Cell Up"
    },
    {
        "key": "ctrl+oem_period",
        "command": "notebook.cell.openFailureActions",
        "when": "notebookCellFocused && notebookCellHasErrorDiagnostics && !notebookCellEditorFocused",
        "title_ai": "Show Cell Failure Actions [Notebook]",
        "title": "Notebook: Show Cell Failure Actions"
    },
    {
        "key": "ctrl+k ctrl+shift+oem_5",
        "command": "notebook.cell.split",
        "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused",
        "title_ai": "Split Cell [Notebook]",
        "title": "Notebook: Split Cell"
    },
    {
        "key": "ctrl+k y",
        "command": "notebook.cell.toggleOutputScrolling",
        "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus",
        "title_ai": "Toggle Output Scrolling [Notebook]",
        "title": "Notebook: Toggle Scroll Cell Output"
    },
    {
        "key": "ctrl+l",
        "command": "notebook.centerActiveCell",
        "when": "notebookEditorFocused",
        "title_ai": "Center Active Cell [Notebook]",
        "title": "Notebook: Center Active Cell"
    },
    {
        "key": "ctrl+oem_2",
        "command": "notebook.commentSelectedCells",
        "when": "notebookEditable && notebookEditorFocused && !inputFocus",
        "title_ai": "Comment Selected Cells [Notebook]",
        "title": "Notebook: Comment Selected Cells"
    },
    {
        "key": "alt+f3",
        "command": "notebook.diff.action.next",
        "when": "activeEditor == 'workbench.editor.notebookTextDiffEditor'",
        "title_ai": "Next Change [Notebook Diff]"
    },
    {
        "key": "shift+alt+f3",
        "command": "notebook.diff.action.previous",
        "when": "activeEditor == 'workbench.editor.notebookTextDiffEditor'",
        "title_ai": "Previous Change [Notebook Diff]"
    },
    {
        "key": "ctrl+f",
        "command": "notebook.find",
        "when": "notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook'",
        "title_ai": "Find in Notebook",
        "title": "Notebook: Find in Notebook"
    },
    {
        "key": "ctrl+end",
        "command": "notebook.focusBottom",
        "when": "notebookEditorFocused && !inputFocus",
        "title_ai": "Focus Bottom Cell [Notebook]",
        "title": "Notebook: Focus Last Cell"
    },
    {
        "key": "down",
        "command": "notebook.focusNextEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup'",
        "title_ai": "Focus Next Notebook Cell Editor",
        "title": "Notebook: Focus Next Cell Editor"
    },
    {
        "key": "ctrl+down",
        "command": "notebook.focusNextEditor",
        "when": "notebookEditorFocused && notebookOutputFocused",
        "title_ai": "Focus Next Notebook Cell Editor",
        "title": "Notebook: Focus Next Cell Editor"
    },
    {
        "key": "up",
        "command": "notebook.focusPreviousEditor",
        "when": "config.notebook.navigation.allowNavigateToSurroundingCells && notebookCursorNavigationMode && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellMarkdownEditMode && notebookCellType == 'markup'",
        "title_ai": "Focus Previous Notebook Cell Editor",
        "title": "Notebook: Focus Previous Cell Editor"
    },
    {
        "key": "ctrl+home",
        "command": "notebook.focusTop",
        "when": "notebookEditorFocused && !inputFocus",
        "title_ai": "Focus Top Cell [Notebook]",
        "title": "Notebook: Focus First Cell"
    },
    {
        "key": "left",
        "command": "notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'",
        "title_ai": "Fold Cell [Notebook]",
        "title": "Notebook: Fold Cell"
    },
    {
        "key": "ctrl+shift+oem_4",
        "command": "notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'",
        "title_ai": "Fold Cell [Notebook]",
        "title": "Notebook: Fold Cell"
    },
    {
        "key": "shift+alt+f",
        "command": "notebook.format",
        "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'",
        "title_ai": "Format Notebook",
        "title": "Notebook: Format Notebook"
    },
    {
        "key": "escape",
        "command": "notebook.hideFind",
        "when": "notebookEditorFocused && notebookFindWidgetFocused",
        "title_ai": "Hide Find [Notebook]"
    },
    {
        "key": "ctrl+shift+l",
        "command": "notebook.selectAllFindMatches",
        "when": "config.notebook.multiCursor.enabled && notebookFindWidgetFocused || config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'",
        "title_ai": "Select All Find Matches [Notebook]",
        "title": "Notebook: Select All Occurrences of Find Match"
    },
    {
        "key": "right",
        "command": "notebook.unfold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'",
        "title_ai": "Unfold Cell [Notebook]",
        "title": "Notebook: Unfold Cell"
    },
    {
        "key": "ctrl+shift+oem_6",
        "command": "notebook.unfold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'",
        "title_ai": "Unfold Cell [Notebook]",
        "title": "Notebook: Unfold Cell"
    },
    {
        "key": "ctrl+shift+a",
        "command": "notification.acceptPrimaryAction",
        "when": "notificationFocus || notificationToastsVisible",
        "title_ai": "Accept Notification Primary Action",
        "title": "Notifications: Accept Notification Primary Action"
    },
    {
        "key": "delete",
        "command": "notification.clear",
        "when": "notificationFocus",
        "title_ai": "Clear Notification"
    },
    {
        "key": "left",
        "command": "notification.collapse",
        "when": "notificationFocus",
        "title_ai": "Collapse Notification"
    },
    {
        "key": "right",
        "command": "notification.expand",
        "when": "notificationFocus",
        "title_ai": "Expand Notification"
    },
    {
        "key": "enter",
        "command": "notification.toggle",
        "when": "notificationFocus",
        "title_ai": "Toggle Notification"
    },
    {
        "key": "space",
        "command": "notification.toggle",
        "when": "notificationFocus",
        "title_ai": "Toggle Notification"
    },
    {
        "key": "home",
        "command": "notifications.focusFirstToast",
        "when": "notificationFocus && notificationToastsVisible",
        "title_ai": "Focus First Notification"
    },
    {
        "key": "pageup",
        "command": "notifications.focusFirstToast",
        "when": "notificationFocus && notificationToastsVisible",
        "title_ai": "Focus First Notification"
    },
    {
        "key": "end",
        "command": "notifications.focusLastToast",
        "when": "notificationFocus && notificationToastsVisible",
        "title_ai": "Focus Last Notification"
    },
    {
        "key": "pagedown",
        "command": "notifications.focusLastToast",
        "when": "notificationFocus && notificationToastsVisible",
        "title_ai": "Focus Last Notification"
    },
    {
        "key": "down",
        "command": "notifications.focusNextToast",
        "when": "notificationFocus && notificationToastsVisible",
        "title_ai": "Focus Next Notification"
    },
    {
        "key": "up",
        "command": "notifications.focusPreviousToast",
        "when": "notificationFocus && notificationToastsVisible",
        "title_ai": "Focus Previous Notification"
    },
    {
        "key": "ctrl+k ctrl+shift+n",
        "command": "notifications.showList",
        "title_ai": "Show Notifications List",
        "title": "Notifications: Show Notifications"
    },
    {
        "key": "escape",
        "command": "problems.action.clearFilterText",
        "when": "problemsFilterFocus",
        "title_ai": "Clear Problems Filter"
    },
    {
        "key": "ctrl+c",
        "command": "problems.action.copy",
        "when": "problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view'",
        "title_ai": "Copy Problem Message"
    },
    {
        "key": "ctrl+f",
        "command": "problems.action.focusFilter",
        "when": "focusedView == 'workbench.panel.markers.view'",
        "title_ai": "Focus Problems Filter"
    },
    {
        "key": "ctrl+down",
        "command": "problems.action.focusProblemsFromFilter",
        "when": "problemsFilterFocus",
        "title_ai": "Focus Problems from Filter"
    },
    {
        "key": "enter",
        "command": "problems.action.open",
        "when": "problemFocus",
        "title_ai": "Open Problem"
    },
    {
        "key": "ctrl+enter",
        "command": "problems.action.openToSide",
        "when": "problemFocus",
        "title_ai": "Open Problem to Side"
    },
    {
        "key": "ctrl+oem_period",
        "command": "problems.action.showQuickFixes",
        "when": "problemFocus",
        "title_ai": "Show Problem Quick Fixes"
    },
    {
        "key": "ctrl+alt+home",
        "command": "quickInput.first",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Go to First Item [Quick Pick]"
    },
    {
        "key": "ctrl+home",
        "command": "quickInput.first",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Go to First Item [Quick Pick]"
    },
    {
        "key": "ctrl+alt+end",
        "command": "quickInput.last",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Go to Last Item [Quick Pick]"
    },
    {
        "key": "ctrl+end",
        "command": "quickInput.last",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Go to Last Item [Quick Pick]"
    },
    {
        "key": "ctrl+down",
        "command": "quickInput.next",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Go to Next Item [Quick Pick]"
    },
    {
        "key": "down",
        "command": "quickInput.next",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Go to Next Item [Quick Pick]"
    },
    {
        "key": "ctrl+alt+down",
        "command": "quickInput.nextSeparator",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Go to Next Separator [Quick Pick]"
    },
    {
        "key": "alt+down",
        "command": "quickInput.nextSeparatorWithQuickAccessFallback",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Go to Next Separator [Quick Pick Fallback]"
    },
    {
        "key": "ctrl+alt+pagedown",
        "command": "quickInput.pageNext",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Go to Next Page [Quick Pick]"
    },
    {
        "key": "ctrl+pagedown",
        "command": "quickInput.pageNext",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Go to Next Page [Quick Pick]"
    },
    {
        "key": "alt+pagedown",
        "command": "quickInput.pageNext",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Go to Next Page [Quick Pick]"
    },
    {
        "key": "pagedown",
        "command": "quickInput.pageNext",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Go to Next Page [Quick Pick]"
    },
    {
        "key": "ctrl+alt+pageup",
        "command": "quickInput.pagePrevious",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Go to Previous Page [Quick Pick]"
    },
    {
        "key": "ctrl+pageup",
        "command": "quickInput.pagePrevious",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Go to Previous Page [Quick Pick]"
    },
    {
        "key": "alt+pageup",
        "command": "quickInput.pagePrevious",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Go to Previous Page [Quick Pick]"
    },
    {
        "key": "pageup",
        "command": "quickInput.pagePrevious",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Go to Previous Page [Quick Pick]"
    },
    {
        "key": "ctrl+up",
        "command": "quickInput.previous",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Go to Previous Item [Quick Pick]"
    },
    {
        "key": "up",
        "command": "quickInput.previous",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Go to Previous Item [Quick Pick]"
    },
    {
        "key": "ctrl+alt+up",
        "command": "quickInput.previousSeparator",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Go to Previous Separator [Quick Pick]"
    },
    {
        "key": "alt+up",
        "command": "quickInput.previousSeparatorWithQuickAccessFallback",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Go to Previous Separator [Quick Pick Fallback]"
    },
    {
        "key": "ctrl+space",
        "command": "quickInput.toggleHover",
        "when": "inQuickInput && quickInputType == 'quickPick'",
        "title_ai": "Toggle Hover [Quick Pick]"
    },
    {
        "key": "space",
        "command": "refactorPreview.toggleCheckedState",
        "when": "listFocus && refactorPreview.enabled && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Toggle Checked State [Refactor Preview]"
    },
    {
        "key": "shift+alt+r",
        "command": "revealFileInOS",
        "when": "!editorFocus",
        "title_ai": "Reveal Active File in File Explorer",
        "title": "File: Reveal in File Explorer"
    },
    {
        "key": "enter",
        "command": "revealReference",
        "when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused",
        "title_ai": "Reveal Reference"
    },
    {
        "key": "ctrl+k s",
        "command": "saveAll",
        "title_ai": "Save All"
    },
    {
        "key": "ctrl+enter",
        "command": "scm.acceptInput",
        "when": "scmRepository",
        "title_ai": "Accept Source Control Message"
    },
    {
        "key": "escape",
        "command": "scm.clearInput",
        "when": "scmRepository && !editorHasSelection && !suggestWidgetVisible",
        "title_ai": "Clear Source Control Message"
    },
    {
        "key": "alt+down",
        "command": "scm.forceViewNextCommit",
        "when": "scmRepository",
        "title_ai": "View Next Commit [Force]"
    },
    {
        "key": "alt+up",
        "command": "scm.forceViewPreviousCommit",
        "when": "scmRepository",
        "title_ai": "View Previous Commit [Force]"
    },
    {
        "key": "down",
        "command": "scm.viewNextCommit",
        "when": "scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible",
        "title_ai": "View Next Commit"
    },
    {
        "key": "up",
        "command": "scm.viewPreviousCommit",
        "when": "scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible",
        "title_ai": "View Previous Commit"
    },
    {
        "key": "escape",
        "command": "search.action.cancel",
        "when": "listFocus && searchViewletVisible && !inputFocus && !treestickyScrollFocused && searchState != '0'",
        "title_ai": "Cancel Search",
        "title": "Search: Cancel Search"
    },
    {
        "key": "ctrl+c",
        "command": "search.action.copyMatch",
        "when": "fileMatchOrMatchFocus",
        "title_ai": "Copy Search Match"
    },
    {
        "key": "shift+alt+c",
        "command": "search.action.copyPath",
        "when": "fileMatchOrFolderMatchWithResourceFocus",
        "title_ai": "Copy Path [Search Result]"
    },
    {
        "key": "f4",
        "command": "search.action.focusNextSearchResult",
        "when": "hasSearchResult || inSearchEditor",
        "title_ai": "Focus Next Search Result",
        "title": "Search: Focus Next Search Result"
    },
    {
        "key": "shift+f4",
        "command": "search.action.focusPreviousSearchResult",
        "when": "hasSearchResult || inSearchEditor",
        "title_ai": "Focus Previous Search Result",
        "title": "Search: Focus Previous Search Result"
    },
    {
        "key": "ctrl+up",
        "command": "search.action.focusSearchFromResults",
        "when": "accessibilityModeEnabled && searchViewletVisible || firstMatchFocus && searchViewletVisible",
        "title_ai": "Focus Search Input from Results"
    },
    {
        "key": "alt+enter",
        "command": "search.action.openInEditor",
        "when": "hasSearchResult && searchViewletFocus",
        "title_ai": "Open Search Results in Editor",
        "title": "Search Editor: Open Results in Editor"
    },
    {
        "key": "enter",
        "command": "search.action.openResult",
        "when": "fileMatchOrMatchFocus && searchViewletVisible",
        "title_ai": "Open Search Result"
    },
    {
        "key": "ctrl+enter",
        "command": "search.action.openResultToSide",
        "when": "fileMatchOrMatchFocus && searchViewletVisible",
        "title_ai": "Open Search Result to Side"
    },
    {
        "key": "delete",
        "command": "search.action.remove",
        "when": "fileMatchOrMatchFocus && searchViewletVisible",
        "title_ai": "Remove Search Result"
    },
    {
        "key": "ctrl+shift+1",
        "command": "search.action.replace",
        "when": "isEditableItem && matchFocus && replaceActive && searchViewletVisible",
        "title_ai": "Replace Search Result"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible",
        "title_ai": "Replace All in Files"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "search.action.replaceAllInFile",
        "when": "fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible",
        "title_ai": "Replace All in File"
    },
    {
        "key": "ctrl+shift+1",
        "command": "search.action.replaceAllInFile",
        "when": "fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible",
        "title_ai": "Replace All in File"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "search.action.replaceAllInFolder",
        "when": "folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible",
        "title_ai": "Replace All in Folder"
    },
    {
        "key": "ctrl+shift+1",
        "command": "search.action.replaceAllInFolder",
        "when": "folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible",
        "title_ai": "Replace All in Folder"
    },
    {
        "key": "shift+alt+f",
        "command": "search.action.restrictSearchToFolder",
        "when": "folderMatchWithResourceFocus && searchViewletVisible",
        "title_ai": "Restrict Search to Folder"
    },
    {
        "key": "ctrl+down",
        "command": "search.focus.nextInputBox",
        "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible",
        "title_ai": "Focus Next Search Input Box"
    },
    {
        "key": "ctrl+up",
        "command": "search.focus.previousInputBox",
        "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus",
        "title_ai": "Focus Previous Search Input Box"
    },
    {
        "key": "ctrl+shift+l",
        "command": "selectAllSearchEditorMatches",
        "when": "inSearchEditor",
        "title_ai": "Select All Matches [Search Editor]",
        "title": "Search Editor: Select All Matches"
    },
    {
        "key": "escape",
        "command": "settings.action.focusLevelUp",
        "when": "inSettingsEditor && !inSettingsJSONEditor && !inSettingsSearch",
        "title_ai": "Focus Level Up [Settings]",
        "title": "Preferences: Move Focus Up One Level"
    },
    {
        "key": "enter",
        "command": "settings.action.focusSettingControl",
        "when": "inSettingsEditor && settingRowFocus",
        "title_ai": "Focus Setting Control"
    },
    {
        "key": "down",
        "command": "settings.action.focusSettingsFromSearch",
        "when": "inSettingsSearch && !suggestWidgetVisible",
        "title_ai": "Focus Settings List from Search"
    },
    {
        "key": "enter",
        "command": "settings.action.focusSettingsList",
        "when": "inSettingsEditor && settingsTocRowFocus",
        "title_ai": "Focus Settings List"
    },
    {
        "key": "left",
        "command": "settings.action.focusTOC",
        "when": "inSettingsEditor && settingRowFocus",
        "title_ai": "Focus Table of Contents [Settings]",
        "title": "Preferences: Focus Settings Table of Contents"
    },
    {
        "key": "shift+f9",
        "command": "settings.action.showContextMenu",
        "when": "inSettingsEditor",
        "title_ai": "Show Settings Context Menu",
        "title": "Preferences: Show Setting Context Menu"
    },
    {
        "key": "ctrl+oem_1 ctrl+x",
        "command": "testing.cancelRun",
        "title_ai": "Cancel Test Run"
    },
    {
        "key": "ctrl+oem_1 ctrl+shift+a",
        "command": "testing.coverageAll",
        "title_ai": "Run Coverage for All Tests",
        "title": "Test: Run All Tests with Coverage"
    },
    {
        "key": "ctrl+oem_1 ctrl+shift+c",
        "command": "testing.coverageAtCursor",
        "when": "editorTextFocus",
        "title_ai": "Run Coverage for Test at Cursor",
        "title": "Test: Run Test at Cursor with Coverage"
    },
    {
        "key": "ctrl+oem_1 ctrl+shift+f",
        "command": "testing.coverageCurrentFile",
        "when": "editorTextFocus",
        "title_ai": "Run Coverage for Current File Tests",
        "title": "Test: Run Tests with Coverage in Current File"
    },
    {
        "key": "ctrl+oem_1 ctrl+shift+l",
        "command": "testing.coverageLastRun",
        "title_ai": "Run Coverage for Last Test Run",
        "title": "Test: Rerun Last Run with Coverage"
    },
    {
        "key": "ctrl+oem_1 ctrl+a",
        "command": "testing.debugAll",
        "title_ai": "Debug All Tests",
        "title": "Test: Debug All Tests"
    },
    {
        "key": "ctrl+oem_1 ctrl+c",
        "command": "testing.debugAtCursor",
        "when": "editorTextFocus",
        "title_ai": "Debug Test at Cursor",
        "title": "Test: Debug Test at Cursor"
    },
    {
        "key": "ctrl+oem_1 ctrl+f",
        "command": "testing.debugCurrentFile",
        "when": "editorTextFocus",
        "title_ai": "Debug Current File Tests",
        "title": "Test: Debug Tests in Current File"
    },
    {
        "key": "ctrl+oem_1 ctrl+e",
        "command": "testing.debugFailTests",
        "title_ai": "Debug Failed Tests",
        "title": "Test: Debug Failed Tests"
    },
    {
        "key": "ctrl+oem_1 ctrl+l",
        "command": "testing.debugLastRun",
        "title_ai": "Debug Last Test Run",
        "title": "Test: Debug Last Run"
    },
    {
        "key": "ctrl+oem_1 ctrl+m",
        "command": "testing.openOutputPeek",
        "title_ai": "Open Test Output Peek",
        "title": "Test: Peek Output"
    },
    {
        "key": "ctrl+oem_1 e",
        "command": "testing.reRunFailTests",
        "title_ai": "Rerun Failed Tests",
        "title": "Test: Rerun Failed Tests"
    },
    {
        "key": "ctrl+oem_1 l",
        "command": "testing.reRunLastRun",
        "title_ai": "Rerun Last Test Run",
        "title": "Test: Rerun Last Run"
    },
    {
        "key": "ctrl+oem_1 ctrl+r",
        "command": "testing.refreshTests",
        "when": "testing.canRefresh",
        "title_ai": "Refresh Tests",
        "title": "Test: Refresh Tests"
    },
    {
        "key": "ctrl+oem_1 a",
        "command": "testing.runAll",
        "title_ai": "Run All Tests",
        "title": "Test: Run All Tests"
    },
    {
        "key": "ctrl+oem_1 c",
        "command": "testing.runAtCursor",
        "when": "editorTextFocus",
        "title_ai": "Run Test at Cursor",
        "title": "Test: Run Test at Cursor"
    },
    {
        "key": "ctrl+oem_1 f",
        "command": "testing.runCurrentFile",
        "when": "editorTextFocus",
        "title_ai": "Run Current File Tests",
        "title": "Test: Run Tests in Current File"
    },
    {
        "key": "ctrl+oem_1 ctrl+o",
        "command": "testing.showMostRecentOutput",
        "when": "testing.hasAnyResults",
        "title_ai": "Show Most Recent Test Output",
        "title": "Test: Show Output"
    },
    {
        "key": "ctrl+oem_1 ctrl+shift+i",
        "command": "testing.toggleInlineCoverage",
        "title_ai": "Toggle Inline Test Coverage",
        "title": "Test: Toggle Inline Coverage"
    },
    {
        "key": "ctrl+oem_1 ctrl+i",
        "command": "testing.toggleInlineTestOutput",
        "title_ai": "Toggle Inline Test Output",
        "title": "Test: Toggle Inline Test Output"
    },
    {
        "key": "alt+h",
        "command": "testing.toggleTestingPeekHistory",
        "when": "testing.isPeekVisible",
        "title_ai": "Toggle Test Peek History",
        "title": "Test: Toggle Test History in Peek"
    },
    {
        "key": "alt+c",
        "command": "toggleSearchCaseSensitive",
        "when": "searchViewletFocus",
        "title_ai": "Toggle Search Case Sensitive"
    },
    {
        "key": "alt+c",
        "command": "toggleSearchEditorCaseSensitive",
        "when": "inSearchEditor && searchInputBoxFocus",
        "title_ai": "Toggle Case Sensitive [Search Editor]",
        "title": "Search Editor: Toggle Match Case"
    },
    {
        "key": "alt+l",
        "command": "toggleSearchEditorContextLines",
        "when": "inSearchEditor",
        "title_ai": "Toggle Context Lines [Search Editor]",
        "title": "Search Editor: Toggle Context Lines"
    },
    {
        "key": "alt+r",
        "command": "toggleSearchEditorRegex",
        "when": "inSearchEditor && searchInputBoxFocus",
        "title_ai": "Toggle Regex [Search Editor]",
        "title": "Search Editor: Toggle Use Regular Expression"
    },
    {
        "key": "alt+w",
        "command": "toggleSearchEditorWholeWord",
        "when": "inSearchEditor && searchInputBoxFocus",
        "title_ai": "Toggle Whole Word [Search Editor]",
        "title": "Search Editor: Toggle Match Whole Word"
    },
    {
        "key": "alt+p",
        "command": "toggleSearchPreserveCase",
        "when": "searchViewletFocus",
        "title_ai": "Toggle Preserve Case [Search Replace]"
    },
    {
        "key": "alt+r",
        "command": "toggleSearchRegex",
        "when": "searchViewletFocus",
        "title_ai": "Toggle Search Regex"
    },
    {
        "key": "alt+w",
        "command": "toggleSearchWholeWord",
        "when": "searchViewletFocus",
        "title_ai": "Toggle Search Whole Word"
    },
    {
        "key": "ctrl+alt+win+n",
        "command": "welcome.showNewFileEntries",
        "title_ai": "Welcome: Show New File Entries",
        "title": "Create: New File..."
    },
    {
        "key": "ctrl+down",
        "command": "widgetNavigation.focusNext",
        "when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom'",
        "title_ai": "Focus Next Widget"
    },
    {
        "key": "ctrl+up",
        "command": "widgetNavigation.focusPrevious",
        "when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'top'",
        "title_ai": "Focus Previous Widget"
    },
    {
        "key": "alt+backspace",
        "command": "workbench.action.chat.cancel",
        "title_ai": "Cancel Chat Request"
    },
    {
        "key": "ctrl+down",
        "command": "workbench.action.chat.focusInput",
        "when": "inChat && !inChatInput && !quickChatHasFocus",
        "title_ai": "Focus Chat Input"
    },
    {
        "key": "ctrl+up",
        "command": "workbench.action.chat.focusInput",
        "when": "inChat && quickChatHasFocus && !inChatInput",
        "title_ai": "Focus Chat Input"
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.chat.holdToVoiceChatInChatView",
        "when": "chatIsEnabled && hasSpeechProvider && !chatSessionRequestInProgress && !editorFocus && !inChatInput && !inlineChatFocused && !notebookEditorFocused",
        "title_ai": "Hold for Voice Chat"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.chat.newChat",
        "when": "chatIsEnabled && inChat && chatLocation != 'editing-session'",
        "title_ai": "New Chat Session",
        "title": "Chat: New Chat"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.chat.newEditSession",
        "when": "chatEditingParticipantRegistered && chatIsEnabled && inChat && chatLocation == 'editing-session'",
        "title_ai": "New Edit Session",
        "title": "Chat: New Chat"
    },
    {
        "key": "ctrl+alt+pagedown",
        "command": "workbench.action.chat.nextCodeBlock",
        "when": "chatIsEnabled && inChat",
        "title_ai": "Next Code Block [Chat]",
        "title": "Chat: Next Code Block"
    },
    {
        "key": "ctrl+f9",
        "command": "workbench.action.chat.nextFileTree",
        "when": "chatIsEnabled && inChat",
        "title_ai": "Next File Tree [Chat]",
        "title": "Chat: Next File Tree"
    },
    {
        "key": "ctrl+alt+i",
        "command": "workbench.action.chat.open",
        "title_ai": "Open Chat",
        "title": "Chat: Open Chat"
    },
    {
        "key": "ctrl+shift+i",
        "command": "workbench.action.chat.openEditSession",
        "when": "chatEditingParticipantRegistered && view != 'workbench.panel.chat.view.edits'",
        "title_ai": "Open Edit Session",
        "title": "Chat: Open Copilot Edits"
    },
    {
        "key": "ctrl+alt+pageup",
        "command": "workbench.action.chat.previousCodeBlock",
        "when": "chatIsEnabled && inChat",
        "title_ai": "Previous Code Block [Chat]",
        "title": "Chat: Previous Code Block"
    },
    {
        "key": "ctrl+shift+f9",
        "command": "workbench.action.chat.previousFileTree",
        "when": "chatIsEnabled && inChat",
        "title_ai": "Previous File Tree [Chat]",
        "title": "Chat: Previous File Tree"
    },
    {
        "key": "delete",
        "command": "workbench.action.chat.remove",
        "when": "inChat && !inChatInput && chatLocation != 'editing-session'",
        "title_ai": "Remove Chat Request"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "workbench.action.chat.sendToChatEditing",
        "when": "chatEditingParticipantRegistered && chatInputHasText && chatIsEnabled && chatRequestIsPaused && !chatInputHasAgent && chatLocation != 'editing-session' && chatLocation != 'editor' || chatEditingParticipantRegistered && chatInputHasText && chatIsEnabled && !chatInputHasAgent && !chatSessionRequestInProgress && chatLocation != 'editing-session' && chatLocation != 'editor' || chatEditingParticipantRegistered && chatInstructionsAttached && chatIsEnabled && chatRequestIsPaused && !chatInputHasAgent && chatLocation != 'editing-session' && chatLocation != 'editor' || chatEditingParticipantRegistered && chatInstructionsAttached && chatIsEnabled && !chatInputHasAgent && !chatSessionRequestInProgress && chatLocation != 'editing-session' && chatLocation != 'editor'",
        "title_ai": "Send to Chat Editing"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "workbench.action.chat.sendToNewChat",
        "when": "chatInputHasText && chatRequestIsPaused && inChatInput || chatInputHasText && inChatInput && !chatSessionRequestInProgress || chatInstructionsAttached && chatRequestIsPaused && inChatInput || chatInstructionsAttached && inChatInput && !chatSessionRequestInProgress",
        "title_ai": "Send to New Chat"
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.chat.startVoiceChat",
        "when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress",
        "title_ai": "Start Voice Chat",
        "title": "Chat: Start Voice Chat"
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.chat.stopListeningAndSubmit",
        "when": "inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'",
        "title_ai": "Stop Voice Chat and Submit",
        "title": "Chat: Stop Listening and Submit"
    },
    {
        "key": "delete",
        "command": "workbench.action.chat.undoEdits",
        "when": "inChat && !inChatInput && chatLocation == 'editing-session'",
        "title_ai": "Undo Chat Edits"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.closeActiveEditor",
        "title_ai": "Close Editor",
        "title": "View: Close Editor"
    },
    {
        "key": "ctrl+f4",
        "command": "workbench.action.closeActiveEditor",
        "title_ai": "Close Editor",
        "title": "View: Close Editor"
    },
    {
        "key": "ctrl+k ctrl+w",
        "command": "workbench.action.closeAllEditors",
        "title_ai": "Close All Editors",
        "title": "View: Close All Editors"
    },
    {
        "key": "ctrl+k ctrl+shift+w",
        "command": "workbench.action.closeAllGroups",
        "title_ai": "Close All Editor Groups",
        "title": "View: Close All Editor Groups"
    },
    {
        "key": "ctrl+k w",
        "command": "workbench.action.closeEditorsInGroup",
        "title_ai": "Close All Editors in Group",
        "title": "View: Close All Editors in Group"
    },
    {
        "key": "ctrl+k f",
        "command": "workbench.action.closeFolder",
        "when": "emptyWorkspaceSupport && workbenchState != 'empty'",
        "title_ai": "Close Folder",
        "title": "Workspaces: Close Workspace"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups",
        "title_ai": "Close Editor Group"
    },
    {
        "key": "ctrl+f4",
        "command": "workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups",
        "title_ai": "Close Editor Group"
    },
    {
        "key": "shift+escape",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen",
        "title_ai": "Close Quick Open"
    },
    {
        "key": "escape",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen",
        "title_ai": "Close Quick Open"
    },
    {
        "key": "ctrl+k u",
        "command": "workbench.action.closeUnmodifiedEditors",
        "title_ai": "Close Unmodified Editors in Group",
        "title": "View: Close Saved Editors in Group"
    },
    {
        "key": "ctrl+shift+w",
        "command": "workbench.action.closeWindow",
        "title_ai": "Close Window",
        "title": "Close Window"
    },
    {
        "key": "alt+f4",
        "command": "workbench.action.closeWindow",
        "title_ai": "Close Window",
        "title": "Close Window"
    },
    {
        "key": "alt+f5",
        "command": "workbench.action.compareEditor.nextChange",
        "when": "textCompareEditorVisible",
        "title_ai": "Next Change [Compare Editor]",
        "title": "Go to Next Change"
    },
    {
        "key": "ctrl+k shift+o",
        "command": "workbench.action.compareEditor.openSide",
        "when": "inDiffEditor",
        "title_ai": "Open Side [Compare Editor]"
    },
    {
        "key": "shift+alt+f5",
        "command": "workbench.action.compareEditor.previousChange",
        "when": "textCompareEditorVisible",
        "title_ai": "Previous Change [Compare Editor]",
        "title": "Go to Previous Change"
    },
    {
        "key": "ctrl+k o",
        "command": "workbench.action.copyEditorToNewWindow",
        "when": "activeEditor",
        "title_ai": "Copy Editor to New Window",
        "title": "View: Copy Editor into New Window"
    },
    {
        "key": "shift+f5",
        "command": "workbench.action.debug.disconnect",
        "when": "focusedSessionIsAttach && inDebugMode",
        "title_ai": "Disconnect Debug Session",
        "title": "Debug: Disconnect"
    },
    {
        "key": "ctrl+shift+f5",
        "command": "workbench.action.debug.restart",
        "when": "inDebugMode",
        "title_ai": "Restart Debug Session",
        "title": "Debug: Restart"
    },
    {
        "key": "ctrl+f5",
        "command": "workbench.action.debug.run",
        "when": "debuggersAvailable && debugState != 'initializing'",
        "title_ai": "Start Debugging Without Debugging",
        "title": "Debug: Start Without Debugging"
    },
    {
        "key": "f5",
        "command": "workbench.action.debug.start",
        "when": "debuggersAvailable && debugState == 'inactive'",
        "title_ai": "Start Debugging",
        "title": "Debug: Start Debugging"
    },
    {
        "key": "ctrl+f11",
        "command": "workbench.action.debug.stepIntoTarget",
        "when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'",
        "title_ai": "Step Into Target",
        "title": "Debug: Step Into Target"
    },
    {
        "key": "shift+f11",
        "command": "workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'",
        "title_ai": "Step Out",
        "title": "Debug: Step Out"
    },
    {
        "key": "f10",
        "command": "workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'",
        "title_ai": "Step Over",
        "title": "Debug: Step Over"
    },
    {
        "key": "shift+f5",
        "command": "workbench.action.debug.stop",
        "when": "inDebugMode && !focusedSessionIsAttach",
        "title_ai": "Stop Debugging",
        "title": "Debug: Stop"
    },
    {
        "key": "ctrl+k m",
        "command": "workbench.action.editor.changeLanguageMode",
        "when": "!notebookEditorFocused",
        "title_ai": "Change Language Mode",
        "title": "Change Language Mode"
    },
    {
        "key": "alt+oem_3",
        "command": "workbench.action.editorDictation.start",
        "when": "hasSpeechProvider && !editorReadonly && !speechToTextInProgress",
        "title_ai": "Start Editor Dictation",
        "title": "Voice: Start Dictation in Editor"
    },
    {
        "key": "ctrl+alt+v",
        "command": "workbench.action.editorDictation.start",
        "when": "hasSpeechProvider && !editorReadonly && !speechToTextInProgress",
        "title_ai": "Start Editor Dictation",
        "title": "Voice: Start Dictation in Editor"
    },
    {
        "key": "ctrl+k p",
        "command": "workbench.action.files.copyPathOfActiveFile",
        "title_ai": "Copy Path of Active File"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.files.newUntitledFile",
        "title_ai": "New Untitled Text File",
        "title": "File: New Untitled Text File"
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.files.openFile",
        "when": "true",
        "title_ai": "Open File...",
        "title": "File: Open File..."
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.files.openFileFolder",
        "when": "isMacNative && openFolderWorkspaceSupport",
        "title_ai": "Open File or Folder...",
        "title": "File: Open..."
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "workbench.action.files.openFolder",
        "when": "openFolderWorkspaceSupport",
        "title_ai": "Open Folder...",
        "title": "File: Open Folder..."
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.files.openFolderViaWorkspace",
        "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'",
        "title_ai": "Open Folder... [via Workspace]",
        "title": "File: Open Folder..."
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.files.openLocalFile",
        "when": "remoteFileDialogVisible",
        "title_ai": "Open Local File..."
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "workbench.action.files.openLocalFolder",
        "when": "remoteFileDialogVisible",
        "title_ai": "Open Local Folder..."
    },
    {
        "key": "ctrl+k r",
        "command": "workbench.action.files.revealActiveFileInWindows",
        "title_ai": "Reveal Active File in File Explorer"
    },
    {
        "key": "ctrl+s",
        "command": "workbench.action.files.save",
        "title_ai": "Save",
        "title": "File: Save"
    },
    {
        "key": "ctrl+shift+s",
        "command": "workbench.action.files.saveAs",
        "title_ai": "Save As...",
        "title": "File: Save As..."
    },
    {
        "key": "ctrl+shift+s",
        "command": "workbench.action.files.saveLocalFile",
        "when": "remoteFileDialogVisible",
        "title_ai": "Save Local File As..."
    },
    {
        "key": "ctrl+k ctrl+shift+s",
        "command": "workbench.action.files.saveWithoutFormatting",
        "title_ai": "Save without Formatting",
        "title": "File: Save without Formatting"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.action.findInFiles",
        "title_ai": "Find in Files",
        "title": "Search: Find in Files"
    },
    {
        "key": "ctrl+k ctrl+up",
        "command": "workbench.action.focusAboveGroup",
        "title_ai": "Focus Editor Group Above",
        "title": "View: Focus Editor Group Above"
    },
    {
        "key": "ctrl+k ctrl+down",
        "command": "workbench.action.focusBelowGroup",
        "title_ai": "Focus Editor Group Below",
        "title": "View: Focus Editor Group Below"
    },
    {
        "key": "ctrl+8",
        "command": "workbench.action.focusEighthEditorGroup",
        "title_ai": "Focus Eighth Editor Group"
    },
    {
        "key": "ctrl+5",
        "command": "workbench.action.focusFifthEditorGroup",
        "title_ai": "Focus Fifth Editor Group"
    },
    {
        "key": "ctrl+1",
        "command": "workbench.action.focusFirstEditorGroup",
        "title_ai": "Focus First Editor Group",
        "title": "View: Focus First Editor Group"
    },
    {
        "key": "ctrl+4",
        "command": "workbench.action.focusFourthEditorGroup",
        "title_ai": "Focus Fourth Editor Group"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "workbench.action.focusLeftGroup",
        "title_ai": "Focus Editor Group Left",
        "title": "View: Focus Left Editor Group"
    },
    {
        "key": "f6",
        "command": "workbench.action.focusNextPart",
        "title_ai": "Focus Next Part",
        "title": "View: Focus Next Part"
    },
    {
        "key": "shift+f6",
        "command": "workbench.action.focusPreviousPart",
        "title_ai": "Focus Previous Part",
        "title": "View: Focus Previous Part"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "workbench.action.focusRightGroup",
        "title_ai": "Focus Editor Group Right",
        "title": "View: Focus Right Editor Group"
    },
    {
        "key": "ctrl+2",
        "command": "workbench.action.focusSecondEditorGroup",
        "title_ai": "Focus Second Editor Group"
    },
    {
        "key": "ctrl+7",
        "command": "workbench.action.focusSeventhEditorGroup",
        "title_ai": "Focus Seventh Editor Group"
    },
    {
        "key": "ctrl+0",
        "command": "workbench.action.focusSideBar",
        "title_ai": "Focus Side Bar",
        "title": "View: Focus into Primary Side Bar"
    },
    {
        "key": "ctrl+6",
        "command": "workbench.action.focusSixthEditorGroup",
        "title_ai": "Focus Sixth Editor Group"
    },
    {
        "key": "ctrl+3",
        "command": "workbench.action.focusThirdEditorGroup",
        "title_ai": "Focus Third Editor Group"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.gotoLine",
        "title_ai": "Go to Line/Column...",
        "title": "Go to Line/Column..."
    },
    {
        "key": "ctrl+shift+o",
        "command": "workbench.action.gotoSymbol",
        "when": "!accessibilityHelpIsShown && !accessibleViewIsShown",
        "title_ai": "Go to Symbol in Editor...",
        "title": "Go to Symbol in Editor..."
    },
    {
        "key": "down",
        "command": "workbench.action.interactivePlayground.arrowDown",
        "when": "interactivePlaygroundFocus && !editorTextFocus",
        "title_ai": "Arrow Down [Interactive Playground]"
    },
    {
        "key": "up",
        "command": "workbench.action.interactivePlayground.arrowUp",
        "when": "interactivePlaygroundFocus && !editorTextFocus",
        "title_ai": "Arrow Up [Interactive Playground]"
    },
    {
        "key": "pagedown",
        "command": "workbench.action.interactivePlayground.pageDown",
        "when": "interactivePlaygroundFocus && !editorTextFocus",
        "title_ai": "Page Down [Interactive Playground]"
    },
    {
        "key": "pageup",
        "command": "workbench.action.interactivePlayground.pageUp",
        "when": "interactivePlaygroundFocus && !editorTextFocus",
        "title_ai": "Page Up [Interactive Playground]"
    },
    {
        "key": "ctrl+k ctrl+shift+oem_5",
        "command": "workbench.action.joinEditorInGroup",
        "when": "sideBySideEditorActive",
        "title_ai": "Join Editor in Group",
        "title": "View: Join Editor in Group"
    },
    {
        "key": "ctrl+k enter",
        "command": "workbench.action.keepEditor",
        "title_ai": "Keep Editor Open",
        "title": "View: Keep Editor"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "workbench.action.keybindingsReference",
        "title_ai": "Keyboard Shortcuts Reference",
        "title": "Help: Keyboard Shortcuts Reference"
    },
    {
        "key": "ctrl+9",
        "command": "workbench.action.lastEditorInGroup",
        "title_ai": "Open Last Editor in Group",
        "title": "View: Open Last Editor in Group"
    },
    {
        "key": "alt+0",
        "command": "workbench.action.lastEditorInGroup",
        "title_ai": "Open Last Editor in Group",
        "title": "View: Open Last Editor in Group"
    },
    {
        "key": "ctrl+k down",
        "command": "workbench.action.moveActiveEditorGroupDown",
        "title_ai": "Move Editor Group Down",
        "title": "View: Move Editor Group Down"
    },
    {
        "key": "ctrl+k left",
        "command": "workbench.action.moveActiveEditorGroupLeft",
        "title_ai": "Move Editor Group Left",
        "title": "View: Move Editor Group Left"
    },
    {
        "key": "ctrl+k right",
        "command": "workbench.action.moveActiveEditorGroupRight",
        "title_ai": "Move Editor Group Right",
        "title": "View: Move Editor Group Right"
    },
    {
        "key": "ctrl+k up",
        "command": "workbench.action.moveActiveEditorGroupUp",
        "title_ai": "Move Editor Group Up",
        "title": "View: Move Editor Group Up"
    },
    {
        "key": "ctrl+shift+pageup",
        "command": "workbench.action.moveEditorLeftInGroup",
        "title_ai": "Move Editor Left",
        "title": "View: Move Editor Left"
    },
    {
        "key": "ctrl+shift+pagedown",
        "command": "workbench.action.moveEditorRightInGroup",
        "title_ai": "Move Editor Right in Group",
        "title": "View: Move Editor Right"
    },
    {
        "key": "shift+alt+1",
        "command": "workbench.action.moveEditorToFirstGroup",
        "title_ai": "Move Editor to First Group",
        "title": "View: Move Editor into First Group"
    },
    {
        "key": "shift+alt+9",
        "command": "workbench.action.moveEditorToLastGroup",
        "title_ai": "Move Editor to Last Group",
        "title": "View: Move Editor into Last Group"
    },
    {
        "key": "ctrl+alt+right",
        "command": "workbench.action.moveEditorToNextGroup",
        "title_ai": "Move Editor to Next Group",
        "title": "View: Move Editor into Next Group"
    },
    {
        "key": "ctrl+alt+left",
        "command": "workbench.action.moveEditorToPreviousGroup",
        "title_ai": "Move Editor to Previous Group",
        "title": "View: Move Editor into Previous Group"
    },
    {
        "key": "browserback",
        "command": "workbench.action.navigateBack",
        "when": "canNavigateBack",
        "title_ai": "Navigate Back",
        "title": "Go Back"
    },
    {
        "key": "alt+left",
        "command": "workbench.action.navigateBack",
        "when": "canNavigateBack",
        "title_ai": "Navigate Back",
        "title": "Go Back"
    },
    {
        "key": "browserforward",
        "command": "workbench.action.navigateForward",
        "when": "canNavigateForward",
        "title_ai": "Navigate Forward",
        "title": "Go Forward"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.navigateForward",
        "when": "canNavigateForward",
        "title_ai": "Navigate Forward",
        "title": "Go Forward"
    },
    {
        "key": "ctrl+k ctrl+q",
        "command": "workbench.action.navigateToLastEditLocation",
        "title_ai": "Navigate to Last Edit Location",
        "title": "Go to Last Edit Location"
    },
    {
        "key": "ctrl+shift+n",
        "command": "workbench.action.newWindow",
        "title_ai": "New Window",
        "title": "New Window"
    },
    {
        "key": "ctrl+pagedown",
        "command": "workbench.action.nextEditor",
        "title_ai": "Next Editor",
        "title": "View: Open Next Editor"
    },
    {
        "key": "ctrl+k ctrl+pagedown",
        "command": "workbench.action.nextEditorInGroup",
        "title_ai": "Next Editor in Group",
        "title": "View: Open Next Editor in Group"
    },
    {
        "key": "alt+1",
        "command": "workbench.action.openEditorAtIndex1",
        "title_ai": "Open Editor at Position 1"
    },
    {
        "key": "alt+2",
        "command": "workbench.action.openEditorAtIndex2",
        "title_ai": "Open Editor at Position 2"
    },
    {
        "key": "alt+3",
        "command": "workbench.action.openEditorAtIndex3",
        "title_ai": "Open Editor at Position 3"
    },
    {
        "key": "alt+4",
        "command": "workbench.action.openEditorAtIndex4",
        "title_ai": "Open Editor at Position 4"
    },
    {
        "key": "alt+5",
        "command": "workbench.action.openEditorAtIndex5",
        "title_ai": "Open Editor at Position 5"
    },
    {
        "key": "alt+6",
        "command": "workbench.action.openEditorAtIndex6",
        "title_ai": "Open Editor at Position 6"
    },
    {
        "key": "alt+7",
        "command": "workbench.action.openEditorAtIndex7",
        "title_ai": "Open Editor at Position 7"
    },
    {
        "key": "alt+8",
        "command": "workbench.action.openEditorAtIndex8",
        "title_ai": "Open Editor at Position 8"
    },
    {
        "key": "alt+9",
        "command": "workbench.action.openEditorAtIndex9",
        "title_ai": "Open Editor at Position 9"
    },
    {
        "key": "ctrl+k ctrl+s",
        "command": "workbench.action.openGlobalKeybindings",
        "title_ai": "Open Keyboard Shortcuts",
        "title": "Preferences: Open Keyboard Shortcuts"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.openRecent",
        "title_ai": "Open Recent",
        "title": "File: Open Recent..."
    },
    {
        "key": "ctrl+oem_comma",
        "command": "workbench.action.openSettings",
        "title_ai": "Open Settings"
    },
    {
        "key": "ctrl+shift+u",
        "command": "workbench.action.output.toggleOutput",
        "when": "workbench.panel.output.active",
        "title_ai": "Toggle Output",
        "title": "View: Toggle Output"
    },
    {
        "key": "ctrl+k shift+enter",
        "command": "workbench.action.pinEditor",
        "when": "!activeEditorIsPinned",
        "title_ai": "Pin Editor",
        "title": "View: Pin Editor"
    },
    {
        "key": "ctrl+pageup",
        "command": "workbench.action.previousEditor",
        "title_ai": "Previous Editor",
        "title": "View: Open Previous Editor"
    },
    {
        "key": "ctrl+k ctrl+pageup",
        "command": "workbench.action.previousEditorInGroup",
        "title_ai": "Previous Editor in Group",
        "title": "View: Open Previous Editor in Group"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.action.quickOpen",
        "title_ai": "Quick Open",
        "title": "Go to File..."
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpen",
        "title_ai": "Quick Open",
        "title": "Go to File..."
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.quickOpenLeastRecentlyUsedEditorInGroup",
        "when": "!activeEditorGroupEmpty",
        "title_ai": "Open Least Recently Used Editor in Group",
        "title": "View: Quick Open Least Recently Used Editor in Group"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
        "when": "!activeEditorGroupEmpty",
        "title_ai": "Open Previous Recently Used Editor in Group",
        "title": "View: Quick Open Previous Recently Used Editor in Group"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.quickOpenView",
        "title_ai": "Quick Open View"
    },
    {
        "key": "ctrl+shift+alt+l",
        "command": "workbench.action.quickchat.toggle",
        "when": "chatIsEnabled",
        "title_ai": "Toggle Quick Chat"
    },
    {
        "key": "ctrl+alt+o",
        "command": "workbench.action.remote.showMenu",
        "title_ai": "Show Remote Menu",
        "title": "Remote: Show Remote Menu"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.reopenClosedEditor",
        "title_ai": "Reopen Closed Editor",
        "title": "View: Reopen Closed Editor"
    },
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.replaceInFiles",
        "title_ai": "Replace in Files",
        "title": "Search: Replace in Files"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.search.toggleQueryDetails",
        "when": "inSearchEditor || searchViewletFocus",
        "title_ai": "Toggle Search Query Details"
    },
    {
        "key": "ctrl+k ctrl+t",
        "command": "workbench.action.selectTheme",
        "title_ai": "Select Color Theme",
        "title": "Preferences: Color Theme"
    },
    {
        "key": "ctrl+k ctrl+p",
        "command": "workbench.action.showAllEditors",
        "title_ai": "Show All Editors",
        "title": "File: Show All Editors By Appearance"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.showAllSymbols",
        "title_ai": "Show All Symbols",
        "title": "Go to Symbol in Workspace..."
    },
    {
        "key": "f1",
        "command": "workbench.action.showCommands",
        "title_ai": "Show All Commands",
        "title": "Show All Commands"
    },
    {
        "key": "ctrl+shift+p",
        "command": "workbench.action.showCommands",
        "title_ai": "Show All Commands",
        "title": "Show All Commands"
    },
    {
        "key": "ctrl+oem_5",
        "command": "workbench.action.splitEditor",
        "title_ai": "Split Editor",
        "title": "View: Split Editor"
    },
    {
        "key": "ctrl+k ctrl+oem_5",
        "command": "workbench.action.splitEditorDown",
        "title_ai": "Split Editor Down",
        "title": "View: Split Editor Down"
    },
    {
        "key": "ctrl+k ctrl+shift+oem_5",
        "command": "workbench.action.splitEditorInGroup",
        "when": "activeEditorCanSplitInGroup",
        "title_ai": "Split Editor in Group",
        "title": "View: Split Editor in Group"
    },
    {
        "key": "ctrl+k ctrl+oem_5",
        "command": "workbench.action.splitEditorLeft",
        "title_ai": "Split Editor Left",
        "title": "View: Split Editor Left"
    },
    {
        "key": "ctrl+k ctrl+oem_5",
        "command": "workbench.action.splitEditorOrthogonal",
        "title_ai": "Split Editor Orthogonal",
        "title": "View: Split Editor Orthogonal"
    },
    {
        "key": "ctrl+k ctrl+oem_5",
        "command": "workbench.action.splitEditorRight",
        "title_ai": "Split Editor Right",
        "title": "View: Split Editor Right"
    },
    {
        "key": "ctrl+k ctrl+oem_5",
        "command": "workbench.action.splitEditorUp",
        "title_ai": "Split Editor Up",
        "title": "View: Split Editor Up"
    },
    {
        "key": "ctrl+shift+b",
        "command": "workbench.action.tasks.build",
        "when": "taskCommandsRegistered",
        "title_ai": "Run Build Task",
        "title": "Tasks: Run Build Task"
    },
    {
        "key": "ctrl+shift+r",
        "command": "workbench.action.tasks.rerunForActiveTerminal",
        "when": "taskTerminalActive && terminalFocus",
        "title_ai": "Rerun Task for Active Terminal"
    },
    {
        "key": "escape",
        "command": "workbench.action.terminal.chat.close",
        "when": "terminalChatFocus && terminalChatVisible || terminalChatVisible && terminalFocus",
        "title_ai": "Close Terminal Chat",
        "title": "Inline Chat: Close"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "workbench.action.terminal.chat.insertCommand",
        "when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks",
        "title_ai": "Insert Command in Terminal Chat",
        "title": "Inline Chat: Insert Chat Command"
    },
    {
        "key": "alt+enter",
        "command": "workbench.action.terminal.chat.insertCommand",
        "when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks",
        "title_ai": "Insert Command in Terminal Chat",
        "title": "Inline Chat: Insert Chat Command"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "workbench.action.terminal.chat.insertFirstCommand",
        "when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest",
        "title_ai": "Insert First Command in Terminal Chat",
        "title": "Inline Chat: Insert First Chat Command"
    },
    {
        "key": "alt+enter",
        "command": "workbench.action.terminal.chat.insertFirstCommand",
        "when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest",
        "title_ai": "Insert First Command in Terminal Chat",
        "title": "Inline Chat: Insert First Chat Command"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.terminal.chat.rerunRequest",
        "when": "terminalChatFocus && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatFocus && terminalProcessSupported && !terminalChatActiveRequest",
        "title_ai": "Rerun Terminal Chat Request"
    },
    {
        "key": "ctrl+enter",
        "command": "workbench.action.terminal.chat.runCommand",
        "when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks",
        "title_ai": "Run Command in Terminal Chat",
        "title": "Inline Chat: Run Chat Command"
    },
    {
        "key": "ctrl+enter",
        "command": "workbench.action.terminal.chat.runFirstCommand",
        "when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest",
        "title_ai": "Run First Command in Terminal Chat",
        "title": "Inline Chat: Run First Chat Command"
    },
    {
        "key": "escape",
        "command": "workbench.action.terminal.clearSelection",
        "when": "terminalFocusInAny && terminalHasBeenCreated && terminalTextSelected && !terminalFindVisible || terminalFocusInAny && terminalProcessSupported && terminalTextSelected && !terminalFindVisible",
        "title_ai": "Clear Terminal Selection",
        "title": "Terminal: Clear Selection"
    },
    {
        "key": "ctrl+shift+oem_comma",
        "command": "workbench.action.terminal.configureSuggestSettings",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible",
        "title_ai": "Configure Terminal Suggest Settings"
    },
    {
        "key": "ctrl+c",
        "command": "workbench.action.terminal.copyAndClearSelection",
        "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused",
        "title_ai": "Copy and Clear Terminal Selection",
        "title": "Terminal: Copy and Clear Selection"
    },
    {
        "key": "ctrl+shift+c",
        "command": "workbench.action.terminal.copySelection",
        "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused",
        "title_ai": "Copy Terminal Selection",
        "title": "Terminal: Copy Selection"
    },
    {
        "key": "f3",
        "command": "workbench.action.terminal.findNext",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported",
        "title_ai": "Find Next in Terminal",
        "title": "Terminal: Find Next"
    },
    {
        "key": "shift+enter",
        "command": "workbench.action.terminal.findNext",
        "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported",
        "title_ai": "Find Next in Terminal",
        "title": "Terminal: Find Next"
    },
    {
        "key": "shift+f3",
        "command": "workbench.action.terminal.findPrevious",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported",
        "title_ai": "Find Previous in Terminal",
        "title": "Terminal: Find Previous"
    },
    {
        "key": "enter",
        "command": "workbench.action.terminal.findPrevious",
        "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported",
        "title_ai": "Find Previous in Terminal",
        "title": "Terminal: Find Previous"
    },
    {
        "key": "ctrl+down",
        "command": "workbench.action.terminal.focus",
        "when": "accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'",
        "title_ai": "Focus Terminal",
        "title": "Terminal: Focus Terminal"
    },
    {
        "key": "ctrl+up",
        "command": "workbench.action.terminal.focusAccessibleBuffer",
        "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported",
        "title_ai": "Focus Terminal Accessible Buffer"
    },
    {
        "key": "alt+f2",
        "command": "workbench.action.terminal.focusAccessibleBuffer",
        "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported",
        "title_ai": "Focus Terminal Accessible Buffer"
    },
    {
        "key": "ctrl+f",
        "command": "workbench.action.terminal.focusFind",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported",
        "title_ai": "Focus Terminal Find",
        "title": "Terminal: Focus Find"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "workbench.action.terminal.focusHover",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus",
        "title_ai": "Focus Terminal Hover",
        "title": "Terminal: Focus Hover"
    },
    {
        "key": "ctrl+pagedown",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus",
        "title_ai": "Focus Next Terminal",
        "title": "Terminal: Focus Next Terminal Group"
    },
    {
        "key": "alt+down",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported",
        "title_ai": "Focus Next Terminal Pane",
        "title": "Terminal: Focus Next Terminal in Terminal Group"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported",
        "title_ai": "Focus Next Terminal Pane",
        "title": "Terminal: Focus Next Terminal in Terminal Group"
    },
    {
        "key": "ctrl+pageup",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus",
        "title_ai": "Focus Previous Terminal",
        "title": "Terminal: Focus Previous Terminal Group"
    },
    {
        "key": "alt+up",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported",
        "title_ai": "Focus Previous Terminal Pane",
        "title": "Terminal: Focus Previous Terminal in Terminal Group"
    },
    {
        "key": "alt+left",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported",
        "title_ai": "Focus Previous Terminal Pane",
        "title": "Terminal: Focus Previous Terminal in Terminal Group"
    },
    {
        "key": "ctrl+shift+oem_5",
        "command": "workbench.action.terminal.focusTabs",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus",
        "title_ai": "Focus Terminal Tabs",
        "title": "Terminal: Focus Terminal Tabs View"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.terminal.goToRecentDirectory",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported",
        "title_ai": "Go to Recent Directory in Terminal",
        "title": "Terminal: Go to Recent Directory..."
    },
    {
        "key": "shift+escape",
        "command": "workbench.action.terminal.hideFind",
        "when": "terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported",
        "title_ai": "Hide Terminal Find",
        "title": "Terminal: Hide Find"
    },
    {
        "key": "escape",
        "command": "workbench.action.terminal.hideFind",
        "when": "terminalFindVisible && terminalFocusInAny && terminalHasBeenCreated || terminalFindVisible && terminalFocusInAny && terminalProcessSupported",
        "title_ai": "Hide Terminal Find",
        "title": "Terminal: Hide Find"
    },
    {
        "key": "delete",
        "command": "workbench.action.terminal.killActiveTab",
        "when": "terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus",
        "title_ai": "Kill Active Terminal Tab"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.terminal.killEditor",
        "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported",
        "title_ai": "Kill Terminal Editor",
        "title": "Terminal: Kill the Active Terminal in Editor Area"
    },
    {
        "key": "ctrl+f4",
        "command": "workbench.action.terminal.killEditor",
        "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported",
        "title_ai": "Kill Terminal Editor",
        "title": "Terminal: Kill the Active Terminal in Editor Area"
    },
    {
        "key": "ctrl+shift+oem_3",
        "command": "workbench.action.terminal.new",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile",
        "title_ai": "New Terminal",
        "title": "Terminal: Create New Terminal"
    },
    {
        "key": "ctrl+shift+c",
        "command": "workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus",
        "title_ai": "Open Native Console",
        "title": "Open New External Terminal"
    },
    {
        "key": "ctrl+shift+v",
        "command": "workbench.action.terminal.paste",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported",
        "title_ai": "Paste in Terminal",
        "title": "Terminal: Paste into Active Terminal"
    },
    {
        "key": "ctrl+v",
        "command": "workbench.action.terminal.paste",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported",
        "title_ai": "Paste in Terminal",
        "title": "Terminal: Paste into Active Terminal"
    },
    {
        "key": "f2",
        "command": "workbench.action.terminal.renameActiveTab",
        "when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection",
        "title_ai": "Rename Terminal Tab"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.terminal.runRecentCommand",
        "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'",
        "title_ai": "Run Recent Terminal Command",
        "title": "Terminal: Run Recent Command..."
    },
    {
        "key": "ctrl+alt+r",
        "command": "workbench.action.terminal.runRecentCommand",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled",
        "title_ai": "Run Recent Terminal Command",
        "title": "Terminal: Run Recent Command..."
    },
    {
        "key": "ctrl+alt+pagedown",
        "command": "workbench.action.terminal.scrollDown",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive",
        "title_ai": "Scroll Terminal Down",
        "title": "Terminal: Scroll Down (Line)"
    },
    {
        "key": "shift+pagedown",
        "command": "workbench.action.terminal.scrollDownPage",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive",
        "title_ai": "Scroll Terminal Down Page",
        "title": "Terminal: Scroll Down (Page)"
    },
    {
        "key": "ctrl+end",
        "command": "workbench.action.terminal.scrollToBottom",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive",
        "title_ai": "Scroll Terminal to Bottom",
        "title": "Terminal: Scroll to Bottom"
    },
    {
        "key": "ctrl+end",
        "command": "workbench.action.terminal.scrollToBottomAccessibleView",
        "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'",
        "title_ai": "Scroll Terminal to Bottom [Accessible View]",
        "title": "Terminal: Scroll to Accessible View Bottom"
    },
    {
        "key": "ctrl+down",
        "command": "workbench.action.terminal.scrollToNextCommand",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled",
        "title_ai": "Scroll to Next Terminal Command",
        "title": "Terminal: Scroll to Next Command"
    },
    {
        "key": "ctrl+up",
        "command": "workbench.action.terminal.scrollToPreviousCommand",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled",
        "title_ai": "Scroll to Previous Terminal Command",
        "title": "Terminal: Scroll to Previous Command"
    },
    {
        "key": "ctrl+home",
        "command": "workbench.action.terminal.scrollToTop",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive",
        "title_ai": "Scroll Terminal to Top",
        "title": "Terminal: Scroll to Top"
    },
    {
        "key": "ctrl+home",
        "command": "workbench.action.terminal.scrollToTopAccessibleView",
        "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'",
        "title_ai": "Scroll Terminal to Top [Accessible View]",
        "title": "Terminal: Scroll to Accessible View Top"
    },
    {
        "key": "ctrl+alt+pageup",
        "command": "workbench.action.terminal.scrollUp",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive",
        "title_ai": "Scroll Terminal Up",
        "title": "Terminal: Scroll Up (Line)"
    },
    {
        "key": "shift+pageup",
        "command": "workbench.action.terminal.scrollUpPage",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive",
        "title_ai": "Scroll Terminal Up Page",
        "title": "Terminal: Scroll Up (Page)"
    },
    {
        "key": "ctrl+shift+down",
        "command": "workbench.action.terminal.selectToNextCommand",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported",
        "title_ai": "Select to Next Terminal Command",
        "title": "Terminal: Select to Next Command"
    },
    {
        "key": "ctrl+shift+up",
        "command": "workbench.action.terminal.selectToPreviousCommand",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported",
        "title_ai": "Select to Previous Terminal Command",
        "title": "Terminal: Select to Previous Command"
    },
    {
        "key": "ctrl+v",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && !accessibilityModeEnabled && terminalShellType == 'pwsh'",
        "args": {
            "text": "\u0016"
        },
        "title_ai": "Send Sequence to Terminal"
    },
    {
        "key": "ctrl+space",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'",
        "args": {
            "text": "\u001b[24~a"
        },
        "title_ai": "Send Sequence to Terminal"
    },
    {
        "key": "alt+space",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'",
        "args": {
            "text": "\u001b[24~b"
        },
        "title_ai": "Send Sequence to Terminal"
    },
    {
        "key": "shift+enter",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'",
        "args": {
            "text": "\u001b[24~c"
        },
        "title_ai": "Send Sequence to Terminal"
    },
    {
        "key": "ctrl+alt+r",
        "command": "workbench.action.terminal.sendSequence",
        "when": "accessibilityModeEnabled && terminalFocus",
        "args": {
            "text": "\u0012"
        },
        "title_ai": "Send Sequence to Terminal"
    },
    {
        "key": "ctrl+alt+g",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus",
        "args": {
            "text": "\u0007"
        },
        "title_ai": "Send Sequence to Terminal"
    },
    {
        "key": "ctrl+backspace",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus",
        "args": {
            "text": "\u0017"
        },
        "title_ai": "Send Sequence to Terminal"
    },
    {
        "key": "ctrl+backspace",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus && terminalShellType == 'cmd'",
        "args": {
            "text": "\b"
        },
        "title_ai": "Send Sequence to Terminal"
    },
    {
        "key": "ctrl+delete",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus",
        "args": {
            "text": "\u001bd"
        },
        "title_ai": "Send Sequence to Terminal"
    },
    {
        "key": "ctrl+shift+2",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus",
        "args": {
            "text": "\u0000"
        },
        "title_ai": "Send Sequence to Terminal"
    },
    {
        "key": "ctrl+shift+6",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus",
        "args": {
            "text": "\u001e"
        },
        "title_ai": "Send Sequence to Terminal"
    },
    {
        "key": "ctrl+oem_2",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus",
        "args": {
            "text": "\u001f"
        },
        "title_ai": "Send Sequence to Terminal"
    },
    {
        "key": "ctrl+oem_period",
        "command": "workbench.action.terminal.showQuickFixes",
        "when": "terminalFocus",
        "title_ai": "Show Terminal Quick Fixes",
        "title": "Terminal: Show Terminal Quick Fixes"
    },
    {
        "key": "alt+z",
        "command": "workbench.action.terminal.sizeToContentWidth",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported",
        "title_ai": "Size Terminal to Content Width",
        "title": "Terminal: Toggle Size to Content Width"
    },
    {
        "key": "ctrl+shift+5",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile",
        "title_ai": "Split Terminal",
        "title": "Terminal: Split Terminal"
    },
    {
        "key": "ctrl+shift+5",
        "command": "workbench.action.terminal.splitActiveTab",
        "when": "terminalProcessSupported && terminalTabsFocus",
        "title_ai": "Split Active Terminal Tab"
    },
    {
        "key": "ctrl+alt+space",
        "command": "workbench.action.terminal.suggestToggleDetailsFocus",
        "when": "!textInputFocus",
        "title_ai": "Focus Terminal Suggestion Details Toggle"
    },
    {
        "key": "alt+c",
        "command": "workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported",
        "title_ai": "Toggle Terminal Find Case Sensitive",
        "title": "Terminal: Toggle Find Using Case Sensitive"
    },
    {
        "key": "alt+r",
        "command": "workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported",
        "title_ai": "Toggle Terminal Find Regex",
        "title": "Terminal: Toggle Find Using Regex"
    },
    {
        "key": "alt+w",
        "command": "workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported",
        "title_ai": "Toggle Terminal Find Whole Word",
        "title": "Terminal: Toggle Find Using Whole Word"
    },
    {
        "key": "ctrl+oem_3",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active",
        "title_ai": "Toggle Terminal",
        "title": "View: Toggle Terminal"
    },
    {
        "key": "ctrl+alt+b",
        "command": "workbench.action.toggleAuxiliaryBar",
        "title_ai": "Toggle Auxiliary Bar",
        "title": "View: Toggle Secondary Side Bar Visibility"
    },
    {
        "key": "shift+alt+0",
        "command": "workbench.action.toggleEditorGroupLayout",
        "title_ai": "Toggle Editor Group Layout",
        "title": "Toggle Vertical/Horizontal Editor Layout"
    },
    {
        "key": "f11",
        "command": "workbench.action.toggleFullScreen",
        "when": "!isIOS",
        "title_ai": "Toggle Full Screen",
        "title": "View: Toggle Full Screen"
    },
    {
        "key": "ctrl+k ctrl+m",
        "command": "workbench.action.toggleMaximizeEditorGroup",
        "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups",
        "title_ai": "Toggle Maximize Editor Group",
        "title": "View: Toggle Maximize Editor Group"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.togglePanel",
        "title_ai": "Toggle Panel",
        "title": "View: Toggle Panel Visibility"
    },
    {
        "key": "ctrl+b",
        "command": "workbench.action.toggleSidebarVisibility",
        "title_ai": "Toggle Sidebar",
        "title": "View: Toggle Primary Side Bar Visibility"
    },
    {
        "key": "ctrl+k z",
        "command": "workbench.action.toggleZenMode",
        "when": "!isAuxiliaryWindowFocusedContext",
        "title_ai": "Toggle Zen Mode",
        "title": "View: Toggle Zen Mode"
    },
    {
        "key": "ctrl+k shift+enter",
        "command": "workbench.action.unpinEditor",
        "when": "activeEditorIsPinned",
        "title_ai": "Unpin Editor",
        "title": "View: Unpin Editor"
    },
    {
        "key": "ctrl+numpad_add",
        "command": "workbench.action.zoomIn",
        "title_ai": "Zoom In",
        "title": "View: Zoom In"
    },
    {
        "key": "ctrl+shift+oem_plus",
        "command": "workbench.action.zoomIn",
        "title_ai": "Zoom In",
        "title": "View: Zoom In"
    },
    {
        "key": "ctrl+oem_plus",
        "command": "workbench.action.zoomIn",
        "title_ai": "Zoom In",
        "title": "View: Zoom In"
    },
    {
        "key": "ctrl+numpad_subtract",
        "command": "workbench.action.zoomOut",
        "title_ai": "Zoom Out",
        "title": "View: Zoom Out"
    },
    {
        "key": "ctrl+shift+oem_minus",
        "command": "workbench.action.zoomOut",
        "title_ai": "Zoom Out",
        "title": "View: Zoom Out"
    },
    {
        "key": "ctrl+oem_minus",
        "command": "workbench.action.zoomOut",
        "title_ai": "Zoom Out",
        "title": "View: Zoom Out"
    },
    {
        "key": "ctrl+numpad0",
        "command": "workbench.action.zoomReset",
        "title_ai": "Reset Zoom",
        "title": "View: Reset Zoom"
    },
    {
        "key": "ctrl+shift+m",
        "command": "workbench.actions.view.problems",
        "when": "workbench.panel.markers.view.active",
        "title_ai": "Show Problems",
        "title": "View: Toggle Problems"
    },
    {
        "key": "escape",
        "command": "workbench.actions.workbench.panel.output.clearFilterText",
        "when": "outputFilterFocus",
        "title_ai": "Clear Output Panel Filter Text"
    },
    {
        "key": "escape",
        "command": "workbench.banner.focusBanner",
        "when": "bannerFocused",
        "title_ai": "Focus Banner"
    },
    {
        "key": "down",
        "command": "workbench.banner.focusNextAction",
        "when": "bannerFocused",
        "title_ai": "Focus Next Action in Banner"
    },
    {
        "key": "right",
        "command": "workbench.banner.focusNextAction",
        "when": "bannerFocused",
        "title_ai": "Focus Next Action in Banner"
    },
    {
        "key": "up",
        "command": "workbench.banner.focusPreviousAction",
        "when": "bannerFocused",
        "title_ai": "Focus Previous Action in Banner"
    },
    {
        "key": "left",
        "command": "workbench.banner.focusPreviousAction",
        "when": "bannerFocused",
        "title_ai": "Focus Previous Action in Banner"
    },
    {
        "key": "ctrl+alt+oem_2",
        "command": "workbench.command.prompts.use",
        "when": "config.chat.promptFiles",
        "title_ai": "Use Command Prompts",
        "title": "Chat: Use Prompt"
    },
    {
        "key": "ctrl+shift+y",
        "command": "workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active",
        "title_ai": "Toggle Debug Console",
        "title": "View: Toggle Debug Console"
    },
    {
        "key": "ctrl+c",
        "command": "workbench.debug.viewlet.action.copyValue",
        "when": "!expressionSelected && focusedView == 'workbench.debug.variablesView' || !expressionSelected && focusedView == 'workbench.debug.watchExpressionsView'",
        "title_ai": "Copy Debug Value"
    },
    {
        "key": "ctrl+k c",
        "command": "workbench.files.action.compareWithClipboard",
        "title_ai": "Compare with Clipboard",
        "title": "File: Compare Active File with Clipboard"
    },
    {
        "key": "ctrl+k d",
        "command": "workbench.files.action.compareWithSaved",
        "title_ai": "Compare with Saved",
        "title": "File: Compare Active File with Saved"
    },
    {
        "key": "ctrl+k e",
        "command": "workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active",
        "title_ai": "Focus Open Editors View",
        "title": "Explorer: Focus on Open Editors View"
    },
    {
        "key": "ctrl+alt+i",
        "command": "workbench.panel.chat",
        "when": "workbench.panel.chat.view.copilot.active",
        "title_ai": "Show Chat Panel",
        "title": "View: Show Chat"
    },
    {
        "key": "ctrl+shift+i",
        "command": "workbench.panel.chatEditing",
        "when": "workbench.panel.chat.view.edits.active",
        "title_ai": "Show Chat Editing Panel",
        "title": "View: Show Copilot Edits"
    },
    {
        "key": "escape",
        "command": "workbench.statusBar.clearFocus",
        "when": "statusBarFocused",
        "title_ai": "Clear Status Bar Focus"
    },
    {
        "key": "home",
        "command": "workbench.statusBar.focusFirst",
        "when": "statusBarFocused",
        "title_ai": "Focus First Status Bar Item"
    },
    {
        "key": "end",
        "command": "workbench.statusBar.focusLast",
        "when": "statusBarFocused",
        "title_ai": "Focus Last Status Bar Item"
    },
    {
        "key": "down",
        "command": "workbench.statusBar.focusNext",
        "when": "statusBarFocused",
        "title_ai": "Focus Next Status Bar Item"
    },
    {
        "key": "right",
        "command": "workbench.statusBar.focusNext",
        "when": "statusBarFocused",
        "title_ai": "Focus Next Status Bar Item"
    },
    {
        "key": "up",
        "command": "workbench.statusBar.focusPrevious",
        "when": "statusBarFocused",
        "title_ai": "Focus Previous Status Bar Item"
    },
    {
        "key": "left",
        "command": "workbench.statusBar.focusPrevious",
        "when": "statusBarFocused",
        "title_ai": "Focus Previous Status Bar Item"
    },
    {
        "key": "ctrl+shift+d",
        "command": "workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled",
        "title_ai": "Show Debug",
        "title": "View: Show Run and Debug"
    },
    {
        "key": "ctrl+shift+e",
        "command": "workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled",
        "title_ai": "Show Explorer",
        "title": "View: Show Explorer"
    },
    {
        "key": "ctrl+shift+x",
        "command": "workbench.view.extensions",
        "when": "viewContainer.workbench.view.extensions.enabled",
        "title_ai": "Show Extensions",
        "title": "View: Show Extensions"
    },
    {
        "key": "ctrl+shift+g",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active",
        "title_ai": "Show Source Control",
        "title": "View: Show Changes"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.view.search",
        "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/",
        "title_ai": "Show Search",
        "title": "View: Show Search"
    },
    {
        "key": "ctrl+right",
        "command": "breadcrumbs.focusNextWithPicker",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Focus Next with Breadcrumbs Picker"
    },
    {
        "key": "ctrl+left",
        "command": "breadcrumbs.focusPreviousWithPicker",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused",
        "title_ai": "Focus Previous with Breadcrumbs Picker"
    },
    {
        "key": "escape",
        "command": "breadcrumbs.selectEditor",
        "when": "breadcrumbsActive && breadcrumbsVisible",
        "title_ai": "Select Editor in Breadcrumbs"
    },
    {
        "key": "tab",
        "command": "editor.action.inlineSuggest.jump",
        "when": "inlineEditIsVisible && tabShouldJumpToInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible",
        "title_ai": "Jump to Inline Suggestion",
        "title": "Jump to next inline edit"
    },
    {
        "key": "ctrl+i",
        "command": "inlineChat.startWithCurrentLine",
        "when": "inlineChatHasProvider && inlineChatShowingHint && !editorReadonly && !inlineChatVisible",
        "title_ai": "Start Inline Chat on Current Line",
        "title": "Inline Chat: Start in Editor with Current Line"
    },
    {
        "key": "f3",
        "command": "list.find.replInputFocus",
        "when": "view == 'workbench.panel.repl.view'",
        "title_ai": "Focus Find/Replace Input in List"
    },
    {
        "key": "ctrl+alt+f",
        "command": "list.find.replInputFocus",
        "when": "view == 'workbench.panel.repl.view'",
        "title_ai": "Focus Find/Replace Input in List"
    },
    {
        "key": "down",
        "command": "notebook.cell.nullAction",
        "when": "notebookOutputInputFocused",
        "title_ai": "Notebook Cell Null Action"
    },
    {
        "key": "up",
        "command": "notebook.cell.nullAction",
        "when": "notebookOutputInputFocused",
        "title_ai": "Notebook Cell Null Action"
    },
    {
        "key": "ctrl+a",
        "command": "notebook.cell.output.selectAll",
        "when": "notebookEditorFocused && notebookOutputFocused",
        "title_ai": "Select All Notebook Cell Output",
        "title": "Notebook: Select All"
    },
    {
        "key": "ctrl+pagedown",
        "command": "notebook.focusNextEditor",
        "when": "accessibilityModeEnabled && notebookCellEditorFocused",
        "title_ai": "Focus Next Notebook Cell Editor",
        "title": "Notebook: Focus Next Cell Editor"
    },
    {
        "key": "ctrl+pageup",
        "command": "notebook.focusPreviousEditor",
        "when": "accessibilityModeEnabled && notebookCellEditorFocused",
        "title_ai": "Focus Previous Notebook Cell Editor",
        "title": "Notebook: Focus Previous Cell Editor"
    },
    {
        "key": "ctrl+oem_2",
        "command": "terminalSuggestToggleExplainMode",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible",
        "title_ai": "Toggle Terminal Suggest Explain Mode"
    },
    {
        "key": "ctrl+k down",
        "command": "views.moveViewDown",
        "when": "focusedView != ''",
        "title_ai": "Move View Down"
    },
    {
        "key": "ctrl+k left",
        "command": "views.moveViewLeft",
        "when": "focusedView != ''",
        "title_ai": "Move View Left"
    },
    {
        "key": "ctrl+k right",
        "command": "views.moveViewRight",
        "when": "focusedView != ''",
        "title_ai": "Move View Right"
    },
    {
        "key": "ctrl+k up",
        "command": "views.moveViewUp",
        "when": "focusedView != ''",
        "title_ai": "Move View Up"
    },
    {
        "key": "ctrl+enter",
        "command": "workbench.action.chat.acceptTool",
        "when": "chatHasToolConfirmation && inChat",
        "title_ai": "Accept Chat Tool"
    },
    {
        "key": "ctrl+pagedown",
        "command": "workbench.action.debug.nextConsole",
        "when": "inDebugRepl",
        "title_ai": "Next Debug Console",
        "title": "Debug: Focus Next Debug Console"
    },
    {
        "key": "ctrl+pageup",
        "command": "workbench.action.debug.prevConsole",
        "when": "inDebugRepl",
        "title_ai": "Previous Debug Console",
        "title": "Debug: Focus Previous Debug Console"
    },
    {
        "key": "tab",
        "command": "workbench.action.terminal.acceptSelectedSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible",
        "title_ai": "Accept Selected Terminal Suggestion"
    },
    {
        "key": "enter",
        "command": "workbench.action.terminal.acceptSelectedSuggestionEnter",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'ignore' || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'ignore'",
        "title_ai": "Accept Selected Terminal Suggestion with Enter"
    },
    {
        "key": "escape",
        "command": "workbench.action.terminal.hideSuggestWidget",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible",
        "title_ai": "Hide Terminal Suggest Widget"
    },
    {
        "key": "ctrl+shift+o",
        "command": "workbench.action.terminal.openDetectedLink",
        "when": "terminalFocus && terminalHasBeenCreated",
        "title_ai": "Open Detected Link in Terminal",
        "title": "Terminal: Open Detected Link..."
    },
    {
        "key": "ctrl+shift+g",
        "command": "workbench.action.terminal.openDetectedLink",
        "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal'",
        "title_ai": "Open Detected Link in Terminal",
        "title": "Terminal: Open Detected Link..."
    },
    {
        "key": "ctrl+space",
        "command": "workbench.action.terminal.requestCompletions",
        "when": "config.terminal.integrated.suggest.enabled && terminalFocus && terminalProcessSupported && !terminalSuggestWidgetVisible",
        "title_ai": "Request Terminal Completions",
        "title": "Terminal: Request Completions"
    },
    {
        "key": "pagedown",
        "command": "workbench.action.terminal.selectNextPageSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible",
        "title_ai": "Select Next Page Terminal Suggestion"
    },
    {
        "key": "down",
        "command": "workbench.action.terminal.selectNextSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible",
        "title_ai": "Select Next Terminal Suggestion"
    },
    {
        "key": "pageup",
        "command": "workbench.action.terminal.selectPrevPageSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible",
        "title_ai": "Select Previous Page Terminal Suggestion"
    },
    {
        "key": "up",
        "command": "workbench.action.terminal.selectPrevSuggestion",
        "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible",
        "title_ai": "Select Previous Terminal Suggestion"
    },
    {
        "key": "tab",
        "command": "editor.action.inlineSuggest.commit",
        "when": "inInlineEditsPreviewEditor",
        "title_ai": "Accept Inline Suggestion",
        "title": "Accept Inline Suggestion"
    },
    {
        "key": "f6",
        "command": "workbench.action.debug.pause",
        "when": "debugState == 'running'",
        "title_ai": "Debug: Pause",
        "title": "Debug: Pause"
    },
    {
        "key": "alt+down",
        "command": "workbench.action.terminal.accessibleBufferGoToNextCommand",
        "when": "accessibleViewIsShown && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'",
        "title_ai": "Go to Next Command in Terminal Accessible Buffer",
        "title": "Terminal: Accessible Buffer Go to Next Command"
    },
    {
        "key": "alt+up",
        "command": "workbench.action.terminal.accessibleBufferGoToPreviousCommand",
        "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'",
        "title_ai": "Go to Previous Command in Terminal Accessible Buffer",
        "title": "Terminal: Accessible Buffer Go to Previous Command"
    },
    {
        "key": "f2",
        "command": "debug.renameWatchExpression",
        "when": "watchExpressionsFocused",
        "title_ai": "Rename Watch Expression"
    },
    {
        "key": "f2",
        "command": "debug.setVariable",
        "when": "variablesFocused",
        "title_ai": "Set Variable"
    },
    {
        "key": "space",
        "command": "debug.toggleBreakpoint",
        "when": "breakpointsFocused && !inputFocus",
        "title_ai": "Toggle Breakpoint"
    },
    {
        "key": "ctrl+up",
        "command": "interactive.history.focus",
        "when": "isCompositeNotebook && !notebookEditorFocused && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'",
        "title_ai": "Focus Interactive Window History",
        "title": "Interactive Window: Focus History"
    },
    {
        "key": "escape",
        "command": "notebook.cell.quitEdit",
        "when": "notebookEditorFocused && notebookOutputFocused",
        "title_ai": "Quit Notebook Cell Edit",
        "title": "Notebook: Stop Editing Cell"
    },
    {
        "key": "alt+home alt+home",
        "command": "repl.input.focus",
        "when": "mostRecentReplEditor",
        "title_ai": "Focus REPL Input",
        "title": "REPL: Focus Input Editor"
    },
    {
        "key": "ctrl+v",
        "command": "filesExplorer.paste",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus",
        "title_ai": "Paste File"
    },
    {
        "key": "shift+delete",
        "command": "deleteFile",
        "when": "filesExplorerFocus && foldersViewVisible && !inputFocus",
        "title_ai": "Delete File"
    },
    {
        "key": "delete",
        "command": "deleteFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceMoveableToTrash && !inputFocus",
        "title_ai": "Delete File"
    },
    {
        "key": "ctrl+shift+oem_period",
        "command": "editor.action.accessibleViewGoToSymbol",
        "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown",
        "title_ai": "Go to Symbol in Accessible View",
        "title": "Go To Symbol in Accessible View"
    },
    {
        "key": "ctrl+shift+o",
        "command": "editor.action.accessibleViewGoToSymbol",
        "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown",
        "title_ai": "Go to Symbol in Accessible View",
        "title": "Go To Symbol in Accessible View"
    },
    {
        "key": "ctrl+e",
        "command": "editor.action.toggleScreenReaderAccessibilityMode",
        "when": "accessibilityHelpIsShown",
        "title_ai": "Toggle Screen Reader Accessibility Mode",
        "title": "Toggle Screen Reader Accessibility Mode"
    },
    {
        "key": "shift+alt+f1",
        "command": "editor.action.toggleScreenReaderAccessibilityMode",
        "title_ai": "Toggle Screen Reader Accessibility Mode",
        "title": "Toggle Screen Reader Accessibility Mode"
    },
    {
        "key": "escape",
        "command": "editor.closeCallHierarchy",
        "when": "callHierarchyVisible && !config.editor.stablePeek",
        "title_ai": "Close Call Hierarchy"
    },
    {
        "key": "escape",
        "command": "editor.closeTypeHierarchy",
        "when": "typeHierarchyVisible && !config.editor.stablePeek",
        "title_ai": "Close Type Hierarchy"
    },
    {
        "key": "enter",
        "command": "explorer.openAndPassFocus",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus",
        "title_ai": "Open File and Pass Focus"
    },
    {
        "key": "escape",
        "command": "filesExplorer.cancelCut",
        "when": "explorerResourceCut && filesExplorerFocus && foldersViewVisible && !inputFocus",
        "title_ai": "Cancel Cut File"
    },
    {
        "key": "ctrl+c",
        "command": "filesExplorer.copy",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus",
        "title_ai": "Copy File"
    },
    {
        "key": "ctrl+x",
        "command": "filesExplorer.cut",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus",
        "title_ai": "Cut File"
    },
    {
        "key": "space",
        "command": "filesExplorer.openFilePreserveFocus",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus",
        "title_ai": "Open File [Preserve Focus]"
    },
    {
        "key": "home",
        "command": "firstCompressedFolder",
        "when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus",
        "title_ai": "First Compressed Folder"
    },
    {
        "key": "ctrl+enter",
        "command": "inlineChat.acceptChanges",
        "when": "inlineChatHasProvider && inlineChatVisible",
        "title_ai": "Accept Changes in Inline Chat",
        "title": "Inline Chat: Accept Changes"
    },
    {
        "key": "end",
        "command": "lastCompressedFolder",
        "when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus",
        "title_ai": "Last Compressed Folder"
    },
    {
        "key": "delete",
        "command": "moveFileToTrash",
        "when": "explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !inputFocus",
        "title_ai": "Move File to Trash"
    },
    {
        "key": "right",
        "command": "nextCompressedFolder",
        "when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedLastFocus && !inputFocus",
        "title_ai": "Next Compressed Folder"
    },
    {
        "key": "left",
        "command": "previousCompressedFolder",
        "when": "explorerViewletCompressedFocus && filesExplorerFocus && foldersViewVisible && !explorerViewletCompressedFirstFocus && !inputFocus",
        "title_ai": "Previous Compressed Folder"
    },
    {
        "key": "delete",
        "command": "remote.tunnel.closeInline",
        "when": "tunnelCloseable && tunnelViewFocus",
        "title_ai": "Close Inline Remote Tunnel"
    },
    {
        "key": "ctrl+c",
        "command": "remote.tunnel.copyAddressInline",
        "when": "tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'",
        "title_ai": "Copy Remote Tunnel Address Inline"
    },
    {
        "key": "f2",
        "command": "remote.tunnel.label",
        "when": "tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'",
        "title_ai": "Label Remote Tunnel"
    },
    {
        "key": "f2",
        "command": "renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus",
        "title_ai": "Rename File"
    },
    {
        "key": "f5",
        "command": "workbench.action.debug.continue",
        "when": "debugState == 'stopped'",
        "title_ai": "Debug: Continue",
        "title": "Debug: Continue"
    },
    {
        "key": "f11",
        "command": "workbench.action.debug.stepInto",
        "when": "debugState != 'inactive'",
        "title_ai": "Debug: Step Into",
        "title": "Debug: Step Into"
    },
    {
        "key": "shift+escape",
        "command": "closeReferenceSearch",
        "when": "editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus",
        "title_ai": "Close Reference Search"
    },
    {
        "key": "escape",
        "command": "closeReferenceSearch",
        "when": "editorTextFocus && referenceSearchVisible && !config.editor.stablePeek || referenceSearchVisible && !config.editor.stablePeek && !inputFocus",
        "title_ai": "Close Reference Search"
    },
    {
        "key": "left",
        "command": "list.stickyScroll.collapse",
        "when": "treestickyScrollFocused",
        "title_ai": "Collapse Sticky Scroll in List"
    },
    {
        "key": "enter",
        "command": "list.stickyScrollselect",
        "when": "treestickyScrollFocused",
        "title_ai": "Select Item in Sticky Scroll"
    },
    {
        "key": "space",
        "command": "list.stickyScrolltoggleExpand",
        "when": "treestickyScrollFocused",
        "title_ai": "Toggle Expand in Sticky Scroll"
    },
    {
        "key": "escape",
        "command": "notifications.hideList",
        "when": "notificationCenterVisible",
        "title_ai": "Hide Notifications List",
        "title": "Notifications: Hide Notifications"
    },
    {
        "key": "ctrl+alt+right",
        "command": "quickInput.acceptInBackground",
        "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'",
        "title_ai": "Accept Quick Input in Background"
    },
    {
        "key": "ctrl+right",
        "command": "quickInput.acceptInBackground",
        "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'",
        "title_ai": "Accept Quick Input in Background"
    },
    {
        "key": "alt+right",
        "command": "quickInput.acceptInBackground",
        "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'",
        "title_ai": "Accept Quick Input in Background"
    },
    {
        "key": "right",
        "command": "quickInput.acceptInBackground",
        "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'",
        "title_ai": "Accept Quick Input in Background"
    },
    {
        "key": "alt+left",
        "command": "workbench.action.quickInputBack",
        "when": "inQuickOpen",
        "title_ai": "Go Back in Quick Input"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen",
        "title_ai": "Navigate Next in Editor Picker"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen",
        "title_ai": "Navigate Next in File Picker"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen",
        "title_ai": "Navigate Next in File Picker"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.quickOpenNavigateNextInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker",
        "title_ai": "Navigate Next in Recent Files Picker"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.quickOpenNavigateNextInViewPicker",
        "when": "inQuickOpen && inViewsPicker",
        "title_ai": "Navigate Next in View Picker"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen",
        "title_ai": "Navigate Previous in Editor Picker"
    },
    {
        "key": "ctrl+shift+e",
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen",
        "title_ai": "Navigate Previous in File Picker"
    },
    {
        "key": "ctrl+shift+p",
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen",
        "title_ai": "Navigate Previous in File Picker"
    },
    {
        "key": "ctrl+shift+r",
        "command": "workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker",
        "title_ai": "Navigate Previous in Recent Files Picker"
    },
    {
        "key": "ctrl+shift+q",
        "command": "workbench.action.quickOpenNavigatePreviousInViewPicker",
        "when": "inQuickOpen && inViewsPicker",
        "title_ai": "Navigate Previous in View Picker"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.reloadWindow",
        "when": "isDevelopment",
        "title_ai": "Reload Window",
        "title": "Developer: Reload Window"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.action.terminal.searchWorkspace",
        "when": "terminalFocus && terminalProcessSupported && terminalTextSelected",
        "title_ai": "Search Workspace from Terminal",
        "title": "Terminal: Search Workspace"
    },
    {
        "key": "ctrl+shift+i",
        "command": "workbench.action.toggleDevTools",
        "when": "isDevelopment",
        "title_ai": "Toggle Developer Tools",
        "title": "Developer: Toggle Developer Tools"
    },
    {
        "key": "escape",
        "command": "notifications.hideToasts",
        "when": "notificationFocus && notificationToastsVisible",
        "title_ai": "Hide Notifications"
    },
    {
        "key": "escape",
        "command": "workbench.action.chat.stopListening",
        "when": "voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || voiceChatInProgress && scopedVoiceChatInProgress == 'view'",
        "title_ai": "Stop Chat Listening",
        "title": "Chat: Stop Listening"
    },
    {
        "key": "escape",
        "command": "workbench.action.chat.stopReadChatItemAloud",
        "when": "scopedChatSynthesisInProgress",
        "title_ai": "Stop Reading Chat Item Aloud"
    },
    {
        "key": "escape",
        "command": "workbench.action.editorDictation.stop",
        "when": "editorDictation.inProgress",
        "title_ai": "Stop Editor Dictation",
        "title": "Voice: Stop Dictation in Editor"
    },
    {
        "key": "escape",
        "command": "workbench.action.speech.stopReadAloud",
        "when": "scopedChatSynthesisInProgress && textToSpeechInProgress",
        "title_ai": "Stop Read Aloud",
        "title": "Chat: Stop Reading Aloud"
    },
    {
        "key": "f10",
        "command": "extension.node-debug.startWithStopOnEntry",
        "when": "!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node'",
        "title_ai": "Start Node Debug with Stop on Entry",
        "title": "Debug: Start Debugging and Stop on Entry"
    },
    {
        "key": "ctrl+k ctrl+alt+s",
        "command": "git.stageSelectedRanges",
        "when": "editorTextFocus && !operationInProgress && resourceScheme == 'file'",
        "title_ai": "Stage Selected Ranges",
        "title": "Git: Stage Selected Ranges"
    },
    {
        "key": "ctrl+shift+v",
        "command": "markdown.showPreview",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'",
        "title_ai": "Show Markdown Preview",
        "title": "Markdown: Open Preview"
    },
    {
        "key": "shift+alt+f12",
        "command": "references-view.findReferences",
        "when": "editorHasReferenceProvider",
        "title_ai": "Find References",
        "title": "References: Find All References"
    },
    {
        "key": "f11",
        "command": "extension.node-debug.startWithStopOnEntry",
        "when": "!inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'node' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && activeViewlet == 'workbench.view.debug' && debugConfigurationType == 'pwa-node'",
        "title_ai": "Start Node Debug with Stop on Entry",
        "title": "Debug: Start Debugging and Stop on Entry"
    },
    {
        "key": "ctrl+k ctrl+n",
        "command": "git.unstageSelectedRanges",
        "when": "editorTextFocus && isInDiffEditor && isInDiffRightEditor && !operationInProgress && resourceScheme == 'git'",
        "title_ai": "Unstage Selected Ranges",
        "title": "Git: Unstage Selected Ranges"
    },
    {
        "key": "ctrl+k v",
        "command": "markdown.showPreviewToSide",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'",
        "title_ai": "Show Markdown Preview to Side",
        "title": "Markdown: Open Preview to the Side"
    },
    {
        "key": "f4",
        "command": "references-view.next",
        "when": "reference-list.hasResult && references-view.canNavigate",
        "title_ai": "Next Reference",
        "title": "Go to Next Reference"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "git.revertSelectedRanges",
        "when": "editorTextFocus && !operationInProgress && resourceScheme == 'file'",
        "title_ai": "Revert Selected Ranges",
        "title": "Git: Revert Selected Ranges"
    },
    {
        "key": "shift+f4",
        "command": "references-view.prev",
        "when": "reference-list.hasResult && references-view.canNavigate",
        "title_ai": "Previous Reference",
        "title": "Go to Previous Reference"
    },
    {
        "key": "shift+alt+h",
        "command": "references-view.showCallHierarchy",
        "when": "editorHasCallHierarchyProvider",
        "title_ai": "Show Call Hierarchy",
        "title": "Calls: Show Call Hierarchy"
    },
    {
        "key": "alt+o",
        "command": "C_Cpp.SwitchHeaderSource",
        "when": "editorTextFocus && editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)",
        "title_ai": "Switch Header/Source [C/C++]"
    },
    {
        "key": "ctrl+f1",
        "command": "PowerShell.ShowHelp",
        "when": "editorTextFocus && editorLangId == 'powershell'",
        "title_ai": "Show Help [PowerShell]",
        "title": "PowerShell: Get Help for Command"
    },
    {
        "key": "ctrl+shift+2",
        "command": "autoDocstring.generateDocstring",
        "when": "editorTextFocus",
        "title_ai": "Generate Docstring",
        "title": "Generate Docstring"
    },
    {
        "key": "ctrl+shift+v",
        "command": "excel.preview",
        "when": "editorLangId == 'excel'",
        "title_ai": "Show Excel Preview",
        "title": "Excel: Open Preview"
    },
    {
        "key": "alt+c p",
        "command": "extension.colorHelper.pick",
        "when": "editorTextFocus",
        "title_ai": "Pick Color",
        "title": "Pick Color"
    },
    {
        "key": "ctrl+alt+g",
        "command": "extension.relativeGoto",
        "when": "editorTextFocus",
        "title_ai": "Relative Goto",
        "title": "Go to Line relative..."
    },
    {
        "key": "ctrl+k oem_7",
        "command": "extension.selectSingleQuote",
        "when": "editorFocus",
        "title_ai": "Select Single Quote Content",
        "title": "Quick Select: Select inside single quote"
    },
    {
        "key": "ctrl+shift+oem_7",
        "command": "extension.toggleFilesizeInfo",
        "when": "editorTextFocus",
        "title_ai": "Toggle File Size Info",
        "title": "Toggle filesize detailed information"
    },
    {
        "key": "ctrl+alt+m",
        "command": "extension.toggleRegexPreview",
        "title_ai": "Toggle Regex Preview",
        "title": "Toggle Regex Preview In Side-By-Side Editors"
    },
    {
        "key": "ctrl+shift+r",
        "command": "extension.vsKubernetesDescribe.Refresh",
        "when": "vscodeKubernetesDescribeContext",
        "title_ai": "Refresh Kubernetes Description",
        "title": "Kubernetes: Refresh"
    },
    {
        "key": "ctrl+alt+oem_period",
        "command": "github.copilot.chat.rerunWithCopilotDebug",
        "when": "github.copilot-chat.activated && terminalFocus && terminalShellIntegrationEnabled && !terminalAltBufferActive",
        "title_ai": "Rerun with Copilot Debug",
        "title": "GitHub Copilot: Debug Last Terminal Command"
    },
    {
        "key": "ctrl+enter",
        "command": "github.copilot.generate",
        "when": "editorTextFocus && github.copilot.activated && !commentEditorFocused",
        "title_ai": "Generate with GitHub Copilot",
        "title": "GitHub Copilot: Open Completions Panel"
    },
    {
        "key": "alt+oem_comma",
        "command": "gitlens.key.alt+,",
        "when": "gitlens:key:,",
        "title_ai": "GitLens: Alt+,"
    },
    {
        "key": "alt+o",
        "command": "godotTools.switchSceneScript",
        "when": "editorTextFocus && editorLangId in 'godotTools.context.godotFiles'",
        "title_ai": "Switch Between Scene and Script (Godot)",
        "title": "Godot Tools: Switch Scene/Script"
    },
    {
        "key": "ctrl+g",
        "command": "hexEditor.goToOffset",
        "when": "activeCustomEditorId == 'hexEditor.hexedit'",
        "title_ai": "Go to Offset in Hex Editor",
        "title": "Hex Editor: Go To Offset"
    },
    {
        "key": "alt+r",
        "command": "ionic-official.run",
        "when": "explorerViewletVisible",
        "title_ai": "Run Ionic Application"
    },
    {
        "key": "shift+alt+u",
        "command": "java.projectConfiguration.update",
        "when": "editorFocus",
        "title_ai": "Update Project Configuration [Java]",
        "title": "Java: Reload Projects"
    },
    {
        "key": "shift+alt+r",
        "command": "java.view.package.revealFileInOS",
        "when": "focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'",
        "title_ai": "Reveal File in OS [Java Package]",
        "title": "Java: Reveal in Explorer"
    },
    {
        "key": "shift+f1",
        "command": "java.welcome",
        "title_ai": "Show Welcome [Java]",
        "title": "Java: Help Center"
    },
    {
        "key": "shift+enter",
        "command": "jupyter.execSelectionInteractive",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.ownsSelection && !findInputFocussed && !isCompositeNotebook && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'",
        "title_ai": "Execute Selection Interactively",
        "title": "Jupyter: Run Selection/Line in Interactive Window"
    },
    {
        "key": "ctrl+alt+f",
        "command": "liveshare.follow",
        "when": "liveshare:hasCollaborators && !liveshare:isFollowing",
        "title_ai": "Follow in Live Share",
        "title": "Live Share: Follow Participant"
    },
    {
        "key": "escape",
        "command": "logFileHighlighter.removeProgressIndicatorDecorations",
        "when": "editorTextFocus && logFileHighlighter.isShowingProgressIndicators && editorLangId == 'log'",
        "title_ai": "Remove Progress Indicator Decorations",
        "title": "Log File Highlighter: Remove Progress Indicator Decorations"
    },
    {
        "key": "shift+alt+l",
        "command": "lowercase.toLowerCase",
        "title_ai": "Convert to Lowercase",
        "title": "Convert selection to lowercase"
    },
    {
        "key": "alt+m",
        "command": "map.preview",
        "title_ai": "Show Map Preview",
        "title": "Map Preview"
    },
    {
        "key": "ctrl+shift+e",
        "command": "mssql.runQuery",
        "when": "editorTextFocus && editorLangId == 'sql'",
        "title_ai": "Run SQL Server Query",
        "title": "MS SQL: Execute Query"
    },
    {
        "key": "f",
        "command": "notebook.find",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "title_ai": "Find in Notebook",
        "title": "Notebook: Find in Notebook"
    },
    {
        "key": "ctrl+shift+f9",
        "command": "o.showOutput",
        "title_ai": "Show Output"
    },
    {
        "key": "shift+alt+p",
        "command": "openapi.preview",
        "when": "editorTextFocus && !openapiErrors",
        "title_ai": "Show OpenAPI Preview",
        "title": "OpenAPI: show preview using the default renderer"
    },
    {
        "key": "shift+enter",
        "command": "python.execSelectionInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !isCompositeNotebook && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'",
        "title_ai": "Execute Selection in Terminal [Python]",
        "title": "Python: Run Selection/Line in Python Terminal"
    },
    {
        "key": "enter",
        "command": "pythonIndent.newlineAndIndent",
        "when": "editorTextFocus && !editorHasMultipleSelections && !neovim.mode && !suggestWidgetVisible && !vim.active && editorLangId == 'python'",
        "title_ai": "New Line and Indent [Python]",
        "title": "newline and auto indent"
    },
    {
        "key": "ctrl+shift+v",
        "command": "quicktype.pasteJSONAsTypesAndSerialization",
        "when": "editorTextFocus && editorLangId != 'markdown'",
        "title_ai": "Paste JSON as Types and Serialization",
        "title": "Paste JSON as Code"
    },
    {
        "key": "ctrl+k q",
        "command": "quokka.makeQuokkaFromExistingFile",
        "when": "!quokka.isLiveShareClient && !terminalFocus",
        "title_ai": "Make Quokka from Existing File",
        "title": "Quokka.js: Start on Current File"
    },
    {
        "key": "ctrl+alt+r",
        "command": "reactSnippets.search",
        "when": "editorTextFocus",
        "title_ai": "Search React Snippets",
        "title": "Snippet search"
    },
    {
        "key": "shift+alt+r",
        "command": "remote-wsl.revealInExplorer",
        "when": "editorFocus && remoteName == 'wsl'",
        "title_ai": "Reveal in Explorer (WSL)",
        "title": "File: Reveal in File Explorer"
    },
    {
        "key": "ctrl+shift+v",
        "command": "rst.showPreview",
        "when": "editorLangId == 'rst'",
        "title_ai": "Show RST Preview",
        "title": "RST: Open Preview"
    },
    {
        "key": "f9",
        "command": "sortLines.sortLines",
        "when": "editorTextFocus",
        "title_ai": "Sort Lines",
        "title": "Sort lines (ascending, case sensitive)"
    },
    {
        "key": "ctrl+shift+q",
        "command": "sqlite.runDocumentQuery",
        "when": "editorLangId =~ /(sql|sqlite)/",
        "title_ai": "Run SQLite Document Query",
        "title": "SQLite: Run Query"
    },
    {
        "key": "ctrl+c",
        "command": "sqltools.copyTextFromTreeItem",
        "when": "sideBarFocus && focusedView == 'sqltools-view-connectionExplorer'",
        "title_ai": "Copy Text from SQL Tree Item",
        "title": "SQLTools Sidebar: Copy Value(s)"
    },
    {
        "key": "shift+alt+p",
        "command": "swagger.preview",
        "when": "editorTextFocus",
        "title_ai": "Show Swagger Preview",
        "title": "Preview Swagger"
    },
    {
        "key": "ctrl+alt+l",
        "command": "turboConsoleLog.displayLogMessage",
        "title_ai": "Display Log Message",
        "title": "Turbo Console Log: Display Turbo Log Message"
    },
    {
        "key": "shift+alt+u",
        "command": "uppercase.toUpperCase",
        "title_ai": "Convert to Uppercase",
        "title": "Convert selection to uppercase"
    },
    {
        "key": "alt+n",
        "command": "vscgettext.moveToNextUntranslated",
        "when": "editorTextFocus && resourceLangId == 'po'",
        "title_ai": "Move to Next Untranslated"
    },
    {
        "key": "f5",
        "command": "vscode-postgres.runQuery",
        "when": "editorLangId == 'postgres'",
        "title_ai": "Run PostgreSQL Query",
        "title": "PostgreSQL: Run Query"
    },
    {
        "key": "ctrl+enter",
        "command": "workbench.action.chat.applyInEditor",
        "when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput",
        "title_ai": "Apply Chat in Editor",
        "title": "Chat: Apply in Editor"
    },
    {
        "key": "ctrl+enter",
        "command": "workbench.action.chat.insertCodeBlock",
        "when": "accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput",
        "title_ai": "Insert Code Block in Chat",
        "title": "Chat: Insert At Cursor"
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.terminal.chat.start",
        "when": "terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported",
        "title_ai": "Start Terminal Chat",
        "title": "Inline Chat: Terminal Inline Chat"
    },
    {
        "key": "shift+alt+e",
        "command": "PowerShell.ExpandAlias",
        "when": "editorTextFocus && editorLangId == 'powershell'",
        "title_ai": "Expand Alias [PowerShell]",
        "title": "PowerShell: Expand Alias"
    },
    {
        "key": "ctrl+enter",
        "command": "chat.inlineResourceAnchor.openToSide",
        "when": "chatAttachmentResource",
        "title_ai": "Open Inline Resource to Side"
    },
    {
        "key": "ctrl+shift+v",
        "command": "csv.preview",
        "when": "editorLangId == 'csv'",
        "title_ai": "Show CSV Preview",
        "title": "CSV: Open Preview"
    },
    {
        "key": "ctrl+shift+r ctrl+i",
        "command": "editor.action.codeAction",
        "when": "editorTextFocus && editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)",
        "args": {
            "kind": "refactor.inline.macro",
            "apply": "first"
        },
        "title_ai": "Show Code Actions"
    },
    {
        "key": "alt+c c",
        "command": "extension.colorHelper.convert",
        "when": "editorTextFocus",
        "title_ai": "Convert Color Format",
        "title": "Convert Color"
    },
    {
        "key": "ctrl+k shift+oem_7",
        "command": "extension.selectDoubleQuote",
        "when": "editorFocus",
        "title_ai": "Select Double Quote Content",
        "title": "Quick Select: Select inside double quote"
    },
    {
        "key": "ctrl+oem_2",
        "command": "github.copilot.acceptCursorPanelSolution",
        "when": "github.copilot.panelVisible && activeWebviewPanelId == 'GitHub Copilot Suggestions'",
        "title_ai": "Accept Cursor Panel Solution with GitHub Copilot",
        "title": "GitHub Copilot: Accept Panel Suggestion at the Cursor"
    },
    {
        "key": "alt+oem_period",
        "command": "gitlens.key.alt+.",
        "when": "gitlens:key:.",
        "title_ai": "GitLens: Alt+."
    },
    {
        "key": "ctrl+alt+c",
        "command": "hexEditor.copyAs",
        "when": "activeCustomEditorId == 'hexEditor.hexedit'",
        "title_ai": "Copy As in Hex Editor",
        "title": "Hex Editor: Copy As..."
    },
    {
        "key": "alt+d",
        "command": "ionic-official.debug",
        "when": "explorerViewletVisible",
        "title_ai": "Debug Ionic Application"
    },
    {
        "key": "shift+alt+c",
        "command": "java.view.package.copyFilePath",
        "when": "focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'",
        "title_ai": "Copy File Path [Java Package]",
        "title": "Java: Copy Path"
    },
    {
        "key": "shift+alt+b",
        "command": "java.workspace.compile",
        "title_ai": "Compile Workspace [Java]",
        "title": "Java: Force Java Compilation"
    },
    {
        "key": "shift+enter",
        "command": "jupyter.runcurrentcelladvance",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !isCompositeNotebook && !notebookEditorFocused",
        "title_ai": "Run Current Jupyter Cell and Advance",
        "title": "Jupyter: Run Current Cell And Advance"
    },
    {
        "key": "k",
        "command": "list.focusUp",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "title_ai": "Focus Up"
    },
    {
        "key": "ctrl+alt+oem_2",
        "command": "liveshare.followToTheSide",
        "when": "liveshare:hasCollaborators",
        "title_ai": "Follow to the Side in Live Share",
        "title": "Live Share: Follow Participant to the Side"
    },
    {
        "key": "alt+m p",
        "command": "map.preview-with-proj",
        "title_ai": "Show Map Preview with Projection",
        "title": "Map Preview (with projection)"
    },
    {
        "key": "ctrl+shift+c",
        "command": "mssql.connect",
        "when": "editorTextFocus && editorLangId == 'sql'",
        "title_ai": "Connect to SQL Server",
        "title": "MS SQL: Connect"
    },
    {
        "key": "shift+enter",
        "command": "python.execInREPL",
        "when": "config.python.REPL.sendToNativeREPL && editorTextFocus && !isCompositeNotebook && !jupyter.ownsSelection && !notebookEditorFocused && editorLangId == 'python'",
        "title_ai": "Execute in REPL [Python]",
        "title": "Python: Run Selection/Line in Native Python REPL"
    },
    {
        "key": "enter",
        "command": "pythonIndent.newlineAndIndent",
        "when": "editorTextFocus && vim.active && !editorHasMultipleSelections && !suggestWidgetVisible && editorLangId == 'python' && vim.mode =~ /(Insert|Replace|SurroundInputMode)/",
        "title_ai": "New Line and Indent [Python]",
        "title": "newline and auto indent"
    },
    {
        "key": "ctrl+shift+alt+v",
        "command": "quicktype.pasteJSONAsTypes",
        "when": "editorTextFocus",
        "title_ai": "Paste JSON as Types",
        "title": "Paste JSON as Types"
    },
    {
        "key": "ctrl+k j",
        "command": "quokka.createJavaScriptFile",
        "when": "!quokka.isLiveShareClient && !terminalFocus",
        "title_ai": "Create JavaScript File with Quokka",
        "title": "Quokka.js: New JavaScript File"
    },
    {
        "key": "ctrl+k v",
        "command": "rst.showPreviewToSide",
        "when": "editorLangId == 'rst'",
        "title_ai": "Show RST Preview to Side",
        "title": "RST: Open Preview to the Side"
    },
    {
        "key": "shift+alt+c",
        "command": "turboConsoleLog.commentAllLogMessages",
        "title_ai": "Comment All Log Messages",
        "title": "Turbo Console Log: Comment Turbo Log Messages"
    },
    {
        "key": "shift+alt+n",
        "command": "vscgettext.moveToPreviousUntranslated",
        "when": "editorTextFocus && resourceLangId == 'po'",
        "title_ai": "Move to Previous Untranslated"
    },
    {
        "key": "ctrl+e ctrl+e",
        "command": "workbench.action.quickOpen",
        "when": "!config.sqltools.disableChordKeybindings && !editorHasSelection && !editorTextFocus",
        "title_ai": "Quick Open",
        "title": "Go to File..."
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.terminal.suggestToggleDetails",
        "when": "simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible",
        "title_ai": "Toggle Terminal Suggestion Details"
    },
    {
        "key": "ctrl+space",
        "command": "workbench.action.terminal.suggestToggleDetails",
        "when": "simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || simpleSuggestWidgetHasFocusedSuggestion && terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible",
        "title_ai": "Toggle Terminal Suggestion Details"
    },
    {
        "key": "shift+alt+s",
        "command": "PowerShell.ShowAdditionalCommands",
        "when": "editorTextFocus && editorLangId == 'powershell'",
        "title_ai": "Show Additional Commands [PowerShell]",
        "title": "PowerShell: Show Additional Commands from PowerShell Modules"
    },
    {
        "key": "ctrl+shift+v",
        "command": "csv.preview",
        "when": "editorLangId == 'tsv'",
        "title_ai": "Show CSV Preview",
        "title": "CSV: Open Preview"
    },
    {
        "key": "ctrl+shift+r ctrl+e",
        "command": "editor.action.codeAction",
        "when": "editorTextFocus && editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)",
        "args": {
            "kind": "refactor.extract.function",
            "apply": "first"
        },
        "title_ai": "Show Code Actions"
    },
    {
        "key": "ctrl+k oem_1",
        "command": "extension.selectEitherQuote",
        "when": "editorFocus",
        "title_ai": "Select Either Quote Content",
        "title": "Quick Select: Select inside either quote"
    },
    {
        "key": "alt+oem_4",
        "command": "github.copilot.previousPanelSolution",
        "when": "github.copilot.panelVisible && activeWebviewPanelId == 'GitHub Copilot Suggestions'",
        "title_ai": "Previous Panel Solution with GitHub Copilot",
        "title": "GitHub Copilot: Navigate to the Previous Panel Suggestion"
    },
    {
        "key": "alt+enter",
        "command": "gitlens.key.alt+enter",
        "when": "gitlens:key:alt+enter",
        "title_ai": "GitLens: Alt+Enter"
    },
    {
        "key": "insert",
        "command": "hexEditor.switchEditMode",
        "when": "hexEditor:isActive",
        "title_ai": "Switch Edit Mode in Hex Editor",
        "title": "Hex Editor: Switch Edit Mode"
    },
    {
        "key": "alt+b",
        "command": "ionic-official.build",
        "when": "explorerViewletVisible",
        "title_ai": "Build Ionic Application"
    },
    {
        "key": "ctrl+shift+v",
        "command": "java.action.clipboardPasteAction",
        "when": "javaLSReady && editorLangId == 'java'",
        "title_ai": "Clipboard Paste [Java]"
    },
    {
        "key": "ctrl+k ctrl+shift+c",
        "command": "java.view.package.copyRelativeFilePath",
        "when": "focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'",
        "title_ai": "Copy Relative File Path [Java Package]",
        "title": "Java: Copy Relative Path"
    },
    {
        "key": "ctrl+enter",
        "command": "jupyter.runcurrentcell",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !isCompositeNotebook && !notebookEditorFocused",
        "title_ai": "Run Current Jupyter Cell",
        "title": "Jupyter: Run Current Cell"
    },
    {
        "key": "j",
        "command": "list.focusDown",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "title_ai": "Focus Down"
    },
    {
        "key": "ctrl+alt+f",
        "command": "liveshare.unfollow",
        "when": "liveshare:hasCollaborators && liveshare:isFollowing",
        "title_ai": "Unfollow in Live Share",
        "title": "Live Share: Unfollow Participant"
    },
    {
        "key": "ctrl+shift+d",
        "command": "mssql.disconnect",
        "when": "editorTextFocus && editorLangId == 'sql'",
        "title_ai": "Disconnect from SQL Server",
        "title": "MS SQL: Disconnect"
    },
    {
        "key": "enter",
        "command": "python.execInREPLEnter",
        "when": "isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && !inlineChatFocused && !notebookCellListFocused && activeEditor == 'workbench.editor.repl'",
        "title_ai": "Execute in REPL with Enter [Python]"
    },
    {
        "key": "enter",
        "command": "pythonIndent.newlineAndIndent",
        "when": "editorTextFocus && !editorHasMultipleSelections && !suggestWidgetVisible && editorLangId == 'python' && neovim.mode == 'insert'",
        "title_ai": "New Line and Indent [Python]",
        "title": "newline and auto indent"
    },
    {
        "key": "ctrl+k t",
        "command": "quokka.createTypeScriptFile",
        "when": "!quokka.isLiveShareClient && !terminalFocus",
        "title_ai": "Create TypeScript File with Quokka",
        "title": "Quokka.js: New TypeScript File"
    },
    {
        "key": "ctrl+e ctrl+b",
        "command": "sqltools.formatSql",
        "when": "editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings && !editorReadonly",
        "title_ai": "Format SQL",
        "title": "SQLTools: Format Selected Query For Any Document"
    },
    {
        "key": "shift+alt+u",
        "command": "turboConsoleLog.uncommentAllLogMessages",
        "title_ai": "Uncomment All Log Messages",
        "title": "Turbo Console Log: Uncomment Turbo Log Messages"
    },
    {
        "key": "alt+f",
        "command": "vscgettext.moveToNextFuzzy",
        "when": "editorTextFocus && resourceLangId == 'po'",
        "title_ai": "Move to Next Fuzzy Translation"
    },
    {
        "key": "f8",
        "command": "PowerShell.RunSelection",
        "when": "editorTextFocus && editorLangId == 'powershell'",
        "title_ai": "Run Selection [PowerShell]",
        "title": "PowerShell: Run Selection"
    },
    {
        "key": "ctrl+shift+v",
        "command": "csv.preview",
        "when": "editorLangId == 'csv (semicolon)'",
        "title_ai": "Show CSV Preview",
        "title": "CSV: Open Preview"
    },
    {
        "key": "ctrl+k shift+oem_1",
        "command": "extension.switchQuotes",
        "when": "editorFocus",
        "title_ai": "Switch Quotes",
        "title": "Quick Select: Switch quotes"
    },
    {
        "key": "alt+oem_6",
        "command": "github.copilot.nextPanelSolution",
        "when": "github.copilot.panelVisible && activeWebviewPanelId == 'GitHub Copilot Suggestions'",
        "title_ai": "Next Panel Solution with GitHub Copilot",
        "title": "GitHub Copilot: Navigate to the Next Panel Suggestion"
    },
    {
        "key": "alt+left",
        "command": "gitlens.key.alt+left",
        "when": "gitlens:key:alt+left",
        "title_ai": "GitLens: Alt+Left"
    },
    {
        "key": "ctrl+shift+v",
        "command": "java.action.filesExplorerPasteAction",
        "when": "config.editor.pasteAs.enabled && explorerViewletFocus",
        "title_ai": "Files Explorer Paste [Java]",
        "title": "Java: Paste Clipboard Text Into a File"
    },
    {
        "key": "f2",
        "command": "java.view.package.renameFile",
        "when": "focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'",
        "title_ai": "Rename File [Java Package]",
        "title": "Java: Rename"
    },
    {
        "key": "alt+enter",
        "command": "jupyter.runcurrentcellandaddbelow",
        "when": "editorTextFocus && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused",
        "title_ai": "Run Current Jupyter Cell and Add Below"
    },
    {
        "key": "ctrl+alt+j",
        "command": "liveshare.join",
        "when": "liveshare:state != 'Joined' && liveshare:state != 'Shared'",
        "title_ai": "Join Live Share",
        "title": "Live Share: Join Collaboration Session"
    },
    {
        "key": "a",
        "command": "notebook.cell.insertCodeCellAboveAndFocusContainer",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "title_ai": "Insert Code Cell Above and Focus Container",
        "title": "Notebook: Insert Code Cell Above and Focus Container"
    },
    {
        "key": "enter",
        "command": "python.execInInteractiveWindowEnter",
        "when": "isCompositeNotebook && !config.interactiveWindow.executeWithShiftEnter && !inlineChatFocused && !notebookCellListFocused && activeEditor == 'workbench.editor.interactive'",
        "title_ai": "Execute in Interactive Window with Enter [Python]"
    },
    {
        "key": "ctrl+k l",
        "command": "quokka.createFile",
        "when": "!quokka.isLiveShareClient && !terminalFocus",
        "title_ai": "Create Quokka File",
        "title": "Quokka.js: New File"
    },
    {
        "key": "ctrl+e ctrl+e",
        "command": "sqltools.executeQuery",
        "when": "editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings",
        "title_ai": "Execute SQL Query",
        "title": "SQLTools Connection: Run Selected Query"
    },
    {
        "key": "shift+alt+d",
        "command": "turboConsoleLog.deleteAllLogMessages",
        "title_ai": "Delete All Log Messages",
        "title": "Turbo Console Log: Delete Turbo Log Messages"
    },
    {
        "key": "shift+alt+f",
        "command": "vscgettext.moveToPreviousFuzzy",
        "when": "editorTextFocus && resourceLangId == 'po'",
        "title_ai": "Move to Previous Fuzzy Translation"
    },
    {
        "key": "ctrl+alt+d",
        "command": "workbench.view.extension.objectExplorer",
        "when": "viewContainer.workbench.view.extension.objectExplorer.enabled",
        "title_ai": "Show Object Explorer",
        "title": "View: Show SQL Server"
    },
    {
        "key": "ctrl+shift+v",
        "command": "csv.preview",
        "when": "editorLangId == 'csv (pipe)'",
        "title_ai": "Show CSV Preview",
        "title": "CSV: Open Preview"
    },
    {
        "key": "alt+oem_5",
        "command": "editor.action.inlineSuggest.trigger",
        "when": "editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible",
        "title_ai": "Trigger Inline Suggestion",
        "title": "Trigger Inline Suggestion"
    },
    {
        "key": "ctrl+alt+j",
        "command": "editor.action.insertSnippet",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'powershell'",
        "title_ai": "Insert Snippet",
        "title": "Snippets: Insert Snippet"
    },
    {
        "key": "ctrl+k shift+9",
        "command": "extension.selectParenthesis",
        "when": "editorFocus",
        "title_ai": "Select Parenthesis Content",
        "title": "Quick Select: Select inside parenthesis"
    },
    {
        "key": "alt+right",
        "command": "gitlens.key.alt+right",
        "when": "gitlens:key:alt+right",
        "title_ai": "GitLens: Alt+Right"
    },
    {
        "key": "escape",
        "command": "interactive.input.clear",
        "when": "isCompositeNotebook && !LinkedEditingInputVisible && !accessibilityHelpWidgetVisible && !breakpointWidgetVisible && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible && !exceptionWidgetVisible && !findWidgetVisible && !inSnippetMode && !inlineChatVisible && !isComposing && !markersNavigationVisible && !notebookEditorFocused && !notificationToastsVisible && !parameterHintsVisible && !renameInputVisible && !selectionAnchorSet && !suggestWidgetVisible",
        "title_ai": "Clear Interactive Input"
    },
    {
        "key": "ctrl+shift+alt+s",
        "command": "java.action.doCleanup",
        "when": "javaLSReady && editorLangId == 'java'",
        "title_ai": "Do Cleanup [Java]",
        "title": "Java: Performs Cleanup Actions"
    },
    {
        "key": "delete",
        "command": "java.view.package.moveFileToTrash",
        "when": "explorerResourceMoveableToTrash && focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'",
        "title_ai": "Move File to Trash [Java Package]",
        "title": "Java: Delete"
    },
    {
        "key": "ctrl+c",
        "command": "mssql.copyObjectName",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.extension.objectExplorer'",
        "title_ai": "Copy SQL Server Object Name",
        "title": "MS SQL: Copy Object Name"
    },
    {
        "key": "b",
        "command": "notebook.cell.insertCodeCellBelowAndFocusContainer",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "title_ai": "Insert Code Cell Below and Focus Container",
        "title": "Notebook: Insert Code Cell Below and Focus Container"
    },
    {
        "key": "ctrl+k e",
        "command": "quokka.stopCurrent",
        "when": "quokka.hasActiveSession && !quokka.isLiveShareClient && !terminalFocus",
        "title_ai": "Stop Current Quokka",
        "title": "Quokka.js: Stop Current"
    },
    {
        "key": "ctrl+e ctrl+d",
        "command": "sqltools.describeTable",
        "when": "!config.sqltools.disableChordKeybindings",
        "title_ai": "Describe SQL Table",
        "title": "SQLTools Connection: Describe Table"
    },
    {
        "key": "shift+alt+x",
        "command": "turboConsoleLog.correctAllLogMessages",
        "title_ai": "Correct All Log Messages",
        "title": "Turbo Console Log: Correct Turbo Log Messages"
    },
    {
        "key": "alt+u",
        "command": "vscgettext.moveToNextUntranslatedOrFuzzy",
        "when": "editorTextFocus && resourceLangId == 'po'",
        "title_ai": "Move to Next Untranslated or Fuzzy"
    },
    {
        "key": "ctrl+k oem_3",
        "command": "extension.selectBackTick",
        "when": "editorFocus",
        "title_ai": "Select Backtick Content",
        "title": "Quick Select: Select inside back ticks"
    },
    {
        "key": "ctrl+enter",
        "command": "gitlens.key.ctrl+enter",
        "when": "gitlens:key:ctrl+enter",
        "title_ai": "GitLens: Ctrl+Enter"
    },
    {
        "key": "ctrl+o",
        "command": "java.action.showExtendedOutline",
        "when": "inQuickOpen && javaLSReady",
        "title_ai": "Show Extended Outline [Java]",
        "title": "Java: Open Extended Outline"
    },
    {
        "key": "delete",
        "command": "java.view.package.deleteFilePermanently",
        "when": "!explorerResourceMoveableToTrash && focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'",
        "title_ai": "Delete File Permanently [Java Package]",
        "title": "Java: Delete Permanently"
    },
    {
        "key": "ctrl+oem_1 s",
        "command": "jupyter.insertCellBelowPosition",
        "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused",
        "title_ai": "Insert Jupyter Cell Below Position",
        "title": "Jupyter: Insert Cell Below Position"
    },
    {
        "key": "d d",
        "command": "notebook.cell.delete",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "title_ai": "Delete Cell [Notebook]",
        "title": "Notebook: Delete Cell"
    },
    {
        "key": "ctrl+k v",
        "command": "quokka.showValue",
        "when": "quokka.hasActiveSession && quokka.isActiveEditorRunningQuokka && !quokka.isLiveShareClient && !terminalFocus",
        "title_ai": "Show Quokka Value",
        "title": "Quokka.js: Show Value"
    },
    {
        "key": "ctrl+e ctrl+h",
        "command": "sqltools.runFromHistory",
        "when": "!config.sqltools.disableChordKeybindings",
        "title_ai": "Run from SQL History",
        "title": "SQLTools History: Run"
    },
    {
        "key": "shift+alt+u",
        "command": "vscgettext.moveToPreviousUntranslatedOrFuzzy",
        "when": "editorTextFocus && resourceLangId == 'po'",
        "title_ai": "Move to Previous Untranslated or Fuzzy"
    },
    {
        "key": "ctrl+k oem_4",
        "command": "extension.selectSquareBrackets",
        "when": "editorFocus",
        "title_ai": "Select Square Brackets Content",
        "title": "Quick Select: Select inside square brackets"
    },
    {
        "key": "ctrl+left",
        "command": "gitlens.key.ctrl+left",
        "when": "gitlens:key:ctrl+left",
        "title_ai": "GitLens: Ctrl+Left"
    },
    {
        "key": "ctrl+oem_1 b",
        "command": "jupyter.insertCellBelow",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused",
        "title_ai": "Insert Jupyter Cell Below",
        "title": "Jupyter: Insert Cell Below"
    },
    {
        "key": "ctrl+e ctrl+a",
        "command": "sqltools.runFromBookmarks",
        "when": "!config.sqltools.disableChordKeybindings",
        "title_ai": "Run from SQL Bookmarks",
        "title": "SQLTools Bookmarks: Run"
    },
    {
        "key": "z",
        "command": "undo",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "title_ai": "Undo",
        "title": "Undo"
    },
    {
        "key": "ctrl+k shift+oem_4",
        "command": "extension.selectCurlyBrackets",
        "when": "editorFocus",
        "title_ai": "Select Curly Brackets Content",
        "title": "Quick Select: Select inside curly brackets"
    },
    {
        "key": "ctrl+right",
        "command": "gitlens.key.ctrl+right",
        "when": "gitlens:key:ctrl+right",
        "title_ai": "GitLens: Ctrl+Right"
    },
    {
        "key": "ctrl+oem_1 a",
        "command": "jupyter.insertCellAbove",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused",
        "title_ai": "Insert Jupyter Cell Above",
        "title": "Jupyter: Insert Cell Above"
    },
    {
        "key": "ctrl+e ctrl+s",
        "command": "sqltools.showRecords",
        "when": "!config.sqltools.disableChordKeybindings",
        "title_ai": "Show SQL Records",
        "title": "SQLTools Connection: Show Table Records"
    },
    {
        "key": "s",
        "command": "workbench.action.files.save",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "title_ai": "Save",
        "title": "File: Save"
    },
    {
        "key": "ctrl+k shift+0",
        "command": "extension.selectParenthesisOuter",
        "when": "editorFocus",
        "title_ai": "Select Parenthesis Content [Outer]",
        "title": "Quick Select: Select outside parenthesis"
    },
    {
        "key": "ctrl+oem_1 x",
        "command": "jupyter.deleteCells",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused",
        "title_ai": "Delete Jupyter Cells",
        "title": "Jupyter: Delete Selected Cells"
    },
    {
        "key": "c",
        "command": "notebook.cell.copy",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "title_ai": "Copy Notebook Cell",
        "title": "Notebook: Copy Cell"
    },
    {
        "key": "ctrl+k x",
        "command": "quokka.copyValue",
        "when": "quokka.hasActiveSession && quokka.isActiveEditorRunningQuokka && !quokka.isLiveShareClient && !terminalFocus",
        "title_ai": "Copy Quokka Value",
        "title": "Quokka.js: Copy Value"
    },
    {
        "key": "ctrl+e ctrl+r",
        "command": "sqltools.deleteBookmark",
        "when": "!config.sqltools.disableChordKeybindings",
        "title_ai": "Delete SQL Bookmark",
        "title": "SQLTools Bookmarks: Delete"
    },
    {
        "key": "ctrl+shift+g g",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'",
        "title_ai": "Show Source Control",
        "title": "View: Show Changes"
    },
    {
        "key": "ctrl+k oem_6",
        "command": "extension.selectSquareBracketsOuter",
        "when": "editorFocus",
        "title_ai": "Select Square Brackets Content [Outer]",
        "title": "Quick Select: Select outside square brackets"
    },
    {
        "key": "escape",
        "command": "gitlens.key.escape",
        "when": "editorTextFocus && gitlens:key:escape && !codeActionMenuVisible && !findWidgetVisible && !isInEmbeddedEditor && !parameterHintsVisible && !quickFixWidgetVisible && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible",
        "title_ai": "GitLens: Escape"
    },
    {
        "key": "ctrl+shift+alt+oem_4",
        "command": "jupyter.extendSelectionByCellAbove",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused",
        "title_ai": "Extend Selection by Jupyter Cell Above",
        "title": "Jupyter: Extend Selection By Cell Above"
    },
    {
        "key": "x",
        "command": "notebook.cell.cut",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "title_ai": "Cut Notebook Cell",
        "title": "Notebook: Cut Cell"
    },
    {
        "key": "ctrl+k i",
        "command": "quokka.installMissingPackageToQuokka",
        "when": "quokka.hasActiveSession && !quokka.isLiveShareClient && !terminalFocus",
        "title_ai": "Install Missing Package to Quokka",
        "title": "Quokka.js: Install Missing Package only for Quokka File"
    },
    {
        "key": "ctrl+e ctrl+q",
        "command": "sqltools.bookmarkSelection",
        "when": "editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings",
        "title_ai": "Bookmark SQL Selection",
        "title": "SQLTools Bookmarks: Bookmark Selected Query"
    },
    {
        "key": "ctrl+k shift+oem_6",
        "command": "extension.selectCurlyBracketsOuter",
        "when": "editorFocus",
        "title_ai": "Select Curly Brackets Content [Outer]",
        "title": "Quick Select: Select outside curly brackets"
    },
    {
        "key": "left",
        "command": "gitlens.key.left",
        "when": "gitlens:key:left",
        "title_ai": "GitLens: Left"
    },
    {
        "key": "ctrl+shift+alt+oem_6",
        "command": "jupyter.extendSelectionByCellBelow",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused",
        "title_ai": "Extend Selection by Jupyter Cell Below",
        "title": "Jupyter: Extend Selection By Cell Below"
    },
    {
        "key": "v",
        "command": "notebook.cell.paste",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "title_ai": "Paste Notebook Cell",
        "title": "Notebook: Paste Cell"
    },
    {
        "key": "escape",
        "command": "quokka.clearValue",
        "when": "editorTextFocus && quokka.isActiveEditorRunningQuokka && quokka.lineHasRemovableInlineValues && !findWidgetVisible && !inReferenceSearchEditor && !parameterHintsVisible && !quickFixWidgetVisible && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible && !vim.active || editorTextFocus && quokka.isActiveEditorRunningQuokka && quokka.lineHasRemovableInlineValues && !findWidgetVisible && !inReferenceSearchEditor && !parameterHintsVisible && !quickFixWidgetVisible && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible && vim.mode == 'Normal'",
        "title_ai": "Clear Quokka Value",
        "title": "Quokka.js: Clear Value"
    },
    {
        "key": "ctrl+k shift+oem_comma",
        "command": "extension.selectAngleBrackets",
        "when": "editorFocus",
        "title_ai": "Select Angle Brackets Content",
        "title": "Quick Select: Select inside angled brackets"
    },
    {
        "key": "right",
        "command": "gitlens.key.right",
        "when": "gitlens:key:right",
        "title_ai": "GitLens: Right"
    },
    {
        "key": "ctrl+oem_1 u",
        "command": "jupyter.moveCellsUp",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused",
        "title_ai": "Move Jupyter Cells Up",
        "title": "Jupyter: Move Selected Cells Up"
    },
    {
        "key": "shift+l",
        "command": "notebook.toggleLineNumbers",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "title_ai": "Toggle Notebook Line Numbers",
        "title": "Notebook: Toggle Notebook Line Numbers"
    },
    {
        "key": "escape escape",
        "command": "quokka.clearFileValues",
        "when": "editorTextFocus && quokka.fileHasRemovableInlineValues && quokka.isActiveEditorRunningQuokka && !editorHasSelection && !findWidgetVisible && !inReferenceSearchEditor && !parameterHintsVisible && !quickFixWidgetVisible && !quokka.lineHasRemovableInlineValues && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible && !vim.active || editorTextFocus && quokka.fileHasRemovableInlineValues && quokka.isActiveEditorRunningQuokka && !editorHasSelection && !findWidgetVisible && !inReferenceSearchEditor && !parameterHintsVisible && !quickFixWidgetVisible && !quokka.lineHasRemovableInlineValues && !referenceSearchVisible && !renameInputVisible && !suggestWidgetVisible && vim.mode == 'Normal'",
        "title_ai": "Clear Quokka File Values",
        "title": "Quokka.js: Clear File Values"
    },
    {
        "key": "ctrl+k shift+oem_period",
        "command": "extension.selectInTag",
        "when": "editorFocus",
        "title_ai": "Select In Tag",
        "title": "Quick Select: Select inside tag"
    },
    {
        "key": "ctrl+shift+g shift+oem_comma",
        "command": "gitlens.diffLineWithPrevious",
        "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'",
        "title_ai": "Diff Line with Previous",
        "title": "GitLens: Open Line Changes with Previous Revision"
    },
    {
        "key": "ctrl+oem_1 d",
        "command": "jupyter.moveCellsDown",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused",
        "title_ai": "Move Jupyter Cells Down",
        "title": "Jupyter: Move Selected Cells Down"
    },
    {
        "key": "o",
        "command": "notebook.cell.toggleOutputs",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "title_ai": "Toggle Notebook Cell Outputs",
        "title": "Notebook: Toggle Outputs"
    },
    {
        "key": "shift+f5",
        "command": "quokka.stopTraceNavigation",
        "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'",
        "title_ai": "Stop Trace Navigation in Quokka",
        "title": "Quokka.js: Stop Time Machine"
    },
    {
        "key": "shift+alt+oem_comma",
        "command": "gitlens.diffLineWithPrevious",
        "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'",
        "title_ai": "Diff Line with Previous",
        "title": "GitLens: Open Line Changes with Previous Revision"
    },
    {
        "key": "ctrl+oem_1 m",
        "command": "jupyter.changeCellToMarkdown",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused",
        "title_ai": "Change Jupyter Cell to Markdown",
        "title": "Jupyter: Change Cell to Markdown"
    },
    {
        "key": "l",
        "command": "notebook.cell.toggleLineNumbers",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused",
        "title_ai": "Toggle Notebook Cell Line Numbers",
        "title": "Notebook: Show Cell Line Numbers"
    },
    {
        "key": "shift+f5",
        "command": "quokka.debug",
        "when": "activeEditor && quokka.isActiveEditorRunningQuokka && !inDebugMode && !quokka.isLiveShareClient && !quokka.traceBeingNavigated || activeEditor && !inDebugMode && !quokka.isLiveShareClient && !quokka.traceBeingNavigated && resourceScheme == 'quokka-code-timeline'",
        "title_ai": "Debug with Quokka",
        "title": "Quokka.js: Start Time Machine On The Current Line"
    },
    {
        "key": "alt+oem_period",
        "command": "gitlens.diffWithNext",
        "when": "editorTextFocus && gitlens:enabled && !isInDiffEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/",
        "title_ai": "Diff with Next",
        "title": "GitLens: Open Changes with Next Revision"
    },
    {
        "key": "ctrl+oem_1 c",
        "command": "jupyter.changeCellToCode",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused",
        "title_ai": "Change Jupyter Cell to Code",
        "title": "Jupyter: Change Cell to Code"
    },
    {
        "key": "ctrl+shift+oem_minus",
        "command": "notebook.cell.split",
        "when": "editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputInputFocused",
        "title_ai": "Split Cell [Notebook]",
        "title": "Notebook: Split Cell"
    },
    {
        "key": "shift+alt+f5",
        "command": "quokka.debugAutoPlay",
        "when": "activeEditor && !inDebugMode && !quokka.isLiveShareClient && !quokka.traceBeingNavigated && resourceScheme == 'quokka-code-timeline' || activeEditor && quokka.isActiveEditorRunningQuokka && quokka.prevGenGuiEnabled && !inDebugMode && !quokka.isLiveShareClient && !quokka.traceBeingNavigated",
        "title_ai": "Debug Auto Play with Quokka",
        "title": "Quokka.js: Start Time Machine With Auto Play"
    },
    {
        "key": "ctrl+shift+g oem_period",
        "command": "gitlens.diffWithNext",
        "when": "editorTextFocus && gitlens:enabled && !isInDiffEditor && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/",
        "title_ai": "Diff with Next",
        "title": "GitLens: Open Changes with Next Revision"
    },
    {
        "key": "ctrl+alt+oem_6",
        "command": "jupyter.gotoNextCellInFile",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused",
        "title_ai": "Go to Next Jupyter Cell in File",
        "title": "Jupyter: Go to Next Cell"
    },
    {
        "key": "ctrl+enter",
        "command": "notebook.cell.executeAndFocusContainer",
        "when": "notebookCellListFocused || editorTextFocus && inputFocus && notebookEditorFocused",
        "title_ai": "Execute Notebook Cell and Focus Container",
        "title": "Notebook: Execute Cell and Focus Container"
    },
    {
        "key": "f11",
        "command": "quokka.playTraceNextStep",
        "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'",
        "title_ai": "Play Trace Next Step in Quokka",
        "title": "Quokka.js: Step Into"
    },
    {
        "key": "alt+oem_period",
        "command": "gitlens.diffWithNextInDiffLeft",
        "when": "editorTextFocus && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/",
        "title_ai": "Diff with Next in Left Diff",
        "title": "GitLens: Open Changes with Next Revision"
    },
    {
        "key": "ctrl+alt+oem_4",
        "command": "jupyter.gotoPrevCellInFile",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused",
        "title_ai": "Go to Previous Jupyter Cell in File",
        "title": "Jupyter: Go to Previous Cell"
    },
    {
        "key": "shift+enter",
        "command": "notebook.cell.executeAndSelectBelow",
        "when": "notebookCellListFocused && !interactiveEditorFocused && notebookCellType == 'code' || editorTextFocus && inputFocus && notebookEditorFocused && !interactiveEditorFocused",
        "title_ai": "Execute Notebook Cell and Select Below",
        "title": "Notebook: Execute Notebook Cell and Select Below"
    },
    {
        "key": "f5",
        "command": "quokka.playTraceForwardToSelection",
        "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'",
        "title_ai": "Play Trace Forward to Selection in Quokka",
        "title": "Quokka.js: Run to Active Line"
    },
    {
        "key": "ctrl+shift+g oem_period",
        "command": "gitlens.diffWithNextInDiffLeft",
        "when": "editorTextFocus && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/",
        "title_ai": "Diff with Next in Left Diff",
        "title": "GitLens: Open Changes with Next Revision"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "interactive.acceptChanges",
        "when": "interactiveEditorHasProvider && interactiveEditorVisible && !interactiveEditorDocumentChanged || interactiveEditorHasProvider && interactiveEditorVisible && config.interactiveEditor.editMode != 'preview'",
        "title_ai": "Accept Changes in Interactive Window"
    },
    {
        "key": "ctrl+alt+oem_5",
        "command": "jupyter.selectCellContents",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused",
        "title_ai": "Select Jupyter Cell Contents",
        "title": "Jupyter: Select Cell Contents"
    },
    {
        "key": "f8",
        "command": "quokka.playTraceForwardToBreakpoint",
        "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'",
        "title_ai": "Play Trace Forward to Breakpoint in Quokka",
        "title": "Quokka.js: Run to Breakpoint"
    },
    {
        "key": "alt+oem_period",
        "command": "gitlens.diffWithNextInDiffRight",
        "when": "editorTextFocus && gitlens:enabled && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/",
        "title_ai": "Diff with Next in Right Diff",
        "title": "GitLens: Open Changes with Next Revision"
    },
    {
        "key": "ctrl+shift+alt+oem_5",
        "command": "jupyter.selectCell",
        "when": "editorTextFocus && jupyter.hascodecells && !jupyter.webExtension && !notebookEditorFocused",
        "title_ai": "Select Jupyter Cell",
        "title": "Jupyter: Select Cell"
    },
    {
        "key": "f10",
        "command": "quokka.playTraceNextStepOver",
        "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'",
        "title_ai": "Play Trace Next Step Over in Quokka",
        "title": "Quokka.js: Step Over"
    },
    {
        "key": "ctrl+shift+g oem_period",
        "command": "gitlens.diffWithNextInDiffRight",
        "when": "editorTextFocus && gitlens:enabled && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/",
        "title_ai": "Diff with Next in Right Diff",
        "title": "GitLens: Open Changes with Next Revision"
    },
    {
        "key": "ctrl+r",
        "command": "jupyter.refreshDataViewer",
        "when": "isWorkspaceTrusted && jupyter.dataViewerActive",
        "title_ai": "Refresh Jupyter Data Viewer",
        "title": "Jupyter: Refresh Data Viewer"
    },
    {
        "key": "shift+f11",
        "command": "quokka.playTraceNextStepOut",
        "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'",
        "title_ai": "Play Trace Next Step Out in Quokka",
        "title": "Quokka.js: Step Out"
    },
    {
        "key": "alt+oem_comma",
        "command": "gitlens.diffWithPrevious",
        "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'",
        "title_ai": "Diff with Previous",
        "title": "GitLens: Open Changes with Previous Revision"
    },
    {
        "key": "ctrl+shift+alt+enter",
        "command": "jupyter.runAndDebugCell",
        "when": "isWorkspaceTrusted && jupyter.ispythonnotebook && !notebookKernel && notebookCellType == 'code' || isWorkspaceTrusted && jupyter.ispythonnotebook && notebookCellType == 'code' && notebookKernel =~ /^ms-toolsai.jupyter\\// && resource not in 'jupyter.notebookeditor.debugDocuments'",
        "title_ai": "Run and Debug Jupyter Cell",
        "title": "Jupyter: Debug Cell"
    },
    {
        "key": "ctrl+f11",
        "command": "quokka.playTracePrevStep",
        "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'",
        "title_ai": "Play Trace Previous Step in Quokka",
        "title": "Quokka.js: Step Back Into"
    },
    {
        "key": "ctrl+shift+g oem_comma",
        "command": "gitlens.diffWithPrevious",
        "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'",
        "title_ai": "Diff with Previous",
        "title": "GitLens: Open Changes with Previous Revision"
    },
    {
        "key": "f10",
        "command": "jupyter.runByLine",
        "when": "isWorkspaceTrusted && jupyter.ispythonnotebook && !notebookKernel && notebookCellType == 'code' || isWorkspaceTrusted && jupyter.ispythonnotebook && notebookCellType == 'code' && notebookKernel =~ /^ms-toolsai.jupyter\\// && resource not in 'jupyter.notebookeditor.debugDocuments'",
        "title_ai": "Run Jupyter By Line",
        "title": "Jupyter: Run by Line"
    },
    {
        "key": "ctrl+f5",
        "command": "quokka.playTraceBackwardToSelection",
        "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'",
        "title_ai": "Play Trace Backward to Selection in Quokka",
        "title": "Quokka.js: Run Back to Active Line"
    },
    {
        "key": "alt+oem_comma",
        "command": "gitlens.diffWithPreviousInDiffLeft",
        "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'",
        "title_ai": "Diff with Previous in Left Diff",
        "title": "GitLens: Open Changes with Previous Revision"
    },
    {
        "key": "f10",
        "command": "jupyter.runByLineNext",
        "when": "notebookCellResource in 'jupyter.notebookeditor.runByLineCells'",
        "title_ai": "Run Jupyter By Line Next",
        "title": "Jupyter: Run Next Line"
    },
    {
        "key": "ctrl+f8",
        "command": "quokka.playTraceBackwardToBreakpoint",
        "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'",
        "title_ai": "Play Trace Backward to Breakpoint in Quokka",
        "title": "Quokka.js: Run Back to Breakpoint"
    },
    {
        "key": "ctrl+shift+g oem_comma",
        "command": "gitlens.diffWithPreviousInDiffLeft",
        "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'",
        "title_ai": "Diff with Previous in Left Diff",
        "title": "GitLens: Open Changes with Previous Revision"
    },
    {
        "key": "ctrl+enter",
        "command": "jupyter.runByLineStop",
        "when": "notebookCellResource in 'jupyter.notebookeditor.runByLineCells'",
        "title_ai": "Stop Jupyter Run By Line",
        "title": "Jupyter: Continue Execution"
    },
    {
        "key": "ctrl+f10",
        "command": "quokka.playTracePrevStepOver",
        "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'",
        "title_ai": "Play Trace Previous Step Over in Quokka",
        "title": "Quokka.js: Step Back Over"
    },
    {
        "key": "alt+oem_comma",
        "command": "gitlens.diffWithPreviousInDiffRight",
        "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'",
        "title_ai": "Diff with Previous in Right Diff",
        "title": "GitLens: Open Changes with Previous Revision"
    },
    {
        "key": "ctrl+shift+f11",
        "command": "quokka.playTracePrevStepOut",
        "when": "activeEditor && quokka.isActiveEditorRunningQuokka && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient || activeEditor && quokka.traceBeingNavigated && !inDebugMode && !quokka.isLiveShareClient && resourceScheme == 'quokka-code-timeline'",
        "title_ai": "Play Trace Previous Step Out in Quokka",
        "title": "Quokka.js: Step Back Out"
    },
    {
        "key": "ctrl+shift+g oem_comma",
        "command": "gitlens.diffWithPreviousInDiffRight",
        "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:tracked'",
        "title_ai": "Diff with Previous in Right Diff",
        "title": "GitLens: Open Changes with Previous Revision"
    },
    {
        "key": "ctrl+shift+g shift+oem_period",
        "command": "gitlens.diffWithWorking",
        "when": "editorTextFocus && gitlens:enabled && config.gitlens.keymap == 'chorded' && resourceScheme =~ /^(gitlens|git|pr)$/",
        "title_ai": "Diff with Working",
        "title": "GitLens: Open Changes with Working File"
    },
    {
        "key": "shift+alt+oem_period",
        "command": "gitlens.diffWithWorking",
        "when": "editorTextFocus && gitlens:enabled && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/",
        "title_ai": "Diff with Working",
        "title": "GitLens: Open Changes with Working File"
    },
    {
        "key": "alt+oem_2",
        "command": "gitlens.gitCommands",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'",
        "title_ai": "Run Git Command",
        "title": "GitLens: Git Command Palette"
    },
    {
        "key": "ctrl+shift+g oem_2",
        "command": "gitlens.gitCommands",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'",
        "title_ai": "Run Git Command",
        "title": "GitLens: Git Command Palette"
    },
    {
        "key": "alt+c",
        "command": "gitlens.showQuickCommitFileDetails",
        "when": "editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'alternate'",
        "title_ai": "Show Quick Commit File Details",
        "title": "GitLens: Quick Show Line Commit"
    },
    {
        "key": "ctrl+shift+g c",
        "command": "gitlens.showQuickCommitFileDetails",
        "when": "editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'chorded'",
        "title_ai": "Show Quick Commit File Details",
        "title": "GitLens: Quick Show Line Commit"
    },
    {
        "key": "alt+h",
        "command": "gitlens.showQuickFileHistory",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'",
        "title_ai": "Show Quick File History",
        "title": "GitLens: Show File History"
    },
    {
        "key": "ctrl+shift+g h",
        "command": "gitlens.showQuickFileHistory",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'",
        "title_ai": "Show Quick File History",
        "title": "GitLens: Show File History"
    },
    {
        "key": "ctrl+shift+g shift+h",
        "command": "gitlens.showQuickRepoHistory",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'",
        "title_ai": "Show Quick Repository History",
        "title": "GitLens: Show Current Branch History"
    },
    {
        "key": "shift+alt+h",
        "command": "gitlens.showQuickRepoHistory",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'",
        "title_ai": "Show Quick Repository History",
        "title": "GitLens: Show Current Branch History"
    },
    {
        "key": "alt+s",
        "command": "gitlens.showQuickRepoStatus",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'alternate'",
        "title_ai": "Show Quick Repository Status",
        "title": "GitLens: Show Repository Status"
    },
    {
        "key": "ctrl+shift+g s",
        "command": "gitlens.showQuickRepoStatus",
        "when": "!gitlens:disabled && config.gitlens.keymap == 'chorded'",
        "title_ai": "Show Quick Repository Status",
        "title": "GitLens: Show Repository Status"
    },
    {
        "key": "ctrl+shift+g shift+b",
        "command": "gitlens.toggleCodeLens",
        "when": "editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens && config.gitlens.keymap == 'chorded'",
        "title_ai": "Toggle GitLens CodeLens",
        "title": "GitLens: Toggle Git CodeLens"
    },
    {
        "key": "shift+alt+b",
        "command": "gitlens.toggleCodeLens",
        "when": "editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens && config.gitlens.keymap == 'alternate'",
        "title_ai": "Toggle GitLens CodeLens",
        "title": "GitLens: Toggle Git CodeLens"
    },
    {
        "key": "alt+b",
        "command": "gitlens.toggleFileBlame",
        "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:blameable'",
        "title_ai": "Toggle File Blame",
        "title": "GitLens: Toggle File Blame"
    },
    {
        "key": "ctrl+shift+g b",
        "command": "gitlens.toggleFileBlame",
        "when": "editorTextFocus && config.gitlens.keymap == 'chorded' && resource in 'gitlens:tabs:blameable'",
        "title_ai": "Toggle File Blame",
        "title": "GitLens: Toggle File Blame"
    },
    {
        "key": "ctrl+c",
        "command": "gitlens.views.branches.copy",
        "when": "focusedView == 'gitlens.views.branches'",
        "title_ai": "Copy Branches",
        "title": "Copy"
    },
    {
        "key": "ctrl+c",
        "command": "gitlens.views.commits.copy",
        "when": "focusedView == 'gitlens.views.commits'",
        "title_ai": "Copy Commits",
        "title": "Copy"
    },
    {
        "key": "ctrl+c",
        "command": "gitlens.views.contributors.copy",
        "when": "focusedView == 'gitlens.views.contributors'",
        "title_ai": "Copy Contributors",
        "title": "Copy"
    },
    {
        "key": "ctrl+c",
        "command": "gitlens.views.drafts.copy",
        "when": "focusedView == 'gitlens.views.drafts'",
        "title_ai": "Copy Drafts",
        "title": "Copy"
    },
    {
        "key": "ctrl+c",
        "command": "gitlens.views.fileHistory.copy",
        "when": "focusedView == 'gitlens.views.fileHistory'",
        "title_ai": "Copy File History",
        "title": "Copy"
    },
    {
        "key": "ctrl+c",
        "command": "gitlens.views.lineHistory.copy",
        "when": "focusedView == 'gitlens.views.lineHistory'",
        "title_ai": "Copy Line History",
        "title": "Copy"
    },
    {
        "key": "ctrl+c",
        "command": "gitlens.views.pullRequest.copy",
        "when": "focusedView == 'gitlens.views.pullRequest'",
        "title_ai": "Copy Pull Request",
        "title": "Copy"
    },
    {
        "key": "ctrl+c",
        "command": "gitlens.views.remotes.copy",
        "when": "focusedView == 'gitlens.views.remotes'",
        "title_ai": "Copy Remotes",
        "title": "Copy"
    },
    {
        "key": "ctrl+c",
        "command": "gitlens.views.repositories.copy",
        "when": "focusedView == 'gitlens.views.repositories'",
        "title_ai": "Copy Repositories",
        "title": "Copy"
    },
    {
        "key": "2",
        "command": "gitlens.views.scm.grouped.branches",
        "when": "config.gitlens.views.scm.grouped.views.branches && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'",
        "title_ai": "SCM Grouped: Branches",
        "title": "Branches"
    },
    {
        "key": "1",
        "command": "gitlens.views.scm.grouped.commits",
        "when": "config.gitlens.views.scm.grouped.views.commits && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'",
        "title_ai": "SCM Grouped: Commits",
        "title": "Commits"
    },
    {
        "key": "7",
        "command": "gitlens.views.scm.grouped.contributors",
        "when": "config.gitlens.views.scm.grouped.views.contributors && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'",
        "title_ai": "SCM Grouped: Contributors",
        "title": "Contributors"
    },
    {
        "key": "0",
        "command": "gitlens.views.scm.grouped.launchpad",
        "when": "config.gitlens.views.scm.grouped.views.launchpad && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'",
        "title_ai": "SCM Grouped: Launchpad",
        "title": "Launchpad"
    },
    {
        "key": "3",
        "command": "gitlens.views.scm.grouped.remotes",
        "when": "config.gitlens.views.scm.grouped.views.remotes && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'",
        "title_ai": "SCM Grouped: Remotes",
        "title": "Remotes"
    },
    {
        "key": "8",
        "command": "gitlens.views.scm.grouped.repositories",
        "when": "config.gitlens.views.scm.grouped.views.repositories && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'",
        "title_ai": "SCM Grouped: Repositories",
        "title": "Repositories"
    },
    {
        "key": "9",
        "command": "gitlens.views.scm.grouped.searchAndCompare",
        "when": "config.gitlens.views.scm.grouped.views.searchAndCompare && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'",
        "title_ai": "SCM Grouped: Search and Compare",
        "title": "Search & Compare"
    },
    {
        "key": "4",
        "command": "gitlens.views.scm.grouped.stashes",
        "when": "config.gitlens.views.scm.grouped.views.stashes && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'",
        "title_ai": "SCM Grouped: Stashes",
        "title": "Stashes"
    },
    {
        "key": "5",
        "command": "gitlens.views.scm.grouped.tags",
        "when": "config.gitlens.views.scm.grouped.views.tags && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'",
        "title_ai": "SCM Grouped: Tags",
        "title": "Tags"
    },
    {
        "key": "6",
        "command": "gitlens.views.scm.grouped.worktrees",
        "when": "config.gitlens.views.scm.grouped.views.worktrees && !gitlens:views:scm:grouped:welcome && focusedView == 'gitlens.views.scm.grouped'",
        "title_ai": "SCM Grouped: Worktrees",
        "title": "Worktrees"
    },
    {
        "key": "ctrl+c",
        "command": "gitlens.views.searchAndCompare.copy",
        "when": "focusedView == 'gitlens.views.searchAndCompare'",
        "title_ai": "Copy Search and Compare",
        "title": "Copy"
    },
    {
        "key": "ctrl+c",
        "command": "gitlens.views.stashes.copy",
        "when": "focusedView == 'gitlens.views.stashes'",
        "title_ai": "Copy Stashes",
        "title": "Copy"
    },
    {
        "key": "ctrl+c",
        "command": "gitlens.views.tags.copy",
        "when": "focusedView == 'gitlens.views.tags'",
        "title_ai": "Copy Tags",
        "title": "Copy"
    },
    {
        "key": "ctrl+c",
        "command": "gitlens.views.workspaces.copy",
        "when": "focusedView == 'gitlens.views.workspaces'",
        "title_ai": "Copy Workspaces",
        "title": "Copy"
    },
    {
        "key": "ctrl+c",
        "command": "gitlens.views.worktrees.copy",
        "when": "focusedView == 'gitlens.views.worktrees'",
        "title_ai": "Copy Worktrees",
        "title": "Copy"
    },
    {
        "key": "ctrl+oem_period",
        "command": "acceptSelectedCodeAction",
        "when": "codeActionMenuVisible",
        "title_ai": "Accept Selected Code Action"
    },
    {
        "key": "enter",
        "command": "acceptSelectedCodeAction",
        "when": "codeActionMenuVisible",
        "title_ai": "Accept Selected Code Action"
    },
    {
        "key": "shift+escape",
        "command": "hideCodeActionWidget",
        "when": "codeActionMenuVisible",
        "title_ai": "Hide Code Action Widget"
    },
    {
        "key": "escape",
        "command": "hideCodeActionWidget",
        "when": "codeActionMenuVisible",
        "title_ai": "Hide Code Action Widget"
    },
    {
        "key": "ctrl+enter",
        "command": "previewSelectedCodeAction",
        "when": "codeActionMenuVisible",
        "title_ai": "Preview Selected Code Action"
    },
    {
        "key": "ctrl+down",
        "command": "selectNextCodeAction",
        "when": "codeActionMenuVisible",
        "title_ai": "Select Next Code Action"
    },
    {
        "key": "down",
        "command": "selectNextCodeAction",
        "when": "codeActionMenuVisible",
        "title_ai": "Select Next Code Action"
    },
    {
        "key": "ctrl+up",
        "command": "selectPrevCodeAction",
        "when": "codeActionMenuVisible",
        "title_ai": "Select Previous Code Action"
    },
    {
        "key": "up",
        "command": "selectPrevCodeAction",
        "when": "codeActionMenuVisible",
        "title_ai": "Select Previous Code Action"
    },
    {
        "key": "escape",
        "command": "diffEditor.exitCompareMove",
        "when": "comparingMovedCode",
        "title_ai": "Exit Compare Move in Diff Editor"
    }
]